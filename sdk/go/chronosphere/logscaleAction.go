// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"errors"
	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LogscaleAction struct {
	pulumi.CustomResourceState

	EmailAction            LogscaleActionEmailActionPtrOutput            `pulumi:"emailAction"`
	HumioAction            LogscaleActionHumioActionPtrOutput            `pulumi:"humioAction"`
	Name                   pulumi.StringOutput                           `pulumi:"name"`
	OpsGenieAction         LogscaleActionOpsGenieActionPtrOutput         `pulumi:"opsGenieAction"`
	PagerDutyAction        LogscaleActionPagerDutyActionPtrOutput        `pulumi:"pagerDutyAction"`
	Repository             pulumi.StringOutput                           `pulumi:"repository"`
	SlackAction            LogscaleActionSlackActionPtrOutput            `pulumi:"slackAction"`
	SlackPostMessageAction LogscaleActionSlackPostMessageActionPtrOutput `pulumi:"slackPostMessageAction"`
	Slug                   pulumi.StringOutput                           `pulumi:"slug"`
	UploadFileAction       LogscaleActionUploadFileActionPtrOutput       `pulumi:"uploadFileAction"`
	VictorOpsAction        LogscaleActionVictorOpsActionPtrOutput        `pulumi:"victorOpsAction"`
	WebhookAction          LogscaleActionWebhookActionPtrOutput          `pulumi:"webhookAction"`
}

// NewLogscaleAction registers a new resource with the given unique name, arguments, and options.
func NewLogscaleAction(ctx *pulumi.Context,
	name string, args *LogscaleActionArgs, opts ...pulumi.ResourceOption) (*LogscaleAction, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Repository == nil {
		return nil, errors.New("invalid value for required argument 'Repository'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource LogscaleAction
	err := ctx.RegisterResource("chronosphere:index/logscaleAction:LogscaleAction", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLogscaleAction gets an existing LogscaleAction resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogscaleAction(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LogscaleActionState, opts ...pulumi.ResourceOption) (*LogscaleAction, error) {
	var resource LogscaleAction
	err := ctx.ReadResource("chronosphere:index/logscaleAction:LogscaleAction", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LogscaleAction resources.
type logscaleActionState struct {
	EmailAction            *LogscaleActionEmailAction            `pulumi:"emailAction"`
	HumioAction            *LogscaleActionHumioAction            `pulumi:"humioAction"`
	Name                   *string                               `pulumi:"name"`
	OpsGenieAction         *LogscaleActionOpsGenieAction         `pulumi:"opsGenieAction"`
	PagerDutyAction        *LogscaleActionPagerDutyAction        `pulumi:"pagerDutyAction"`
	Repository             *string                               `pulumi:"repository"`
	SlackAction            *LogscaleActionSlackAction            `pulumi:"slackAction"`
	SlackPostMessageAction *LogscaleActionSlackPostMessageAction `pulumi:"slackPostMessageAction"`
	Slug                   *string                               `pulumi:"slug"`
	UploadFileAction       *LogscaleActionUploadFileAction       `pulumi:"uploadFileAction"`
	VictorOpsAction        *LogscaleActionVictorOpsAction        `pulumi:"victorOpsAction"`
	WebhookAction          *LogscaleActionWebhookAction          `pulumi:"webhookAction"`
}

type LogscaleActionState struct {
	EmailAction            LogscaleActionEmailActionPtrInput
	HumioAction            LogscaleActionHumioActionPtrInput
	Name                   pulumi.StringPtrInput
	OpsGenieAction         LogscaleActionOpsGenieActionPtrInput
	PagerDutyAction        LogscaleActionPagerDutyActionPtrInput
	Repository             pulumi.StringPtrInput
	SlackAction            LogscaleActionSlackActionPtrInput
	SlackPostMessageAction LogscaleActionSlackPostMessageActionPtrInput
	Slug                   pulumi.StringPtrInput
	UploadFileAction       LogscaleActionUploadFileActionPtrInput
	VictorOpsAction        LogscaleActionVictorOpsActionPtrInput
	WebhookAction          LogscaleActionWebhookActionPtrInput
}

func (LogscaleActionState) ElementType() reflect.Type {
	return reflect.TypeOf((*logscaleActionState)(nil)).Elem()
}

type logscaleActionArgs struct {
	EmailAction            *LogscaleActionEmailAction            `pulumi:"emailAction"`
	HumioAction            *LogscaleActionHumioAction            `pulumi:"humioAction"`
	Name                   string                                `pulumi:"name"`
	OpsGenieAction         *LogscaleActionOpsGenieAction         `pulumi:"opsGenieAction"`
	PagerDutyAction        *LogscaleActionPagerDutyAction        `pulumi:"pagerDutyAction"`
	Repository             string                                `pulumi:"repository"`
	SlackAction            *LogscaleActionSlackAction            `pulumi:"slackAction"`
	SlackPostMessageAction *LogscaleActionSlackPostMessageAction `pulumi:"slackPostMessageAction"`
	Slug                   *string                               `pulumi:"slug"`
	UploadFileAction       *LogscaleActionUploadFileAction       `pulumi:"uploadFileAction"`
	VictorOpsAction        *LogscaleActionVictorOpsAction        `pulumi:"victorOpsAction"`
	WebhookAction          *LogscaleActionWebhookAction          `pulumi:"webhookAction"`
}

// The set of arguments for constructing a LogscaleAction resource.
type LogscaleActionArgs struct {
	EmailAction            LogscaleActionEmailActionPtrInput
	HumioAction            LogscaleActionHumioActionPtrInput
	Name                   pulumi.StringInput
	OpsGenieAction         LogscaleActionOpsGenieActionPtrInput
	PagerDutyAction        LogscaleActionPagerDutyActionPtrInput
	Repository             pulumi.StringInput
	SlackAction            LogscaleActionSlackActionPtrInput
	SlackPostMessageAction LogscaleActionSlackPostMessageActionPtrInput
	Slug                   pulumi.StringPtrInput
	UploadFileAction       LogscaleActionUploadFileActionPtrInput
	VictorOpsAction        LogscaleActionVictorOpsActionPtrInput
	WebhookAction          LogscaleActionWebhookActionPtrInput
}

func (LogscaleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*logscaleActionArgs)(nil)).Elem()
}

type LogscaleActionInput interface {
	pulumi.Input

	ToLogscaleActionOutput() LogscaleActionOutput
	ToLogscaleActionOutputWithContext(ctx context.Context) LogscaleActionOutput
}

func (*LogscaleAction) ElementType() reflect.Type {
	return reflect.TypeOf((**LogscaleAction)(nil)).Elem()
}

func (i *LogscaleAction) ToLogscaleActionOutput() LogscaleActionOutput {
	return i.ToLogscaleActionOutputWithContext(context.Background())
}

func (i *LogscaleAction) ToLogscaleActionOutputWithContext(ctx context.Context) LogscaleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogscaleActionOutput)
}

// LogscaleActionArrayInput is an input type that accepts LogscaleActionArray and LogscaleActionArrayOutput values.
// You can construct a concrete instance of `LogscaleActionArrayInput` via:
//
//	LogscaleActionArray{ LogscaleActionArgs{...} }
type LogscaleActionArrayInput interface {
	pulumi.Input

	ToLogscaleActionArrayOutput() LogscaleActionArrayOutput
	ToLogscaleActionArrayOutputWithContext(context.Context) LogscaleActionArrayOutput
}

type LogscaleActionArray []LogscaleActionInput

func (LogscaleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogscaleAction)(nil)).Elem()
}

func (i LogscaleActionArray) ToLogscaleActionArrayOutput() LogscaleActionArrayOutput {
	return i.ToLogscaleActionArrayOutputWithContext(context.Background())
}

func (i LogscaleActionArray) ToLogscaleActionArrayOutputWithContext(ctx context.Context) LogscaleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogscaleActionArrayOutput)
}

// LogscaleActionMapInput is an input type that accepts LogscaleActionMap and LogscaleActionMapOutput values.
// You can construct a concrete instance of `LogscaleActionMapInput` via:
//
//	LogscaleActionMap{ "key": LogscaleActionArgs{...} }
type LogscaleActionMapInput interface {
	pulumi.Input

	ToLogscaleActionMapOutput() LogscaleActionMapOutput
	ToLogscaleActionMapOutputWithContext(context.Context) LogscaleActionMapOutput
}

type LogscaleActionMap map[string]LogscaleActionInput

func (LogscaleActionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogscaleAction)(nil)).Elem()
}

func (i LogscaleActionMap) ToLogscaleActionMapOutput() LogscaleActionMapOutput {
	return i.ToLogscaleActionMapOutputWithContext(context.Background())
}

func (i LogscaleActionMap) ToLogscaleActionMapOutputWithContext(ctx context.Context) LogscaleActionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogscaleActionMapOutput)
}

type LogscaleActionOutput struct{ *pulumi.OutputState }

func (LogscaleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogscaleAction)(nil)).Elem()
}

func (o LogscaleActionOutput) ToLogscaleActionOutput() LogscaleActionOutput {
	return o
}

func (o LogscaleActionOutput) ToLogscaleActionOutputWithContext(ctx context.Context) LogscaleActionOutput {
	return o
}

func (o LogscaleActionOutput) EmailAction() LogscaleActionEmailActionPtrOutput {
	return o.ApplyT(func(v *LogscaleAction) LogscaleActionEmailActionPtrOutput { return v.EmailAction }).(LogscaleActionEmailActionPtrOutput)
}

func (o LogscaleActionOutput) HumioAction() LogscaleActionHumioActionPtrOutput {
	return o.ApplyT(func(v *LogscaleAction) LogscaleActionHumioActionPtrOutput { return v.HumioAction }).(LogscaleActionHumioActionPtrOutput)
}

func (o LogscaleActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *LogscaleAction) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o LogscaleActionOutput) OpsGenieAction() LogscaleActionOpsGenieActionPtrOutput {
	return o.ApplyT(func(v *LogscaleAction) LogscaleActionOpsGenieActionPtrOutput { return v.OpsGenieAction }).(LogscaleActionOpsGenieActionPtrOutput)
}

func (o LogscaleActionOutput) PagerDutyAction() LogscaleActionPagerDutyActionPtrOutput {
	return o.ApplyT(func(v *LogscaleAction) LogscaleActionPagerDutyActionPtrOutput { return v.PagerDutyAction }).(LogscaleActionPagerDutyActionPtrOutput)
}

func (o LogscaleActionOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v *LogscaleAction) pulumi.StringOutput { return v.Repository }).(pulumi.StringOutput)
}

func (o LogscaleActionOutput) SlackAction() LogscaleActionSlackActionPtrOutput {
	return o.ApplyT(func(v *LogscaleAction) LogscaleActionSlackActionPtrOutput { return v.SlackAction }).(LogscaleActionSlackActionPtrOutput)
}

func (o LogscaleActionOutput) SlackPostMessageAction() LogscaleActionSlackPostMessageActionPtrOutput {
	return o.ApplyT(func(v *LogscaleAction) LogscaleActionSlackPostMessageActionPtrOutput { return v.SlackPostMessageAction }).(LogscaleActionSlackPostMessageActionPtrOutput)
}

func (o LogscaleActionOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *LogscaleAction) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

func (o LogscaleActionOutput) UploadFileAction() LogscaleActionUploadFileActionPtrOutput {
	return o.ApplyT(func(v *LogscaleAction) LogscaleActionUploadFileActionPtrOutput { return v.UploadFileAction }).(LogscaleActionUploadFileActionPtrOutput)
}

func (o LogscaleActionOutput) VictorOpsAction() LogscaleActionVictorOpsActionPtrOutput {
	return o.ApplyT(func(v *LogscaleAction) LogscaleActionVictorOpsActionPtrOutput { return v.VictorOpsAction }).(LogscaleActionVictorOpsActionPtrOutput)
}

func (o LogscaleActionOutput) WebhookAction() LogscaleActionWebhookActionPtrOutput {
	return o.ApplyT(func(v *LogscaleAction) LogscaleActionWebhookActionPtrOutput { return v.WebhookAction }).(LogscaleActionWebhookActionPtrOutput)
}

type LogscaleActionArrayOutput struct{ *pulumi.OutputState }

func (LogscaleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LogscaleAction)(nil)).Elem()
}

func (o LogscaleActionArrayOutput) ToLogscaleActionArrayOutput() LogscaleActionArrayOutput {
	return o
}

func (o LogscaleActionArrayOutput) ToLogscaleActionArrayOutputWithContext(ctx context.Context) LogscaleActionArrayOutput {
	return o
}

func (o LogscaleActionArrayOutput) Index(i pulumi.IntInput) LogscaleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LogscaleAction {
		return vs[0].([]*LogscaleAction)[vs[1].(int)]
	}).(LogscaleActionOutput)
}

type LogscaleActionMapOutput struct{ *pulumi.OutputState }

func (LogscaleActionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LogscaleAction)(nil)).Elem()
}

func (o LogscaleActionMapOutput) ToLogscaleActionMapOutput() LogscaleActionMapOutput {
	return o
}

func (o LogscaleActionMapOutput) ToLogscaleActionMapOutputWithContext(ctx context.Context) LogscaleActionMapOutput {
	return o
}

func (o LogscaleActionMapOutput) MapIndex(k pulumi.StringInput) LogscaleActionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LogscaleAction {
		return vs[0].(map[string]*LogscaleAction)[vs[1].(string)]
	}).(LogscaleActionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LogscaleActionInput)(nil)).Elem(), &LogscaleAction{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogscaleActionArrayInput)(nil)).Elem(), LogscaleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogscaleActionMapInput)(nil)).Elem(), LogscaleActionMap{})
	pulumi.RegisterOutputType(LogscaleActionOutput{})
	pulumi.RegisterOutputType(LogscaleActionArrayOutput{})
	pulumi.RegisterOutputType(LogscaleActionMapOutput{})
}
