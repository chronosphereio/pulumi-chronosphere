// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DerivedLabelMetricLabel struct {
	ConstructedLabel *DerivedLabelMetricLabelConstructedLabel `pulumi:"constructedLabel"`
	MappingLabel     *DerivedLabelMetricLabelMappingLabel     `pulumi:"mappingLabel"`
}

// DerivedLabelMetricLabelInput is an input type that accepts DerivedLabelMetricLabelArgs and DerivedLabelMetricLabelOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelInput` via:
//
//	DerivedLabelMetricLabelArgs{...}
type DerivedLabelMetricLabelInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelOutput() DerivedLabelMetricLabelOutput
	ToDerivedLabelMetricLabelOutputWithContext(context.Context) DerivedLabelMetricLabelOutput
}

type DerivedLabelMetricLabelArgs struct {
	ConstructedLabel DerivedLabelMetricLabelConstructedLabelPtrInput `pulumi:"constructedLabel"`
	MappingLabel     DerivedLabelMetricLabelMappingLabelPtrInput     `pulumi:"mappingLabel"`
}

func (DerivedLabelMetricLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabel)(nil)).Elem()
}

func (i DerivedLabelMetricLabelArgs) ToDerivedLabelMetricLabelOutput() DerivedLabelMetricLabelOutput {
	return i.ToDerivedLabelMetricLabelOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelArgs) ToDerivedLabelMetricLabelOutputWithContext(ctx context.Context) DerivedLabelMetricLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelOutput)
}

func (i DerivedLabelMetricLabelArgs) ToDerivedLabelMetricLabelPtrOutput() DerivedLabelMetricLabelPtrOutput {
	return i.ToDerivedLabelMetricLabelPtrOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelArgs) ToDerivedLabelMetricLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelOutput).ToDerivedLabelMetricLabelPtrOutputWithContext(ctx)
}

// DerivedLabelMetricLabelPtrInput is an input type that accepts DerivedLabelMetricLabelArgs, DerivedLabelMetricLabelPtr and DerivedLabelMetricLabelPtrOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelPtrInput` via:
//
//	        DerivedLabelMetricLabelArgs{...}
//
//	or:
//
//	        nil
type DerivedLabelMetricLabelPtrInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelPtrOutput() DerivedLabelMetricLabelPtrOutput
	ToDerivedLabelMetricLabelPtrOutputWithContext(context.Context) DerivedLabelMetricLabelPtrOutput
}

type derivedLabelMetricLabelPtrType DerivedLabelMetricLabelArgs

func DerivedLabelMetricLabelPtr(v *DerivedLabelMetricLabelArgs) DerivedLabelMetricLabelPtrInput {
	return (*derivedLabelMetricLabelPtrType)(v)
}

func (*derivedLabelMetricLabelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DerivedLabelMetricLabel)(nil)).Elem()
}

func (i *derivedLabelMetricLabelPtrType) ToDerivedLabelMetricLabelPtrOutput() DerivedLabelMetricLabelPtrOutput {
	return i.ToDerivedLabelMetricLabelPtrOutputWithContext(context.Background())
}

func (i *derivedLabelMetricLabelPtrType) ToDerivedLabelMetricLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelPtrOutput)
}

type DerivedLabelMetricLabelOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabel)(nil)).Elem()
}

func (o DerivedLabelMetricLabelOutput) ToDerivedLabelMetricLabelOutput() DerivedLabelMetricLabelOutput {
	return o
}

func (o DerivedLabelMetricLabelOutput) ToDerivedLabelMetricLabelOutputWithContext(ctx context.Context) DerivedLabelMetricLabelOutput {
	return o
}

func (o DerivedLabelMetricLabelOutput) ToDerivedLabelMetricLabelPtrOutput() DerivedLabelMetricLabelPtrOutput {
	return o.ToDerivedLabelMetricLabelPtrOutputWithContext(context.Background())
}

func (o DerivedLabelMetricLabelOutput) ToDerivedLabelMetricLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DerivedLabelMetricLabel) *DerivedLabelMetricLabel {
		return &v
	}).(DerivedLabelMetricLabelPtrOutput)
}

func (o DerivedLabelMetricLabelOutput) ConstructedLabel() DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabel) *DerivedLabelMetricLabelConstructedLabel { return v.ConstructedLabel }).(DerivedLabelMetricLabelConstructedLabelPtrOutput)
}

func (o DerivedLabelMetricLabelOutput) MappingLabel() DerivedLabelMetricLabelMappingLabelPtrOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabel) *DerivedLabelMetricLabelMappingLabel { return v.MappingLabel }).(DerivedLabelMetricLabelMappingLabelPtrOutput)
}

type DerivedLabelMetricLabelPtrOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DerivedLabelMetricLabel)(nil)).Elem()
}

func (o DerivedLabelMetricLabelPtrOutput) ToDerivedLabelMetricLabelPtrOutput() DerivedLabelMetricLabelPtrOutput {
	return o
}

func (o DerivedLabelMetricLabelPtrOutput) ToDerivedLabelMetricLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelPtrOutput {
	return o
}

func (o DerivedLabelMetricLabelPtrOutput) Elem() DerivedLabelMetricLabelOutput {
	return o.ApplyT(func(v *DerivedLabelMetricLabel) DerivedLabelMetricLabel {
		if v != nil {
			return *v
		}
		var ret DerivedLabelMetricLabel
		return ret
	}).(DerivedLabelMetricLabelOutput)
}

func (o DerivedLabelMetricLabelPtrOutput) ConstructedLabel() DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return o.ApplyT(func(v *DerivedLabelMetricLabel) *DerivedLabelMetricLabelConstructedLabel {
		if v == nil {
			return nil
		}
		return v.ConstructedLabel
	}).(DerivedLabelMetricLabelConstructedLabelPtrOutput)
}

func (o DerivedLabelMetricLabelPtrOutput) MappingLabel() DerivedLabelMetricLabelMappingLabelPtrOutput {
	return o.ApplyT(func(v *DerivedLabelMetricLabel) *DerivedLabelMetricLabelMappingLabel {
		if v == nil {
			return nil
		}
		return v.MappingLabel
	}).(DerivedLabelMetricLabelMappingLabelPtrOutput)
}

type DerivedLabelMetricLabelConstructedLabel struct {
	ValueDefinitions []DerivedLabelMetricLabelConstructedLabelValueDefinition `pulumi:"valueDefinitions"`
}

// DerivedLabelMetricLabelConstructedLabelInput is an input type that accepts DerivedLabelMetricLabelConstructedLabelArgs and DerivedLabelMetricLabelConstructedLabelOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelConstructedLabelInput` via:
//
//	DerivedLabelMetricLabelConstructedLabelArgs{...}
type DerivedLabelMetricLabelConstructedLabelInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelConstructedLabelOutput() DerivedLabelMetricLabelConstructedLabelOutput
	ToDerivedLabelMetricLabelConstructedLabelOutputWithContext(context.Context) DerivedLabelMetricLabelConstructedLabelOutput
}

type DerivedLabelMetricLabelConstructedLabelArgs struct {
	ValueDefinitions DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayInput `pulumi:"valueDefinitions"`
}

func (DerivedLabelMetricLabelConstructedLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabel)(nil)).Elem()
}

func (i DerivedLabelMetricLabelConstructedLabelArgs) ToDerivedLabelMetricLabelConstructedLabelOutput() DerivedLabelMetricLabelConstructedLabelOutput {
	return i.ToDerivedLabelMetricLabelConstructedLabelOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelConstructedLabelArgs) ToDerivedLabelMetricLabelConstructedLabelOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelConstructedLabelOutput)
}

func (i DerivedLabelMetricLabelConstructedLabelArgs) ToDerivedLabelMetricLabelConstructedLabelPtrOutput() DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return i.ToDerivedLabelMetricLabelConstructedLabelPtrOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelConstructedLabelArgs) ToDerivedLabelMetricLabelConstructedLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelConstructedLabelOutput).ToDerivedLabelMetricLabelConstructedLabelPtrOutputWithContext(ctx)
}

// DerivedLabelMetricLabelConstructedLabelPtrInput is an input type that accepts DerivedLabelMetricLabelConstructedLabelArgs, DerivedLabelMetricLabelConstructedLabelPtr and DerivedLabelMetricLabelConstructedLabelPtrOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelConstructedLabelPtrInput` via:
//
//	        DerivedLabelMetricLabelConstructedLabelArgs{...}
//
//	or:
//
//	        nil
type DerivedLabelMetricLabelConstructedLabelPtrInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelConstructedLabelPtrOutput() DerivedLabelMetricLabelConstructedLabelPtrOutput
	ToDerivedLabelMetricLabelConstructedLabelPtrOutputWithContext(context.Context) DerivedLabelMetricLabelConstructedLabelPtrOutput
}

type derivedLabelMetricLabelConstructedLabelPtrType DerivedLabelMetricLabelConstructedLabelArgs

func DerivedLabelMetricLabelConstructedLabelPtr(v *DerivedLabelMetricLabelConstructedLabelArgs) DerivedLabelMetricLabelConstructedLabelPtrInput {
	return (*derivedLabelMetricLabelConstructedLabelPtrType)(v)
}

func (*derivedLabelMetricLabelConstructedLabelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DerivedLabelMetricLabelConstructedLabel)(nil)).Elem()
}

func (i *derivedLabelMetricLabelConstructedLabelPtrType) ToDerivedLabelMetricLabelConstructedLabelPtrOutput() DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return i.ToDerivedLabelMetricLabelConstructedLabelPtrOutputWithContext(context.Background())
}

func (i *derivedLabelMetricLabelConstructedLabelPtrType) ToDerivedLabelMetricLabelConstructedLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelConstructedLabelPtrOutput)
}

type DerivedLabelMetricLabelConstructedLabelOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelConstructedLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabel)(nil)).Elem()
}

func (o DerivedLabelMetricLabelConstructedLabelOutput) ToDerivedLabelMetricLabelConstructedLabelOutput() DerivedLabelMetricLabelConstructedLabelOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelOutput) ToDerivedLabelMetricLabelConstructedLabelOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelOutput) ToDerivedLabelMetricLabelConstructedLabelPtrOutput() DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return o.ToDerivedLabelMetricLabelConstructedLabelPtrOutputWithContext(context.Background())
}

func (o DerivedLabelMetricLabelConstructedLabelOutput) ToDerivedLabelMetricLabelConstructedLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DerivedLabelMetricLabelConstructedLabel) *DerivedLabelMetricLabelConstructedLabel {
		return &v
	}).(DerivedLabelMetricLabelConstructedLabelPtrOutput)
}

func (o DerivedLabelMetricLabelConstructedLabelOutput) ValueDefinitions() DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelConstructedLabel) []DerivedLabelMetricLabelConstructedLabelValueDefinition {
		return v.ValueDefinitions
	}).(DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput)
}

type DerivedLabelMetricLabelConstructedLabelPtrOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelConstructedLabelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DerivedLabelMetricLabelConstructedLabel)(nil)).Elem()
}

func (o DerivedLabelMetricLabelConstructedLabelPtrOutput) ToDerivedLabelMetricLabelConstructedLabelPtrOutput() DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelPtrOutput) ToDerivedLabelMetricLabelConstructedLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelPtrOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelPtrOutput) Elem() DerivedLabelMetricLabelConstructedLabelOutput {
	return o.ApplyT(func(v *DerivedLabelMetricLabelConstructedLabel) DerivedLabelMetricLabelConstructedLabel {
		if v != nil {
			return *v
		}
		var ret DerivedLabelMetricLabelConstructedLabel
		return ret
	}).(DerivedLabelMetricLabelConstructedLabelOutput)
}

func (o DerivedLabelMetricLabelConstructedLabelPtrOutput) ValueDefinitions() DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput {
	return o.ApplyT(func(v *DerivedLabelMetricLabelConstructedLabel) []DerivedLabelMetricLabelConstructedLabelValueDefinition {
		if v == nil {
			return nil
		}
		return v.ValueDefinitions
	}).(DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput)
}

type DerivedLabelMetricLabelConstructedLabelValueDefinition struct {
	Filters []DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter `pulumi:"filters"`
	Value   string                                                         `pulumi:"value"`
}

// DerivedLabelMetricLabelConstructedLabelValueDefinitionInput is an input type that accepts DerivedLabelMetricLabelConstructedLabelValueDefinitionArgs and DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelConstructedLabelValueDefinitionInput` via:
//
//	DerivedLabelMetricLabelConstructedLabelValueDefinitionArgs{...}
type DerivedLabelMetricLabelConstructedLabelValueDefinitionInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelConstructedLabelValueDefinitionOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput
	ToDerivedLabelMetricLabelConstructedLabelValueDefinitionOutputWithContext(context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput
}

type DerivedLabelMetricLabelConstructedLabelValueDefinitionArgs struct {
	Filters DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayInput `pulumi:"filters"`
	Value   pulumi.StringInput                                                     `pulumi:"value"`
}

func (DerivedLabelMetricLabelConstructedLabelValueDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelValueDefinition)(nil)).Elem()
}

func (i DerivedLabelMetricLabelConstructedLabelValueDefinitionArgs) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput {
	return i.ToDerivedLabelMetricLabelConstructedLabelValueDefinitionOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelConstructedLabelValueDefinitionArgs) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput)
}

// DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayInput is an input type that accepts DerivedLabelMetricLabelConstructedLabelValueDefinitionArray and DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayInput` via:
//
//	DerivedLabelMetricLabelConstructedLabelValueDefinitionArray{ DerivedLabelMetricLabelConstructedLabelValueDefinitionArgs{...} }
type DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput
	ToDerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutputWithContext(context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput
}

type DerivedLabelMetricLabelConstructedLabelValueDefinitionArray []DerivedLabelMetricLabelConstructedLabelValueDefinitionInput

func (DerivedLabelMetricLabelConstructedLabelValueDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelConstructedLabelValueDefinition)(nil)).Elem()
}

func (i DerivedLabelMetricLabelConstructedLabelValueDefinitionArray) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput {
	return i.ToDerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelConstructedLabelValueDefinitionArray) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput)
}

type DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelValueDefinition)(nil)).Elem()
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput) Filters() DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelConstructedLabelValueDefinition) []DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter {
		return v.Filters
	}).(DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput)
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelConstructedLabelValueDefinition) string { return v.Value }).(pulumi.StringOutput)
}

type DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelConstructedLabelValueDefinition)(nil)).Elem()
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput) Index(i pulumi.IntInput) DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DerivedLabelMetricLabelConstructedLabelValueDefinition {
		return vs[0].([]DerivedLabelMetricLabelConstructedLabelValueDefinition)[vs[1].(int)]
	}).(DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput)
}

type DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter struct {
	Name      string `pulumi:"name"`
	ValueGlob string `pulumi:"valueGlob"`
}

// DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterInput is an input type that accepts DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArgs and DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterInput` via:
//
//	DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArgs{...}
type DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput
	ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutputWithContext(context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput
}

type DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArgs struct {
	Name      pulumi.StringInput `pulumi:"name"`
	ValueGlob pulumi.StringInput `pulumi:"valueGlob"`
}

func (DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter)(nil)).Elem()
}

func (i DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArgs) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput {
	return i.ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArgs) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput)
}

// DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayInput is an input type that accepts DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArray and DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayInput` via:
//
//	DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArray{ DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArgs{...} }
type DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput
	ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutputWithContext(context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput
}

type DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArray []DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterInput

func (DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter)(nil)).Elem()
}

func (i DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArray) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput {
	return i.ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArray) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput)
}

type DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter)(nil)).Elem()
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput) ValueGlob() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter) string { return v.ValueGlob }).(pulumi.StringOutput)
}

type DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter)(nil)).Elem()
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput() DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput) ToDerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput) Index(i pulumi.IntInput) DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter {
		return vs[0].([]DerivedLabelMetricLabelConstructedLabelValueDefinitionFilter)[vs[1].(int)]
	}).(DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput)
}

type DerivedLabelMetricLabelMappingLabel struct {
	NameMappings  []DerivedLabelMetricLabelMappingLabelNameMapping  `pulumi:"nameMappings"`
	ValueMappings []DerivedLabelMetricLabelMappingLabelValueMapping `pulumi:"valueMappings"`
}

// DerivedLabelMetricLabelMappingLabelInput is an input type that accepts DerivedLabelMetricLabelMappingLabelArgs and DerivedLabelMetricLabelMappingLabelOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelInput` via:
//
//	DerivedLabelMetricLabelMappingLabelArgs{...}
type DerivedLabelMetricLabelMappingLabelInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelOutput() DerivedLabelMetricLabelMappingLabelOutput
	ToDerivedLabelMetricLabelMappingLabelOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelOutput
}

type DerivedLabelMetricLabelMappingLabelArgs struct {
	NameMappings  DerivedLabelMetricLabelMappingLabelNameMappingArrayInput  `pulumi:"nameMappings"`
	ValueMappings DerivedLabelMetricLabelMappingLabelValueMappingArrayInput `pulumi:"valueMappings"`
}

func (DerivedLabelMetricLabelMappingLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabel)(nil)).Elem()
}

func (i DerivedLabelMetricLabelMappingLabelArgs) ToDerivedLabelMetricLabelMappingLabelOutput() DerivedLabelMetricLabelMappingLabelOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelArgs) ToDerivedLabelMetricLabelMappingLabelOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelOutput)
}

func (i DerivedLabelMetricLabelMappingLabelArgs) ToDerivedLabelMetricLabelMappingLabelPtrOutput() DerivedLabelMetricLabelMappingLabelPtrOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelPtrOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelArgs) ToDerivedLabelMetricLabelMappingLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelOutput).ToDerivedLabelMetricLabelMappingLabelPtrOutputWithContext(ctx)
}

// DerivedLabelMetricLabelMappingLabelPtrInput is an input type that accepts DerivedLabelMetricLabelMappingLabelArgs, DerivedLabelMetricLabelMappingLabelPtr and DerivedLabelMetricLabelMappingLabelPtrOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelPtrInput` via:
//
//	        DerivedLabelMetricLabelMappingLabelArgs{...}
//
//	or:
//
//	        nil
type DerivedLabelMetricLabelMappingLabelPtrInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelPtrOutput() DerivedLabelMetricLabelMappingLabelPtrOutput
	ToDerivedLabelMetricLabelMappingLabelPtrOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelPtrOutput
}

type derivedLabelMetricLabelMappingLabelPtrType DerivedLabelMetricLabelMappingLabelArgs

func DerivedLabelMetricLabelMappingLabelPtr(v *DerivedLabelMetricLabelMappingLabelArgs) DerivedLabelMetricLabelMappingLabelPtrInput {
	return (*derivedLabelMetricLabelMappingLabelPtrType)(v)
}

func (*derivedLabelMetricLabelMappingLabelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DerivedLabelMetricLabelMappingLabel)(nil)).Elem()
}

func (i *derivedLabelMetricLabelMappingLabelPtrType) ToDerivedLabelMetricLabelMappingLabelPtrOutput() DerivedLabelMetricLabelMappingLabelPtrOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelPtrOutputWithContext(context.Background())
}

func (i *derivedLabelMetricLabelMappingLabelPtrType) ToDerivedLabelMetricLabelMappingLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelPtrOutput)
}

type DerivedLabelMetricLabelMappingLabelOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabel)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelOutput) ToDerivedLabelMetricLabelMappingLabelOutput() DerivedLabelMetricLabelMappingLabelOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelOutput) ToDerivedLabelMetricLabelMappingLabelOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelOutput) ToDerivedLabelMetricLabelMappingLabelPtrOutput() DerivedLabelMetricLabelMappingLabelPtrOutput {
	return o.ToDerivedLabelMetricLabelMappingLabelPtrOutputWithContext(context.Background())
}

func (o DerivedLabelMetricLabelMappingLabelOutput) ToDerivedLabelMetricLabelMappingLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DerivedLabelMetricLabelMappingLabel) *DerivedLabelMetricLabelMappingLabel {
		return &v
	}).(DerivedLabelMetricLabelMappingLabelPtrOutput)
}

func (o DerivedLabelMetricLabelMappingLabelOutput) NameMappings() DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabel) []DerivedLabelMetricLabelMappingLabelNameMapping {
		return v.NameMappings
	}).(DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput)
}

func (o DerivedLabelMetricLabelMappingLabelOutput) ValueMappings() DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabel) []DerivedLabelMetricLabelMappingLabelValueMapping {
		return v.ValueMappings
	}).(DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput)
}

type DerivedLabelMetricLabelMappingLabelPtrOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DerivedLabelMetricLabelMappingLabel)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelPtrOutput) ToDerivedLabelMetricLabelMappingLabelPtrOutput() DerivedLabelMetricLabelMappingLabelPtrOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelPtrOutput) ToDerivedLabelMetricLabelMappingLabelPtrOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelPtrOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelPtrOutput) Elem() DerivedLabelMetricLabelMappingLabelOutput {
	return o.ApplyT(func(v *DerivedLabelMetricLabelMappingLabel) DerivedLabelMetricLabelMappingLabel {
		if v != nil {
			return *v
		}
		var ret DerivedLabelMetricLabelMappingLabel
		return ret
	}).(DerivedLabelMetricLabelMappingLabelOutput)
}

func (o DerivedLabelMetricLabelMappingLabelPtrOutput) NameMappings() DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput {
	return o.ApplyT(func(v *DerivedLabelMetricLabelMappingLabel) []DerivedLabelMetricLabelMappingLabelNameMapping {
		if v == nil {
			return nil
		}
		return v.NameMappings
	}).(DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput)
}

func (o DerivedLabelMetricLabelMappingLabelPtrOutput) ValueMappings() DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput {
	return o.ApplyT(func(v *DerivedLabelMetricLabelMappingLabel) []DerivedLabelMetricLabelMappingLabelValueMapping {
		if v == nil {
			return nil
		}
		return v.ValueMappings
	}).(DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput)
}

type DerivedLabelMetricLabelMappingLabelNameMapping struct {
	Filters       []DerivedLabelMetricLabelMappingLabelNameMappingFilter       `pulumi:"filters"`
	SourceLabel   string                                                       `pulumi:"sourceLabel"`
	ValueMappings []DerivedLabelMetricLabelMappingLabelNameMappingValueMapping `pulumi:"valueMappings"`
}

// DerivedLabelMetricLabelMappingLabelNameMappingInput is an input type that accepts DerivedLabelMetricLabelMappingLabelNameMappingArgs and DerivedLabelMetricLabelMappingLabelNameMappingOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelNameMappingInput` via:
//
//	DerivedLabelMetricLabelMappingLabelNameMappingArgs{...}
type DerivedLabelMetricLabelMappingLabelNameMappingInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelNameMappingOutput() DerivedLabelMetricLabelMappingLabelNameMappingOutput
	ToDerivedLabelMetricLabelMappingLabelNameMappingOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelNameMappingOutput
}

type DerivedLabelMetricLabelMappingLabelNameMappingArgs struct {
	Filters       DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayInput       `pulumi:"filters"`
	SourceLabel   pulumi.StringInput                                                   `pulumi:"sourceLabel"`
	ValueMappings DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayInput `pulumi:"valueMappings"`
}

func (DerivedLabelMetricLabelMappingLabelNameMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMapping)(nil)).Elem()
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingArgs) ToDerivedLabelMetricLabelMappingLabelNameMappingOutput() DerivedLabelMetricLabelMappingLabelNameMappingOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelNameMappingOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingArgs) ToDerivedLabelMetricLabelMappingLabelNameMappingOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelNameMappingOutput)
}

// DerivedLabelMetricLabelMappingLabelNameMappingArrayInput is an input type that accepts DerivedLabelMetricLabelMappingLabelNameMappingArray and DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelNameMappingArrayInput` via:
//
//	DerivedLabelMetricLabelMappingLabelNameMappingArray{ DerivedLabelMetricLabelMappingLabelNameMappingArgs{...} }
type DerivedLabelMetricLabelMappingLabelNameMappingArrayInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelNameMappingArrayOutput() DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput
	ToDerivedLabelMetricLabelMappingLabelNameMappingArrayOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput
}

type DerivedLabelMetricLabelMappingLabelNameMappingArray []DerivedLabelMetricLabelMappingLabelNameMappingInput

func (DerivedLabelMetricLabelMappingLabelNameMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelMappingLabelNameMapping)(nil)).Elem()
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingArray) ToDerivedLabelMetricLabelMappingLabelNameMappingArrayOutput() DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelNameMappingArrayOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingArray) ToDerivedLabelMetricLabelMappingLabelNameMappingArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput)
}

type DerivedLabelMetricLabelMappingLabelNameMappingOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelNameMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMapping)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingOutput() DerivedLabelMetricLabelMappingLabelNameMappingOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingOutput) Filters() DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabelNameMapping) []DerivedLabelMetricLabelMappingLabelNameMappingFilter {
		return v.Filters
	}).(DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput)
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingOutput) SourceLabel() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabelNameMapping) string { return v.SourceLabel }).(pulumi.StringOutput)
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingOutput) ValueMappings() DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabelNameMapping) []DerivedLabelMetricLabelMappingLabelNameMappingValueMapping {
		return v.ValueMappings
	}).(DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput)
}

type DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelMappingLabelNameMapping)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingArrayOutput() DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput) Index(i pulumi.IntInput) DerivedLabelMetricLabelMappingLabelNameMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DerivedLabelMetricLabelMappingLabelNameMapping {
		return vs[0].([]DerivedLabelMetricLabelMappingLabelNameMapping)[vs[1].(int)]
	}).(DerivedLabelMetricLabelMappingLabelNameMappingOutput)
}

type DerivedLabelMetricLabelMappingLabelNameMappingFilter struct {
	Name      string `pulumi:"name"`
	ValueGlob string `pulumi:"valueGlob"`
}

// DerivedLabelMetricLabelMappingLabelNameMappingFilterInput is an input type that accepts DerivedLabelMetricLabelMappingLabelNameMappingFilterArgs and DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelNameMappingFilterInput` via:
//
//	DerivedLabelMetricLabelMappingLabelNameMappingFilterArgs{...}
type DerivedLabelMetricLabelMappingLabelNameMappingFilterInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelNameMappingFilterOutput() DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput
	ToDerivedLabelMetricLabelMappingLabelNameMappingFilterOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput
}

type DerivedLabelMetricLabelMappingLabelNameMappingFilterArgs struct {
	Name      pulumi.StringInput `pulumi:"name"`
	ValueGlob pulumi.StringInput `pulumi:"valueGlob"`
}

func (DerivedLabelMetricLabelMappingLabelNameMappingFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingFilter)(nil)).Elem()
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingFilterArgs) ToDerivedLabelMetricLabelMappingLabelNameMappingFilterOutput() DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelNameMappingFilterOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingFilterArgs) ToDerivedLabelMetricLabelMappingLabelNameMappingFilterOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput)
}

// DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayInput is an input type that accepts DerivedLabelMetricLabelMappingLabelNameMappingFilterArray and DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayInput` via:
//
//	DerivedLabelMetricLabelMappingLabelNameMappingFilterArray{ DerivedLabelMetricLabelMappingLabelNameMappingFilterArgs{...} }
type DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput() DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput
	ToDerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput
}

type DerivedLabelMetricLabelMappingLabelNameMappingFilterArray []DerivedLabelMetricLabelMappingLabelNameMappingFilterInput

func (DerivedLabelMetricLabelMappingLabelNameMappingFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelMappingLabelNameMappingFilter)(nil)).Elem()
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingFilterArray) ToDerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput() DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingFilterArray) ToDerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput)
}

type DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingFilter)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingFilterOutput() DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingFilterOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabelNameMappingFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput) ValueGlob() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabelNameMappingFilter) string { return v.ValueGlob }).(pulumi.StringOutput)
}

type DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelMappingLabelNameMappingFilter)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput() DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput) Index(i pulumi.IntInput) DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DerivedLabelMetricLabelMappingLabelNameMappingFilter {
		return vs[0].([]DerivedLabelMetricLabelMappingLabelNameMappingFilter)[vs[1].(int)]
	}).(DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput)
}

type DerivedLabelMetricLabelMappingLabelNameMappingValueMapping struct {
	SourceValueGlobs []string `pulumi:"sourceValueGlobs"`
	TargetValue      string   `pulumi:"targetValue"`
}

// DerivedLabelMetricLabelMappingLabelNameMappingValueMappingInput is an input type that accepts DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArgs and DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelNameMappingValueMappingInput` via:
//
//	DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArgs{...}
type DerivedLabelMetricLabelMappingLabelNameMappingValueMappingInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput() DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput
	ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput
}

type DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArgs struct {
	SourceValueGlobs pulumi.StringArrayInput `pulumi:"sourceValueGlobs"`
	TargetValue      pulumi.StringInput      `pulumi:"targetValue"`
}

func (DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingValueMapping)(nil)).Elem()
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArgs) ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput() DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArgs) ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput)
}

// DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayInput is an input type that accepts DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArray and DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayInput` via:
//
//	DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArray{ DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArgs{...} }
type DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput() DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput
	ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput
}

type DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArray []DerivedLabelMetricLabelMappingLabelNameMappingValueMappingInput

func (DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelMappingLabelNameMappingValueMapping)(nil)).Elem()
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArray) ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput() DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArray) ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput)
}

type DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingValueMapping)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput() DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput) SourceValueGlobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabelNameMappingValueMapping) []string { return v.SourceValueGlobs }).(pulumi.StringArrayOutput)
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput) TargetValue() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabelNameMappingValueMapping) string { return v.TargetValue }).(pulumi.StringOutput)
}

type DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelMappingLabelNameMappingValueMapping)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput() DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput) ToDerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput) Index(i pulumi.IntInput) DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DerivedLabelMetricLabelMappingLabelNameMappingValueMapping {
		return vs[0].([]DerivedLabelMetricLabelMappingLabelNameMappingValueMapping)[vs[1].(int)]
	}).(DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput)
}

type DerivedLabelMetricLabelMappingLabelValueMapping struct {
	SourceValueGlobs []string `pulumi:"sourceValueGlobs"`
	TargetValue      string   `pulumi:"targetValue"`
}

// DerivedLabelMetricLabelMappingLabelValueMappingInput is an input type that accepts DerivedLabelMetricLabelMappingLabelValueMappingArgs and DerivedLabelMetricLabelMappingLabelValueMappingOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelValueMappingInput` via:
//
//	DerivedLabelMetricLabelMappingLabelValueMappingArgs{...}
type DerivedLabelMetricLabelMappingLabelValueMappingInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelValueMappingOutput() DerivedLabelMetricLabelMappingLabelValueMappingOutput
	ToDerivedLabelMetricLabelMappingLabelValueMappingOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelValueMappingOutput
}

type DerivedLabelMetricLabelMappingLabelValueMappingArgs struct {
	SourceValueGlobs pulumi.StringArrayInput `pulumi:"sourceValueGlobs"`
	TargetValue      pulumi.StringInput      `pulumi:"targetValue"`
}

func (DerivedLabelMetricLabelMappingLabelValueMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelValueMapping)(nil)).Elem()
}

func (i DerivedLabelMetricLabelMappingLabelValueMappingArgs) ToDerivedLabelMetricLabelMappingLabelValueMappingOutput() DerivedLabelMetricLabelMappingLabelValueMappingOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelValueMappingOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelValueMappingArgs) ToDerivedLabelMetricLabelMappingLabelValueMappingOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelValueMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelValueMappingOutput)
}

// DerivedLabelMetricLabelMappingLabelValueMappingArrayInput is an input type that accepts DerivedLabelMetricLabelMappingLabelValueMappingArray and DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput values.
// You can construct a concrete instance of `DerivedLabelMetricLabelMappingLabelValueMappingArrayInput` via:
//
//	DerivedLabelMetricLabelMappingLabelValueMappingArray{ DerivedLabelMetricLabelMappingLabelValueMappingArgs{...} }
type DerivedLabelMetricLabelMappingLabelValueMappingArrayInput interface {
	pulumi.Input

	ToDerivedLabelMetricLabelMappingLabelValueMappingArrayOutput() DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput
	ToDerivedLabelMetricLabelMappingLabelValueMappingArrayOutputWithContext(context.Context) DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput
}

type DerivedLabelMetricLabelMappingLabelValueMappingArray []DerivedLabelMetricLabelMappingLabelValueMappingInput

func (DerivedLabelMetricLabelMappingLabelValueMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelMappingLabelValueMapping)(nil)).Elem()
}

func (i DerivedLabelMetricLabelMappingLabelValueMappingArray) ToDerivedLabelMetricLabelMappingLabelValueMappingArrayOutput() DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput {
	return i.ToDerivedLabelMetricLabelMappingLabelValueMappingArrayOutputWithContext(context.Background())
}

func (i DerivedLabelMetricLabelMappingLabelValueMappingArray) ToDerivedLabelMetricLabelMappingLabelValueMappingArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput)
}

type DerivedLabelMetricLabelMappingLabelValueMappingOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelValueMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelValueMapping)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelValueMappingOutput) ToDerivedLabelMetricLabelMappingLabelValueMappingOutput() DerivedLabelMetricLabelMappingLabelValueMappingOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelValueMappingOutput) ToDerivedLabelMetricLabelMappingLabelValueMappingOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelValueMappingOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelValueMappingOutput) SourceValueGlobs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabelValueMapping) []string { return v.SourceValueGlobs }).(pulumi.StringArrayOutput)
}

func (o DerivedLabelMetricLabelMappingLabelValueMappingOutput) TargetValue() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedLabelMetricLabelMappingLabelValueMapping) string { return v.TargetValue }).(pulumi.StringOutput)
}

type DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput struct{ *pulumi.OutputState }

func (DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedLabelMetricLabelMappingLabelValueMapping)(nil)).Elem()
}

func (o DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput) ToDerivedLabelMetricLabelMappingLabelValueMappingArrayOutput() DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput) ToDerivedLabelMetricLabelMappingLabelValueMappingArrayOutputWithContext(ctx context.Context) DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput {
	return o
}

func (o DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput) Index(i pulumi.IntInput) DerivedLabelMetricLabelMappingLabelValueMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DerivedLabelMetricLabelMappingLabelValueMapping {
		return vs[0].([]DerivedLabelMetricLabelMappingLabelValueMapping)[vs[1].(int)]
	}).(DerivedLabelMetricLabelMappingLabelValueMappingOutput)
}

type DerivedMetricQuery struct {
	Query    DerivedMetricQueryQuery     `pulumi:"query"`
	Selector *DerivedMetricQuerySelector `pulumi:"selector"`
}

// DerivedMetricQueryInput is an input type that accepts DerivedMetricQueryArgs and DerivedMetricQueryOutput values.
// You can construct a concrete instance of `DerivedMetricQueryInput` via:
//
//	DerivedMetricQueryArgs{...}
type DerivedMetricQueryInput interface {
	pulumi.Input

	ToDerivedMetricQueryOutput() DerivedMetricQueryOutput
	ToDerivedMetricQueryOutputWithContext(context.Context) DerivedMetricQueryOutput
}

type DerivedMetricQueryArgs struct {
	Query    DerivedMetricQueryQueryInput       `pulumi:"query"`
	Selector DerivedMetricQuerySelectorPtrInput `pulumi:"selector"`
}

func (DerivedMetricQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedMetricQuery)(nil)).Elem()
}

func (i DerivedMetricQueryArgs) ToDerivedMetricQueryOutput() DerivedMetricQueryOutput {
	return i.ToDerivedMetricQueryOutputWithContext(context.Background())
}

func (i DerivedMetricQueryArgs) ToDerivedMetricQueryOutputWithContext(ctx context.Context) DerivedMetricQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedMetricQueryOutput)
}

// DerivedMetricQueryArrayInput is an input type that accepts DerivedMetricQueryArray and DerivedMetricQueryArrayOutput values.
// You can construct a concrete instance of `DerivedMetricQueryArrayInput` via:
//
//	DerivedMetricQueryArray{ DerivedMetricQueryArgs{...} }
type DerivedMetricQueryArrayInput interface {
	pulumi.Input

	ToDerivedMetricQueryArrayOutput() DerivedMetricQueryArrayOutput
	ToDerivedMetricQueryArrayOutputWithContext(context.Context) DerivedMetricQueryArrayOutput
}

type DerivedMetricQueryArray []DerivedMetricQueryInput

func (DerivedMetricQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedMetricQuery)(nil)).Elem()
}

func (i DerivedMetricQueryArray) ToDerivedMetricQueryArrayOutput() DerivedMetricQueryArrayOutput {
	return i.ToDerivedMetricQueryArrayOutputWithContext(context.Background())
}

func (i DerivedMetricQueryArray) ToDerivedMetricQueryArrayOutputWithContext(ctx context.Context) DerivedMetricQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedMetricQueryArrayOutput)
}

type DerivedMetricQueryOutput struct{ *pulumi.OutputState }

func (DerivedMetricQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedMetricQuery)(nil)).Elem()
}

func (o DerivedMetricQueryOutput) ToDerivedMetricQueryOutput() DerivedMetricQueryOutput {
	return o
}

func (o DerivedMetricQueryOutput) ToDerivedMetricQueryOutputWithContext(ctx context.Context) DerivedMetricQueryOutput {
	return o
}

func (o DerivedMetricQueryOutput) Query() DerivedMetricQueryQueryOutput {
	return o.ApplyT(func(v DerivedMetricQuery) DerivedMetricQueryQuery { return v.Query }).(DerivedMetricQueryQueryOutput)
}

func (o DerivedMetricQueryOutput) Selector() DerivedMetricQuerySelectorPtrOutput {
	return o.ApplyT(func(v DerivedMetricQuery) *DerivedMetricQuerySelector { return v.Selector }).(DerivedMetricQuerySelectorPtrOutput)
}

type DerivedMetricQueryArrayOutput struct{ *pulumi.OutputState }

func (DerivedMetricQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedMetricQuery)(nil)).Elem()
}

func (o DerivedMetricQueryArrayOutput) ToDerivedMetricQueryArrayOutput() DerivedMetricQueryArrayOutput {
	return o
}

func (o DerivedMetricQueryArrayOutput) ToDerivedMetricQueryArrayOutputWithContext(ctx context.Context) DerivedMetricQueryArrayOutput {
	return o
}

func (o DerivedMetricQueryArrayOutput) Index(i pulumi.IntInput) DerivedMetricQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DerivedMetricQuery {
		return vs[0].([]DerivedMetricQuery)[vs[1].(int)]
	}).(DerivedMetricQueryOutput)
}

type DerivedMetricQueryQuery struct {
	Expr      string                            `pulumi:"expr"`
	Variables []DerivedMetricQueryQueryVariable `pulumi:"variables"`
}

// DerivedMetricQueryQueryInput is an input type that accepts DerivedMetricQueryQueryArgs and DerivedMetricQueryQueryOutput values.
// You can construct a concrete instance of `DerivedMetricQueryQueryInput` via:
//
//	DerivedMetricQueryQueryArgs{...}
type DerivedMetricQueryQueryInput interface {
	pulumi.Input

	ToDerivedMetricQueryQueryOutput() DerivedMetricQueryQueryOutput
	ToDerivedMetricQueryQueryOutputWithContext(context.Context) DerivedMetricQueryQueryOutput
}

type DerivedMetricQueryQueryArgs struct {
	Expr      pulumi.StringInput                        `pulumi:"expr"`
	Variables DerivedMetricQueryQueryVariableArrayInput `pulumi:"variables"`
}

func (DerivedMetricQueryQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedMetricQueryQuery)(nil)).Elem()
}

func (i DerivedMetricQueryQueryArgs) ToDerivedMetricQueryQueryOutput() DerivedMetricQueryQueryOutput {
	return i.ToDerivedMetricQueryQueryOutputWithContext(context.Background())
}

func (i DerivedMetricQueryQueryArgs) ToDerivedMetricQueryQueryOutputWithContext(ctx context.Context) DerivedMetricQueryQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedMetricQueryQueryOutput)
}

type DerivedMetricQueryQueryOutput struct{ *pulumi.OutputState }

func (DerivedMetricQueryQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedMetricQueryQuery)(nil)).Elem()
}

func (o DerivedMetricQueryQueryOutput) ToDerivedMetricQueryQueryOutput() DerivedMetricQueryQueryOutput {
	return o
}

func (o DerivedMetricQueryQueryOutput) ToDerivedMetricQueryQueryOutputWithContext(ctx context.Context) DerivedMetricQueryQueryOutput {
	return o
}

func (o DerivedMetricQueryQueryOutput) Expr() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedMetricQueryQuery) string { return v.Expr }).(pulumi.StringOutput)
}

func (o DerivedMetricQueryQueryOutput) Variables() DerivedMetricQueryQueryVariableArrayOutput {
	return o.ApplyT(func(v DerivedMetricQueryQuery) []DerivedMetricQueryQueryVariable { return v.Variables }).(DerivedMetricQueryQueryVariableArrayOutput)
}

type DerivedMetricQueryQueryVariable struct {
	DefaultSelector string `pulumi:"defaultSelector"`
	Name            string `pulumi:"name"`
}

// DerivedMetricQueryQueryVariableInput is an input type that accepts DerivedMetricQueryQueryVariableArgs and DerivedMetricQueryQueryVariableOutput values.
// You can construct a concrete instance of `DerivedMetricQueryQueryVariableInput` via:
//
//	DerivedMetricQueryQueryVariableArgs{...}
type DerivedMetricQueryQueryVariableInput interface {
	pulumi.Input

	ToDerivedMetricQueryQueryVariableOutput() DerivedMetricQueryQueryVariableOutput
	ToDerivedMetricQueryQueryVariableOutputWithContext(context.Context) DerivedMetricQueryQueryVariableOutput
}

type DerivedMetricQueryQueryVariableArgs struct {
	DefaultSelector pulumi.StringInput `pulumi:"defaultSelector"`
	Name            pulumi.StringInput `pulumi:"name"`
}

func (DerivedMetricQueryQueryVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedMetricQueryQueryVariable)(nil)).Elem()
}

func (i DerivedMetricQueryQueryVariableArgs) ToDerivedMetricQueryQueryVariableOutput() DerivedMetricQueryQueryVariableOutput {
	return i.ToDerivedMetricQueryQueryVariableOutputWithContext(context.Background())
}

func (i DerivedMetricQueryQueryVariableArgs) ToDerivedMetricQueryQueryVariableOutputWithContext(ctx context.Context) DerivedMetricQueryQueryVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedMetricQueryQueryVariableOutput)
}

// DerivedMetricQueryQueryVariableArrayInput is an input type that accepts DerivedMetricQueryQueryVariableArray and DerivedMetricQueryQueryVariableArrayOutput values.
// You can construct a concrete instance of `DerivedMetricQueryQueryVariableArrayInput` via:
//
//	DerivedMetricQueryQueryVariableArray{ DerivedMetricQueryQueryVariableArgs{...} }
type DerivedMetricQueryQueryVariableArrayInput interface {
	pulumi.Input

	ToDerivedMetricQueryQueryVariableArrayOutput() DerivedMetricQueryQueryVariableArrayOutput
	ToDerivedMetricQueryQueryVariableArrayOutputWithContext(context.Context) DerivedMetricQueryQueryVariableArrayOutput
}

type DerivedMetricQueryQueryVariableArray []DerivedMetricQueryQueryVariableInput

func (DerivedMetricQueryQueryVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedMetricQueryQueryVariable)(nil)).Elem()
}

func (i DerivedMetricQueryQueryVariableArray) ToDerivedMetricQueryQueryVariableArrayOutput() DerivedMetricQueryQueryVariableArrayOutput {
	return i.ToDerivedMetricQueryQueryVariableArrayOutputWithContext(context.Background())
}

func (i DerivedMetricQueryQueryVariableArray) ToDerivedMetricQueryQueryVariableArrayOutputWithContext(ctx context.Context) DerivedMetricQueryQueryVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedMetricQueryQueryVariableArrayOutput)
}

type DerivedMetricQueryQueryVariableOutput struct{ *pulumi.OutputState }

func (DerivedMetricQueryQueryVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedMetricQueryQueryVariable)(nil)).Elem()
}

func (o DerivedMetricQueryQueryVariableOutput) ToDerivedMetricQueryQueryVariableOutput() DerivedMetricQueryQueryVariableOutput {
	return o
}

func (o DerivedMetricQueryQueryVariableOutput) ToDerivedMetricQueryQueryVariableOutputWithContext(ctx context.Context) DerivedMetricQueryQueryVariableOutput {
	return o
}

func (o DerivedMetricQueryQueryVariableOutput) DefaultSelector() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedMetricQueryQueryVariable) string { return v.DefaultSelector }).(pulumi.StringOutput)
}

func (o DerivedMetricQueryQueryVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DerivedMetricQueryQueryVariable) string { return v.Name }).(pulumi.StringOutput)
}

type DerivedMetricQueryQueryVariableArrayOutput struct{ *pulumi.OutputState }

func (DerivedMetricQueryQueryVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DerivedMetricQueryQueryVariable)(nil)).Elem()
}

func (o DerivedMetricQueryQueryVariableArrayOutput) ToDerivedMetricQueryQueryVariableArrayOutput() DerivedMetricQueryQueryVariableArrayOutput {
	return o
}

func (o DerivedMetricQueryQueryVariableArrayOutput) ToDerivedMetricQueryQueryVariableArrayOutputWithContext(ctx context.Context) DerivedMetricQueryQueryVariableArrayOutput {
	return o
}

func (o DerivedMetricQueryQueryVariableArrayOutput) Index(i pulumi.IntInput) DerivedMetricQueryQueryVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DerivedMetricQueryQueryVariable {
		return vs[0].([]DerivedMetricQueryQueryVariable)[vs[1].(int)]
	}).(DerivedMetricQueryQueryVariableOutput)
}

type DerivedMetricQuerySelector struct {
	Labels map[string]string `pulumi:"labels"`
}

// DerivedMetricQuerySelectorInput is an input type that accepts DerivedMetricQuerySelectorArgs and DerivedMetricQuerySelectorOutput values.
// You can construct a concrete instance of `DerivedMetricQuerySelectorInput` via:
//
//	DerivedMetricQuerySelectorArgs{...}
type DerivedMetricQuerySelectorInput interface {
	pulumi.Input

	ToDerivedMetricQuerySelectorOutput() DerivedMetricQuerySelectorOutput
	ToDerivedMetricQuerySelectorOutputWithContext(context.Context) DerivedMetricQuerySelectorOutput
}

type DerivedMetricQuerySelectorArgs struct {
	Labels pulumi.StringMapInput `pulumi:"labels"`
}

func (DerivedMetricQuerySelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedMetricQuerySelector)(nil)).Elem()
}

func (i DerivedMetricQuerySelectorArgs) ToDerivedMetricQuerySelectorOutput() DerivedMetricQuerySelectorOutput {
	return i.ToDerivedMetricQuerySelectorOutputWithContext(context.Background())
}

func (i DerivedMetricQuerySelectorArgs) ToDerivedMetricQuerySelectorOutputWithContext(ctx context.Context) DerivedMetricQuerySelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedMetricQuerySelectorOutput)
}

func (i DerivedMetricQuerySelectorArgs) ToDerivedMetricQuerySelectorPtrOutput() DerivedMetricQuerySelectorPtrOutput {
	return i.ToDerivedMetricQuerySelectorPtrOutputWithContext(context.Background())
}

func (i DerivedMetricQuerySelectorArgs) ToDerivedMetricQuerySelectorPtrOutputWithContext(ctx context.Context) DerivedMetricQuerySelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedMetricQuerySelectorOutput).ToDerivedMetricQuerySelectorPtrOutputWithContext(ctx)
}

// DerivedMetricQuerySelectorPtrInput is an input type that accepts DerivedMetricQuerySelectorArgs, DerivedMetricQuerySelectorPtr and DerivedMetricQuerySelectorPtrOutput values.
// You can construct a concrete instance of `DerivedMetricQuerySelectorPtrInput` via:
//
//	        DerivedMetricQuerySelectorArgs{...}
//
//	or:
//
//	        nil
type DerivedMetricQuerySelectorPtrInput interface {
	pulumi.Input

	ToDerivedMetricQuerySelectorPtrOutput() DerivedMetricQuerySelectorPtrOutput
	ToDerivedMetricQuerySelectorPtrOutputWithContext(context.Context) DerivedMetricQuerySelectorPtrOutput
}

type derivedMetricQuerySelectorPtrType DerivedMetricQuerySelectorArgs

func DerivedMetricQuerySelectorPtr(v *DerivedMetricQuerySelectorArgs) DerivedMetricQuerySelectorPtrInput {
	return (*derivedMetricQuerySelectorPtrType)(v)
}

func (*derivedMetricQuerySelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DerivedMetricQuerySelector)(nil)).Elem()
}

func (i *derivedMetricQuerySelectorPtrType) ToDerivedMetricQuerySelectorPtrOutput() DerivedMetricQuerySelectorPtrOutput {
	return i.ToDerivedMetricQuerySelectorPtrOutputWithContext(context.Background())
}

func (i *derivedMetricQuerySelectorPtrType) ToDerivedMetricQuerySelectorPtrOutputWithContext(ctx context.Context) DerivedMetricQuerySelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DerivedMetricQuerySelectorPtrOutput)
}

type DerivedMetricQuerySelectorOutput struct{ *pulumi.OutputState }

func (DerivedMetricQuerySelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DerivedMetricQuerySelector)(nil)).Elem()
}

func (o DerivedMetricQuerySelectorOutput) ToDerivedMetricQuerySelectorOutput() DerivedMetricQuerySelectorOutput {
	return o
}

func (o DerivedMetricQuerySelectorOutput) ToDerivedMetricQuerySelectorOutputWithContext(ctx context.Context) DerivedMetricQuerySelectorOutput {
	return o
}

func (o DerivedMetricQuerySelectorOutput) ToDerivedMetricQuerySelectorPtrOutput() DerivedMetricQuerySelectorPtrOutput {
	return o.ToDerivedMetricQuerySelectorPtrOutputWithContext(context.Background())
}

func (o DerivedMetricQuerySelectorOutput) ToDerivedMetricQuerySelectorPtrOutputWithContext(ctx context.Context) DerivedMetricQuerySelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DerivedMetricQuerySelector) *DerivedMetricQuerySelector {
		return &v
	}).(DerivedMetricQuerySelectorPtrOutput)
}

func (o DerivedMetricQuerySelectorOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v DerivedMetricQuerySelector) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

type DerivedMetricQuerySelectorPtrOutput struct{ *pulumi.OutputState }

func (DerivedMetricQuerySelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DerivedMetricQuerySelector)(nil)).Elem()
}

func (o DerivedMetricQuerySelectorPtrOutput) ToDerivedMetricQuerySelectorPtrOutput() DerivedMetricQuerySelectorPtrOutput {
	return o
}

func (o DerivedMetricQuerySelectorPtrOutput) ToDerivedMetricQuerySelectorPtrOutputWithContext(ctx context.Context) DerivedMetricQuerySelectorPtrOutput {
	return o
}

func (o DerivedMetricQuerySelectorPtrOutput) Elem() DerivedMetricQuerySelectorOutput {
	return o.ApplyT(func(v *DerivedMetricQuerySelector) DerivedMetricQuerySelector {
		if v != nil {
			return *v
		}
		var ret DerivedMetricQuerySelector
		return ret
	}).(DerivedMetricQuerySelectorOutput)
}

func (o DerivedMetricQuerySelectorPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DerivedMetricQuerySelector) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

type DropRuleValueBasedDrop struct {
	TargetDropValue float64 `pulumi:"targetDropValue"`
}

// DropRuleValueBasedDropInput is an input type that accepts DropRuleValueBasedDropArgs and DropRuleValueBasedDropOutput values.
// You can construct a concrete instance of `DropRuleValueBasedDropInput` via:
//
//	DropRuleValueBasedDropArgs{...}
type DropRuleValueBasedDropInput interface {
	pulumi.Input

	ToDropRuleValueBasedDropOutput() DropRuleValueBasedDropOutput
	ToDropRuleValueBasedDropOutputWithContext(context.Context) DropRuleValueBasedDropOutput
}

type DropRuleValueBasedDropArgs struct {
	TargetDropValue pulumi.Float64Input `pulumi:"targetDropValue"`
}

func (DropRuleValueBasedDropArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DropRuleValueBasedDrop)(nil)).Elem()
}

func (i DropRuleValueBasedDropArgs) ToDropRuleValueBasedDropOutput() DropRuleValueBasedDropOutput {
	return i.ToDropRuleValueBasedDropOutputWithContext(context.Background())
}

func (i DropRuleValueBasedDropArgs) ToDropRuleValueBasedDropOutputWithContext(ctx context.Context) DropRuleValueBasedDropOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DropRuleValueBasedDropOutput)
}

func (i DropRuleValueBasedDropArgs) ToDropRuleValueBasedDropPtrOutput() DropRuleValueBasedDropPtrOutput {
	return i.ToDropRuleValueBasedDropPtrOutputWithContext(context.Background())
}

func (i DropRuleValueBasedDropArgs) ToDropRuleValueBasedDropPtrOutputWithContext(ctx context.Context) DropRuleValueBasedDropPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DropRuleValueBasedDropOutput).ToDropRuleValueBasedDropPtrOutputWithContext(ctx)
}

// DropRuleValueBasedDropPtrInput is an input type that accepts DropRuleValueBasedDropArgs, DropRuleValueBasedDropPtr and DropRuleValueBasedDropPtrOutput values.
// You can construct a concrete instance of `DropRuleValueBasedDropPtrInput` via:
//
//	        DropRuleValueBasedDropArgs{...}
//
//	or:
//
//	        nil
type DropRuleValueBasedDropPtrInput interface {
	pulumi.Input

	ToDropRuleValueBasedDropPtrOutput() DropRuleValueBasedDropPtrOutput
	ToDropRuleValueBasedDropPtrOutputWithContext(context.Context) DropRuleValueBasedDropPtrOutput
}

type dropRuleValueBasedDropPtrType DropRuleValueBasedDropArgs

func DropRuleValueBasedDropPtr(v *DropRuleValueBasedDropArgs) DropRuleValueBasedDropPtrInput {
	return (*dropRuleValueBasedDropPtrType)(v)
}

func (*dropRuleValueBasedDropPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DropRuleValueBasedDrop)(nil)).Elem()
}

func (i *dropRuleValueBasedDropPtrType) ToDropRuleValueBasedDropPtrOutput() DropRuleValueBasedDropPtrOutput {
	return i.ToDropRuleValueBasedDropPtrOutputWithContext(context.Background())
}

func (i *dropRuleValueBasedDropPtrType) ToDropRuleValueBasedDropPtrOutputWithContext(ctx context.Context) DropRuleValueBasedDropPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DropRuleValueBasedDropPtrOutput)
}

type DropRuleValueBasedDropOutput struct{ *pulumi.OutputState }

func (DropRuleValueBasedDropOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DropRuleValueBasedDrop)(nil)).Elem()
}

func (o DropRuleValueBasedDropOutput) ToDropRuleValueBasedDropOutput() DropRuleValueBasedDropOutput {
	return o
}

func (o DropRuleValueBasedDropOutput) ToDropRuleValueBasedDropOutputWithContext(ctx context.Context) DropRuleValueBasedDropOutput {
	return o
}

func (o DropRuleValueBasedDropOutput) ToDropRuleValueBasedDropPtrOutput() DropRuleValueBasedDropPtrOutput {
	return o.ToDropRuleValueBasedDropPtrOutputWithContext(context.Background())
}

func (o DropRuleValueBasedDropOutput) ToDropRuleValueBasedDropPtrOutputWithContext(ctx context.Context) DropRuleValueBasedDropPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DropRuleValueBasedDrop) *DropRuleValueBasedDrop {
		return &v
	}).(DropRuleValueBasedDropPtrOutput)
}

func (o DropRuleValueBasedDropOutput) TargetDropValue() pulumi.Float64Output {
	return o.ApplyT(func(v DropRuleValueBasedDrop) float64 { return v.TargetDropValue }).(pulumi.Float64Output)
}

type DropRuleValueBasedDropPtrOutput struct{ *pulumi.OutputState }

func (DropRuleValueBasedDropPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DropRuleValueBasedDrop)(nil)).Elem()
}

func (o DropRuleValueBasedDropPtrOutput) ToDropRuleValueBasedDropPtrOutput() DropRuleValueBasedDropPtrOutput {
	return o
}

func (o DropRuleValueBasedDropPtrOutput) ToDropRuleValueBasedDropPtrOutputWithContext(ctx context.Context) DropRuleValueBasedDropPtrOutput {
	return o
}

func (o DropRuleValueBasedDropPtrOutput) Elem() DropRuleValueBasedDropOutput {
	return o.ApplyT(func(v *DropRuleValueBasedDrop) DropRuleValueBasedDrop {
		if v != nil {
			return *v
		}
		var ret DropRuleValueBasedDrop
		return ret
	}).(DropRuleValueBasedDropOutput)
}

func (o DropRuleValueBasedDropPtrOutput) TargetDropValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DropRuleValueBasedDrop) *float64 {
		if v == nil {
			return nil
		}
		return &v.TargetDropValue
	}).(pulumi.Float64PtrOutput)
}

type MappingRuleStoragePolicy struct {
	Resolution string `pulumi:"resolution"`
	Retention  string `pulumi:"retention"`
}

// MappingRuleStoragePolicyInput is an input type that accepts MappingRuleStoragePolicyArgs and MappingRuleStoragePolicyOutput values.
// You can construct a concrete instance of `MappingRuleStoragePolicyInput` via:
//
//	MappingRuleStoragePolicyArgs{...}
type MappingRuleStoragePolicyInput interface {
	pulumi.Input

	ToMappingRuleStoragePolicyOutput() MappingRuleStoragePolicyOutput
	ToMappingRuleStoragePolicyOutputWithContext(context.Context) MappingRuleStoragePolicyOutput
}

type MappingRuleStoragePolicyArgs struct {
	Resolution pulumi.StringInput `pulumi:"resolution"`
	Retention  pulumi.StringInput `pulumi:"retention"`
}

func (MappingRuleStoragePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingRuleStoragePolicy)(nil)).Elem()
}

func (i MappingRuleStoragePolicyArgs) ToMappingRuleStoragePolicyOutput() MappingRuleStoragePolicyOutput {
	return i.ToMappingRuleStoragePolicyOutputWithContext(context.Background())
}

func (i MappingRuleStoragePolicyArgs) ToMappingRuleStoragePolicyOutputWithContext(ctx context.Context) MappingRuleStoragePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingRuleStoragePolicyOutput)
}

func (i MappingRuleStoragePolicyArgs) ToMappingRuleStoragePolicyPtrOutput() MappingRuleStoragePolicyPtrOutput {
	return i.ToMappingRuleStoragePolicyPtrOutputWithContext(context.Background())
}

func (i MappingRuleStoragePolicyArgs) ToMappingRuleStoragePolicyPtrOutputWithContext(ctx context.Context) MappingRuleStoragePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingRuleStoragePolicyOutput).ToMappingRuleStoragePolicyPtrOutputWithContext(ctx)
}

// MappingRuleStoragePolicyPtrInput is an input type that accepts MappingRuleStoragePolicyArgs, MappingRuleStoragePolicyPtr and MappingRuleStoragePolicyPtrOutput values.
// You can construct a concrete instance of `MappingRuleStoragePolicyPtrInput` via:
//
//	        MappingRuleStoragePolicyArgs{...}
//
//	or:
//
//	        nil
type MappingRuleStoragePolicyPtrInput interface {
	pulumi.Input

	ToMappingRuleStoragePolicyPtrOutput() MappingRuleStoragePolicyPtrOutput
	ToMappingRuleStoragePolicyPtrOutputWithContext(context.Context) MappingRuleStoragePolicyPtrOutput
}

type mappingRuleStoragePolicyPtrType MappingRuleStoragePolicyArgs

func MappingRuleStoragePolicyPtr(v *MappingRuleStoragePolicyArgs) MappingRuleStoragePolicyPtrInput {
	return (*mappingRuleStoragePolicyPtrType)(v)
}

func (*mappingRuleStoragePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingRuleStoragePolicy)(nil)).Elem()
}

func (i *mappingRuleStoragePolicyPtrType) ToMappingRuleStoragePolicyPtrOutput() MappingRuleStoragePolicyPtrOutput {
	return i.ToMappingRuleStoragePolicyPtrOutputWithContext(context.Background())
}

func (i *mappingRuleStoragePolicyPtrType) ToMappingRuleStoragePolicyPtrOutputWithContext(ctx context.Context) MappingRuleStoragePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MappingRuleStoragePolicyPtrOutput)
}

type MappingRuleStoragePolicyOutput struct{ *pulumi.OutputState }

func (MappingRuleStoragePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MappingRuleStoragePolicy)(nil)).Elem()
}

func (o MappingRuleStoragePolicyOutput) ToMappingRuleStoragePolicyOutput() MappingRuleStoragePolicyOutput {
	return o
}

func (o MappingRuleStoragePolicyOutput) ToMappingRuleStoragePolicyOutputWithContext(ctx context.Context) MappingRuleStoragePolicyOutput {
	return o
}

func (o MappingRuleStoragePolicyOutput) ToMappingRuleStoragePolicyPtrOutput() MappingRuleStoragePolicyPtrOutput {
	return o.ToMappingRuleStoragePolicyPtrOutputWithContext(context.Background())
}

func (o MappingRuleStoragePolicyOutput) ToMappingRuleStoragePolicyPtrOutputWithContext(ctx context.Context) MappingRuleStoragePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MappingRuleStoragePolicy) *MappingRuleStoragePolicy {
		return &v
	}).(MappingRuleStoragePolicyPtrOutput)
}

func (o MappingRuleStoragePolicyOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v MappingRuleStoragePolicy) string { return v.Resolution }).(pulumi.StringOutput)
}

func (o MappingRuleStoragePolicyOutput) Retention() pulumi.StringOutput {
	return o.ApplyT(func(v MappingRuleStoragePolicy) string { return v.Retention }).(pulumi.StringOutput)
}

type MappingRuleStoragePolicyPtrOutput struct{ *pulumi.OutputState }

func (MappingRuleStoragePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MappingRuleStoragePolicy)(nil)).Elem()
}

func (o MappingRuleStoragePolicyPtrOutput) ToMappingRuleStoragePolicyPtrOutput() MappingRuleStoragePolicyPtrOutput {
	return o
}

func (o MappingRuleStoragePolicyPtrOutput) ToMappingRuleStoragePolicyPtrOutputWithContext(ctx context.Context) MappingRuleStoragePolicyPtrOutput {
	return o
}

func (o MappingRuleStoragePolicyPtrOutput) Elem() MappingRuleStoragePolicyOutput {
	return o.ApplyT(func(v *MappingRuleStoragePolicy) MappingRuleStoragePolicy {
		if v != nil {
			return *v
		}
		var ret MappingRuleStoragePolicy
		return ret
	}).(MappingRuleStoragePolicyOutput)
}

func (o MappingRuleStoragePolicyPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingRuleStoragePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(pulumi.StringPtrOutput)
}

func (o MappingRuleStoragePolicyPtrOutput) Retention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MappingRuleStoragePolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Retention
	}).(pulumi.StringPtrOutput)
}

type MonitorQuery struct {
	GraphiteExpr   *string `pulumi:"graphiteExpr"`
	PrometheusExpr *string `pulumi:"prometheusExpr"`
}

// MonitorQueryInput is an input type that accepts MonitorQueryArgs and MonitorQueryOutput values.
// You can construct a concrete instance of `MonitorQueryInput` via:
//
//	MonitorQueryArgs{...}
type MonitorQueryInput interface {
	pulumi.Input

	ToMonitorQueryOutput() MonitorQueryOutput
	ToMonitorQueryOutputWithContext(context.Context) MonitorQueryOutput
}

type MonitorQueryArgs struct {
	GraphiteExpr   pulumi.StringPtrInput `pulumi:"graphiteExpr"`
	PrometheusExpr pulumi.StringPtrInput `pulumi:"prometheusExpr"`
}

func (MonitorQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorQuery)(nil)).Elem()
}

func (i MonitorQueryArgs) ToMonitorQueryOutput() MonitorQueryOutput {
	return i.ToMonitorQueryOutputWithContext(context.Background())
}

func (i MonitorQueryArgs) ToMonitorQueryOutputWithContext(ctx context.Context) MonitorQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorQueryOutput)
}

func (i MonitorQueryArgs) ToMonitorQueryPtrOutput() MonitorQueryPtrOutput {
	return i.ToMonitorQueryPtrOutputWithContext(context.Background())
}

func (i MonitorQueryArgs) ToMonitorQueryPtrOutputWithContext(ctx context.Context) MonitorQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorQueryOutput).ToMonitorQueryPtrOutputWithContext(ctx)
}

// MonitorQueryPtrInput is an input type that accepts MonitorQueryArgs, MonitorQueryPtr and MonitorQueryPtrOutput values.
// You can construct a concrete instance of `MonitorQueryPtrInput` via:
//
//	        MonitorQueryArgs{...}
//
//	or:
//
//	        nil
type MonitorQueryPtrInput interface {
	pulumi.Input

	ToMonitorQueryPtrOutput() MonitorQueryPtrOutput
	ToMonitorQueryPtrOutputWithContext(context.Context) MonitorQueryPtrOutput
}

type monitorQueryPtrType MonitorQueryArgs

func MonitorQueryPtr(v *MonitorQueryArgs) MonitorQueryPtrInput {
	return (*monitorQueryPtrType)(v)
}

func (*monitorQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorQuery)(nil)).Elem()
}

func (i *monitorQueryPtrType) ToMonitorQueryPtrOutput() MonitorQueryPtrOutput {
	return i.ToMonitorQueryPtrOutputWithContext(context.Background())
}

func (i *monitorQueryPtrType) ToMonitorQueryPtrOutputWithContext(ctx context.Context) MonitorQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorQueryPtrOutput)
}

type MonitorQueryOutput struct{ *pulumi.OutputState }

func (MonitorQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorQuery)(nil)).Elem()
}

func (o MonitorQueryOutput) ToMonitorQueryOutput() MonitorQueryOutput {
	return o
}

func (o MonitorQueryOutput) ToMonitorQueryOutputWithContext(ctx context.Context) MonitorQueryOutput {
	return o
}

func (o MonitorQueryOutput) ToMonitorQueryPtrOutput() MonitorQueryPtrOutput {
	return o.ToMonitorQueryPtrOutputWithContext(context.Background())
}

func (o MonitorQueryOutput) ToMonitorQueryPtrOutputWithContext(ctx context.Context) MonitorQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorQuery) *MonitorQuery {
		return &v
	}).(MonitorQueryPtrOutput)
}

func (o MonitorQueryOutput) GraphiteExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorQuery) *string { return v.GraphiteExpr }).(pulumi.StringPtrOutput)
}

func (o MonitorQueryOutput) PrometheusExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorQuery) *string { return v.PrometheusExpr }).(pulumi.StringPtrOutput)
}

type MonitorQueryPtrOutput struct{ *pulumi.OutputState }

func (MonitorQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorQuery)(nil)).Elem()
}

func (o MonitorQueryPtrOutput) ToMonitorQueryPtrOutput() MonitorQueryPtrOutput {
	return o
}

func (o MonitorQueryPtrOutput) ToMonitorQueryPtrOutputWithContext(ctx context.Context) MonitorQueryPtrOutput {
	return o
}

func (o MonitorQueryPtrOutput) Elem() MonitorQueryOutput {
	return o.ApplyT(func(v *MonitorQuery) MonitorQuery {
		if v != nil {
			return *v
		}
		var ret MonitorQuery
		return ret
	}).(MonitorQueryOutput)
}

func (o MonitorQueryPtrOutput) GraphiteExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorQuery) *string {
		if v == nil {
			return nil
		}
		return v.GraphiteExpr
	}).(pulumi.StringPtrOutput)
}

func (o MonitorQueryPtrOutput) PrometheusExpr() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorQuery) *string {
		if v == nil {
			return nil
		}
		return v.PrometheusExpr
	}).(pulumi.StringPtrOutput)
}

type MonitorSchedule struct {
	Ranges   []MonitorScheduleRange `pulumi:"ranges"`
	Timezone string                 `pulumi:"timezone"`
}

// MonitorScheduleInput is an input type that accepts MonitorScheduleArgs and MonitorScheduleOutput values.
// You can construct a concrete instance of `MonitorScheduleInput` via:
//
//	MonitorScheduleArgs{...}
type MonitorScheduleInput interface {
	pulumi.Input

	ToMonitorScheduleOutput() MonitorScheduleOutput
	ToMonitorScheduleOutputWithContext(context.Context) MonitorScheduleOutput
}

type MonitorScheduleArgs struct {
	Ranges   MonitorScheduleRangeArrayInput `pulumi:"ranges"`
	Timezone pulumi.StringInput             `pulumi:"timezone"`
}

func (MonitorScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSchedule)(nil)).Elem()
}

func (i MonitorScheduleArgs) ToMonitorScheduleOutput() MonitorScheduleOutput {
	return i.ToMonitorScheduleOutputWithContext(context.Background())
}

func (i MonitorScheduleArgs) ToMonitorScheduleOutputWithContext(ctx context.Context) MonitorScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorScheduleOutput)
}

func (i MonitorScheduleArgs) ToMonitorSchedulePtrOutput() MonitorSchedulePtrOutput {
	return i.ToMonitorSchedulePtrOutputWithContext(context.Background())
}

func (i MonitorScheduleArgs) ToMonitorSchedulePtrOutputWithContext(ctx context.Context) MonitorSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorScheduleOutput).ToMonitorSchedulePtrOutputWithContext(ctx)
}

// MonitorSchedulePtrInput is an input type that accepts MonitorScheduleArgs, MonitorSchedulePtr and MonitorSchedulePtrOutput values.
// You can construct a concrete instance of `MonitorSchedulePtrInput` via:
//
//	        MonitorScheduleArgs{...}
//
//	or:
//
//	        nil
type MonitorSchedulePtrInput interface {
	pulumi.Input

	ToMonitorSchedulePtrOutput() MonitorSchedulePtrOutput
	ToMonitorSchedulePtrOutputWithContext(context.Context) MonitorSchedulePtrOutput
}

type monitorSchedulePtrType MonitorScheduleArgs

func MonitorSchedulePtr(v *MonitorScheduleArgs) MonitorSchedulePtrInput {
	return (*monitorSchedulePtrType)(v)
}

func (*monitorSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorSchedule)(nil)).Elem()
}

func (i *monitorSchedulePtrType) ToMonitorSchedulePtrOutput() MonitorSchedulePtrOutput {
	return i.ToMonitorSchedulePtrOutputWithContext(context.Background())
}

func (i *monitorSchedulePtrType) ToMonitorSchedulePtrOutputWithContext(ctx context.Context) MonitorSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSchedulePtrOutput)
}

type MonitorScheduleOutput struct{ *pulumi.OutputState }

func (MonitorScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSchedule)(nil)).Elem()
}

func (o MonitorScheduleOutput) ToMonitorScheduleOutput() MonitorScheduleOutput {
	return o
}

func (o MonitorScheduleOutput) ToMonitorScheduleOutputWithContext(ctx context.Context) MonitorScheduleOutput {
	return o
}

func (o MonitorScheduleOutput) ToMonitorSchedulePtrOutput() MonitorSchedulePtrOutput {
	return o.ToMonitorSchedulePtrOutputWithContext(context.Background())
}

func (o MonitorScheduleOutput) ToMonitorSchedulePtrOutputWithContext(ctx context.Context) MonitorSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorSchedule) *MonitorSchedule {
		return &v
	}).(MonitorSchedulePtrOutput)
}

func (o MonitorScheduleOutput) Ranges() MonitorScheduleRangeArrayOutput {
	return o.ApplyT(func(v MonitorSchedule) []MonitorScheduleRange { return v.Ranges }).(MonitorScheduleRangeArrayOutput)
}

func (o MonitorScheduleOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorSchedule) string { return v.Timezone }).(pulumi.StringOutput)
}

type MonitorSchedulePtrOutput struct{ *pulumi.OutputState }

func (MonitorSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorSchedule)(nil)).Elem()
}

func (o MonitorSchedulePtrOutput) ToMonitorSchedulePtrOutput() MonitorSchedulePtrOutput {
	return o
}

func (o MonitorSchedulePtrOutput) ToMonitorSchedulePtrOutputWithContext(ctx context.Context) MonitorSchedulePtrOutput {
	return o
}

func (o MonitorSchedulePtrOutput) Elem() MonitorScheduleOutput {
	return o.ApplyT(func(v *MonitorSchedule) MonitorSchedule {
		if v != nil {
			return *v
		}
		var ret MonitorSchedule
		return ret
	}).(MonitorScheduleOutput)
}

func (o MonitorSchedulePtrOutput) Ranges() MonitorScheduleRangeArrayOutput {
	return o.ApplyT(func(v *MonitorSchedule) []MonitorScheduleRange {
		if v == nil {
			return nil
		}
		return v.Ranges
	}).(MonitorScheduleRangeArrayOutput)
}

func (o MonitorSchedulePtrOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Timezone
	}).(pulumi.StringPtrOutput)
}

type MonitorScheduleRange struct {
	Day   string `pulumi:"day"`
	End   string `pulumi:"end"`
	Start string `pulumi:"start"`
}

// MonitorScheduleRangeInput is an input type that accepts MonitorScheduleRangeArgs and MonitorScheduleRangeOutput values.
// You can construct a concrete instance of `MonitorScheduleRangeInput` via:
//
//	MonitorScheduleRangeArgs{...}
type MonitorScheduleRangeInput interface {
	pulumi.Input

	ToMonitorScheduleRangeOutput() MonitorScheduleRangeOutput
	ToMonitorScheduleRangeOutputWithContext(context.Context) MonitorScheduleRangeOutput
}

type MonitorScheduleRangeArgs struct {
	Day   pulumi.StringInput `pulumi:"day"`
	End   pulumi.StringInput `pulumi:"end"`
	Start pulumi.StringInput `pulumi:"start"`
}

func (MonitorScheduleRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorScheduleRange)(nil)).Elem()
}

func (i MonitorScheduleRangeArgs) ToMonitorScheduleRangeOutput() MonitorScheduleRangeOutput {
	return i.ToMonitorScheduleRangeOutputWithContext(context.Background())
}

func (i MonitorScheduleRangeArgs) ToMonitorScheduleRangeOutputWithContext(ctx context.Context) MonitorScheduleRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorScheduleRangeOutput)
}

// MonitorScheduleRangeArrayInput is an input type that accepts MonitorScheduleRangeArray and MonitorScheduleRangeArrayOutput values.
// You can construct a concrete instance of `MonitorScheduleRangeArrayInput` via:
//
//	MonitorScheduleRangeArray{ MonitorScheduleRangeArgs{...} }
type MonitorScheduleRangeArrayInput interface {
	pulumi.Input

	ToMonitorScheduleRangeArrayOutput() MonitorScheduleRangeArrayOutput
	ToMonitorScheduleRangeArrayOutputWithContext(context.Context) MonitorScheduleRangeArrayOutput
}

type MonitorScheduleRangeArray []MonitorScheduleRangeInput

func (MonitorScheduleRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorScheduleRange)(nil)).Elem()
}

func (i MonitorScheduleRangeArray) ToMonitorScheduleRangeArrayOutput() MonitorScheduleRangeArrayOutput {
	return i.ToMonitorScheduleRangeArrayOutputWithContext(context.Background())
}

func (i MonitorScheduleRangeArray) ToMonitorScheduleRangeArrayOutputWithContext(ctx context.Context) MonitorScheduleRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorScheduleRangeArrayOutput)
}

type MonitorScheduleRangeOutput struct{ *pulumi.OutputState }

func (MonitorScheduleRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorScheduleRange)(nil)).Elem()
}

func (o MonitorScheduleRangeOutput) ToMonitorScheduleRangeOutput() MonitorScheduleRangeOutput {
	return o
}

func (o MonitorScheduleRangeOutput) ToMonitorScheduleRangeOutputWithContext(ctx context.Context) MonitorScheduleRangeOutput {
	return o
}

func (o MonitorScheduleRangeOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorScheduleRange) string { return v.Day }).(pulumi.StringOutput)
}

func (o MonitorScheduleRangeOutput) End() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorScheduleRange) string { return v.End }).(pulumi.StringOutput)
}

func (o MonitorScheduleRangeOutput) Start() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorScheduleRange) string { return v.Start }).(pulumi.StringOutput)
}

type MonitorScheduleRangeArrayOutput struct{ *pulumi.OutputState }

func (MonitorScheduleRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorScheduleRange)(nil)).Elem()
}

func (o MonitorScheduleRangeArrayOutput) ToMonitorScheduleRangeArrayOutput() MonitorScheduleRangeArrayOutput {
	return o
}

func (o MonitorScheduleRangeArrayOutput) ToMonitorScheduleRangeArrayOutputWithContext(ctx context.Context) MonitorScheduleRangeArrayOutput {
	return o
}

func (o MonitorScheduleRangeArrayOutput) Index(i pulumi.IntInput) MonitorScheduleRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorScheduleRange {
		return vs[0].([]MonitorScheduleRange)[vs[1].(int)]
	}).(MonitorScheduleRangeOutput)
}

type MonitorSeriesConditions struct {
	Conditions []MonitorSeriesConditionsCondition `pulumi:"conditions"`
	Overrides  []MonitorSeriesConditionsOverride  `pulumi:"overrides"`
}

// MonitorSeriesConditionsInput is an input type that accepts MonitorSeriesConditionsArgs and MonitorSeriesConditionsOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsInput` via:
//
//	MonitorSeriesConditionsArgs{...}
type MonitorSeriesConditionsInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsOutput() MonitorSeriesConditionsOutput
	ToMonitorSeriesConditionsOutputWithContext(context.Context) MonitorSeriesConditionsOutput
}

type MonitorSeriesConditionsArgs struct {
	Conditions MonitorSeriesConditionsConditionArrayInput `pulumi:"conditions"`
	Overrides  MonitorSeriesConditionsOverrideArrayInput  `pulumi:"overrides"`
}

func (MonitorSeriesConditionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditions)(nil)).Elem()
}

func (i MonitorSeriesConditionsArgs) ToMonitorSeriesConditionsOutput() MonitorSeriesConditionsOutput {
	return i.ToMonitorSeriesConditionsOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsArgs) ToMonitorSeriesConditionsOutputWithContext(ctx context.Context) MonitorSeriesConditionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsOutput)
}

func (i MonitorSeriesConditionsArgs) ToMonitorSeriesConditionsPtrOutput() MonitorSeriesConditionsPtrOutput {
	return i.ToMonitorSeriesConditionsPtrOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsArgs) ToMonitorSeriesConditionsPtrOutputWithContext(ctx context.Context) MonitorSeriesConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsOutput).ToMonitorSeriesConditionsPtrOutputWithContext(ctx)
}

// MonitorSeriesConditionsPtrInput is an input type that accepts MonitorSeriesConditionsArgs, MonitorSeriesConditionsPtr and MonitorSeriesConditionsPtrOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsPtrInput` via:
//
//	        MonitorSeriesConditionsArgs{...}
//
//	or:
//
//	        nil
type MonitorSeriesConditionsPtrInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsPtrOutput() MonitorSeriesConditionsPtrOutput
	ToMonitorSeriesConditionsPtrOutputWithContext(context.Context) MonitorSeriesConditionsPtrOutput
}

type monitorSeriesConditionsPtrType MonitorSeriesConditionsArgs

func MonitorSeriesConditionsPtr(v *MonitorSeriesConditionsArgs) MonitorSeriesConditionsPtrInput {
	return (*monitorSeriesConditionsPtrType)(v)
}

func (*monitorSeriesConditionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorSeriesConditions)(nil)).Elem()
}

func (i *monitorSeriesConditionsPtrType) ToMonitorSeriesConditionsPtrOutput() MonitorSeriesConditionsPtrOutput {
	return i.ToMonitorSeriesConditionsPtrOutputWithContext(context.Background())
}

func (i *monitorSeriesConditionsPtrType) ToMonitorSeriesConditionsPtrOutputWithContext(ctx context.Context) MonitorSeriesConditionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsPtrOutput)
}

type MonitorSeriesConditionsOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditions)(nil)).Elem()
}

func (o MonitorSeriesConditionsOutput) ToMonitorSeriesConditionsOutput() MonitorSeriesConditionsOutput {
	return o
}

func (o MonitorSeriesConditionsOutput) ToMonitorSeriesConditionsOutputWithContext(ctx context.Context) MonitorSeriesConditionsOutput {
	return o
}

func (o MonitorSeriesConditionsOutput) ToMonitorSeriesConditionsPtrOutput() MonitorSeriesConditionsPtrOutput {
	return o.ToMonitorSeriesConditionsPtrOutputWithContext(context.Background())
}

func (o MonitorSeriesConditionsOutput) ToMonitorSeriesConditionsPtrOutputWithContext(ctx context.Context) MonitorSeriesConditionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorSeriesConditions) *MonitorSeriesConditions {
		return &v
	}).(MonitorSeriesConditionsPtrOutput)
}

func (o MonitorSeriesConditionsOutput) Conditions() MonitorSeriesConditionsConditionArrayOutput {
	return o.ApplyT(func(v MonitorSeriesConditions) []MonitorSeriesConditionsCondition { return v.Conditions }).(MonitorSeriesConditionsConditionArrayOutput)
}

func (o MonitorSeriesConditionsOutput) Overrides() MonitorSeriesConditionsOverrideArrayOutput {
	return o.ApplyT(func(v MonitorSeriesConditions) []MonitorSeriesConditionsOverride { return v.Overrides }).(MonitorSeriesConditionsOverrideArrayOutput)
}

type MonitorSeriesConditionsPtrOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorSeriesConditions)(nil)).Elem()
}

func (o MonitorSeriesConditionsPtrOutput) ToMonitorSeriesConditionsPtrOutput() MonitorSeriesConditionsPtrOutput {
	return o
}

func (o MonitorSeriesConditionsPtrOutput) ToMonitorSeriesConditionsPtrOutputWithContext(ctx context.Context) MonitorSeriesConditionsPtrOutput {
	return o
}

func (o MonitorSeriesConditionsPtrOutput) Elem() MonitorSeriesConditionsOutput {
	return o.ApplyT(func(v *MonitorSeriesConditions) MonitorSeriesConditions {
		if v != nil {
			return *v
		}
		var ret MonitorSeriesConditions
		return ret
	}).(MonitorSeriesConditionsOutput)
}

func (o MonitorSeriesConditionsPtrOutput) Conditions() MonitorSeriesConditionsConditionArrayOutput {
	return o.ApplyT(func(v *MonitorSeriesConditions) []MonitorSeriesConditionsCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(MonitorSeriesConditionsConditionArrayOutput)
}

func (o MonitorSeriesConditionsPtrOutput) Overrides() MonitorSeriesConditionsOverrideArrayOutput {
	return o.ApplyT(func(v *MonitorSeriesConditions) []MonitorSeriesConditionsOverride {
		if v == nil {
			return nil
		}
		return v.Overrides
	}).(MonitorSeriesConditionsOverrideArrayOutput)
}

type MonitorSeriesConditionsCondition struct {
	Op             string   `pulumi:"op"`
	ResolveSustain *string  `pulumi:"resolveSustain"`
	Severity       string   `pulumi:"severity"`
	Sustain        *string  `pulumi:"sustain"`
	Value          *float64 `pulumi:"value"`
}

// MonitorSeriesConditionsConditionInput is an input type that accepts MonitorSeriesConditionsConditionArgs and MonitorSeriesConditionsConditionOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsConditionInput` via:
//
//	MonitorSeriesConditionsConditionArgs{...}
type MonitorSeriesConditionsConditionInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsConditionOutput() MonitorSeriesConditionsConditionOutput
	ToMonitorSeriesConditionsConditionOutputWithContext(context.Context) MonitorSeriesConditionsConditionOutput
}

type MonitorSeriesConditionsConditionArgs struct {
	Op             pulumi.StringInput     `pulumi:"op"`
	ResolveSustain pulumi.StringPtrInput  `pulumi:"resolveSustain"`
	Severity       pulumi.StringInput     `pulumi:"severity"`
	Sustain        pulumi.StringPtrInput  `pulumi:"sustain"`
	Value          pulumi.Float64PtrInput `pulumi:"value"`
}

func (MonitorSeriesConditionsConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditionsCondition)(nil)).Elem()
}

func (i MonitorSeriesConditionsConditionArgs) ToMonitorSeriesConditionsConditionOutput() MonitorSeriesConditionsConditionOutput {
	return i.ToMonitorSeriesConditionsConditionOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsConditionArgs) ToMonitorSeriesConditionsConditionOutputWithContext(ctx context.Context) MonitorSeriesConditionsConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsConditionOutput)
}

// MonitorSeriesConditionsConditionArrayInput is an input type that accepts MonitorSeriesConditionsConditionArray and MonitorSeriesConditionsConditionArrayOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsConditionArrayInput` via:
//
//	MonitorSeriesConditionsConditionArray{ MonitorSeriesConditionsConditionArgs{...} }
type MonitorSeriesConditionsConditionArrayInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsConditionArrayOutput() MonitorSeriesConditionsConditionArrayOutput
	ToMonitorSeriesConditionsConditionArrayOutputWithContext(context.Context) MonitorSeriesConditionsConditionArrayOutput
}

type MonitorSeriesConditionsConditionArray []MonitorSeriesConditionsConditionInput

func (MonitorSeriesConditionsConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorSeriesConditionsCondition)(nil)).Elem()
}

func (i MonitorSeriesConditionsConditionArray) ToMonitorSeriesConditionsConditionArrayOutput() MonitorSeriesConditionsConditionArrayOutput {
	return i.ToMonitorSeriesConditionsConditionArrayOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsConditionArray) ToMonitorSeriesConditionsConditionArrayOutputWithContext(ctx context.Context) MonitorSeriesConditionsConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsConditionArrayOutput)
}

type MonitorSeriesConditionsConditionOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditionsCondition)(nil)).Elem()
}

func (o MonitorSeriesConditionsConditionOutput) ToMonitorSeriesConditionsConditionOutput() MonitorSeriesConditionsConditionOutput {
	return o
}

func (o MonitorSeriesConditionsConditionOutput) ToMonitorSeriesConditionsConditionOutputWithContext(ctx context.Context) MonitorSeriesConditionsConditionOutput {
	return o
}

func (o MonitorSeriesConditionsConditionOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsCondition) string { return v.Op }).(pulumi.StringOutput)
}

func (o MonitorSeriesConditionsConditionOutput) ResolveSustain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsCondition) *string { return v.ResolveSustain }).(pulumi.StringPtrOutput)
}

func (o MonitorSeriesConditionsConditionOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsCondition) string { return v.Severity }).(pulumi.StringOutput)
}

func (o MonitorSeriesConditionsConditionOutput) Sustain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsCondition) *string { return v.Sustain }).(pulumi.StringPtrOutput)
}

func (o MonitorSeriesConditionsConditionOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsCondition) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type MonitorSeriesConditionsConditionArrayOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorSeriesConditionsCondition)(nil)).Elem()
}

func (o MonitorSeriesConditionsConditionArrayOutput) ToMonitorSeriesConditionsConditionArrayOutput() MonitorSeriesConditionsConditionArrayOutput {
	return o
}

func (o MonitorSeriesConditionsConditionArrayOutput) ToMonitorSeriesConditionsConditionArrayOutputWithContext(ctx context.Context) MonitorSeriesConditionsConditionArrayOutput {
	return o
}

func (o MonitorSeriesConditionsConditionArrayOutput) Index(i pulumi.IntInput) MonitorSeriesConditionsConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorSeriesConditionsCondition {
		return vs[0].([]MonitorSeriesConditionsCondition)[vs[1].(int)]
	}).(MonitorSeriesConditionsConditionOutput)
}

type MonitorSeriesConditionsOverride struct {
	Conditions    []MonitorSeriesConditionsOverrideCondition    `pulumi:"conditions"`
	LabelMatchers []MonitorSeriesConditionsOverrideLabelMatcher `pulumi:"labelMatchers"`
}

// MonitorSeriesConditionsOverrideInput is an input type that accepts MonitorSeriesConditionsOverrideArgs and MonitorSeriesConditionsOverrideOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsOverrideInput` via:
//
//	MonitorSeriesConditionsOverrideArgs{...}
type MonitorSeriesConditionsOverrideInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsOverrideOutput() MonitorSeriesConditionsOverrideOutput
	ToMonitorSeriesConditionsOverrideOutputWithContext(context.Context) MonitorSeriesConditionsOverrideOutput
}

type MonitorSeriesConditionsOverrideArgs struct {
	Conditions    MonitorSeriesConditionsOverrideConditionArrayInput    `pulumi:"conditions"`
	LabelMatchers MonitorSeriesConditionsOverrideLabelMatcherArrayInput `pulumi:"labelMatchers"`
}

func (MonitorSeriesConditionsOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditionsOverride)(nil)).Elem()
}

func (i MonitorSeriesConditionsOverrideArgs) ToMonitorSeriesConditionsOverrideOutput() MonitorSeriesConditionsOverrideOutput {
	return i.ToMonitorSeriesConditionsOverrideOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsOverrideArgs) ToMonitorSeriesConditionsOverrideOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsOverrideOutput)
}

// MonitorSeriesConditionsOverrideArrayInput is an input type that accepts MonitorSeriesConditionsOverrideArray and MonitorSeriesConditionsOverrideArrayOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsOverrideArrayInput` via:
//
//	MonitorSeriesConditionsOverrideArray{ MonitorSeriesConditionsOverrideArgs{...} }
type MonitorSeriesConditionsOverrideArrayInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsOverrideArrayOutput() MonitorSeriesConditionsOverrideArrayOutput
	ToMonitorSeriesConditionsOverrideArrayOutputWithContext(context.Context) MonitorSeriesConditionsOverrideArrayOutput
}

type MonitorSeriesConditionsOverrideArray []MonitorSeriesConditionsOverrideInput

func (MonitorSeriesConditionsOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorSeriesConditionsOverride)(nil)).Elem()
}

func (i MonitorSeriesConditionsOverrideArray) ToMonitorSeriesConditionsOverrideArrayOutput() MonitorSeriesConditionsOverrideArrayOutput {
	return i.ToMonitorSeriesConditionsOverrideArrayOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsOverrideArray) ToMonitorSeriesConditionsOverrideArrayOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsOverrideArrayOutput)
}

type MonitorSeriesConditionsOverrideOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditionsOverride)(nil)).Elem()
}

func (o MonitorSeriesConditionsOverrideOutput) ToMonitorSeriesConditionsOverrideOutput() MonitorSeriesConditionsOverrideOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideOutput) ToMonitorSeriesConditionsOverrideOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideOutput) Conditions() MonitorSeriesConditionsOverrideConditionArrayOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverride) []MonitorSeriesConditionsOverrideCondition {
		return v.Conditions
	}).(MonitorSeriesConditionsOverrideConditionArrayOutput)
}

func (o MonitorSeriesConditionsOverrideOutput) LabelMatchers() MonitorSeriesConditionsOverrideLabelMatcherArrayOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverride) []MonitorSeriesConditionsOverrideLabelMatcher {
		return v.LabelMatchers
	}).(MonitorSeriesConditionsOverrideLabelMatcherArrayOutput)
}

type MonitorSeriesConditionsOverrideArrayOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorSeriesConditionsOverride)(nil)).Elem()
}

func (o MonitorSeriesConditionsOverrideArrayOutput) ToMonitorSeriesConditionsOverrideArrayOutput() MonitorSeriesConditionsOverrideArrayOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideArrayOutput) ToMonitorSeriesConditionsOverrideArrayOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideArrayOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideArrayOutput) Index(i pulumi.IntInput) MonitorSeriesConditionsOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorSeriesConditionsOverride {
		return vs[0].([]MonitorSeriesConditionsOverride)[vs[1].(int)]
	}).(MonitorSeriesConditionsOverrideOutput)
}

type MonitorSeriesConditionsOverrideCondition struct {
	Op             string   `pulumi:"op"`
	ResolveSustain *string  `pulumi:"resolveSustain"`
	Severity       string   `pulumi:"severity"`
	Sustain        *string  `pulumi:"sustain"`
	Value          *float64 `pulumi:"value"`
}

// MonitorSeriesConditionsOverrideConditionInput is an input type that accepts MonitorSeriesConditionsOverrideConditionArgs and MonitorSeriesConditionsOverrideConditionOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsOverrideConditionInput` via:
//
//	MonitorSeriesConditionsOverrideConditionArgs{...}
type MonitorSeriesConditionsOverrideConditionInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsOverrideConditionOutput() MonitorSeriesConditionsOverrideConditionOutput
	ToMonitorSeriesConditionsOverrideConditionOutputWithContext(context.Context) MonitorSeriesConditionsOverrideConditionOutput
}

type MonitorSeriesConditionsOverrideConditionArgs struct {
	Op             pulumi.StringInput     `pulumi:"op"`
	ResolveSustain pulumi.StringPtrInput  `pulumi:"resolveSustain"`
	Severity       pulumi.StringInput     `pulumi:"severity"`
	Sustain        pulumi.StringPtrInput  `pulumi:"sustain"`
	Value          pulumi.Float64PtrInput `pulumi:"value"`
}

func (MonitorSeriesConditionsOverrideConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditionsOverrideCondition)(nil)).Elem()
}

func (i MonitorSeriesConditionsOverrideConditionArgs) ToMonitorSeriesConditionsOverrideConditionOutput() MonitorSeriesConditionsOverrideConditionOutput {
	return i.ToMonitorSeriesConditionsOverrideConditionOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsOverrideConditionArgs) ToMonitorSeriesConditionsOverrideConditionOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsOverrideConditionOutput)
}

// MonitorSeriesConditionsOverrideConditionArrayInput is an input type that accepts MonitorSeriesConditionsOverrideConditionArray and MonitorSeriesConditionsOverrideConditionArrayOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsOverrideConditionArrayInput` via:
//
//	MonitorSeriesConditionsOverrideConditionArray{ MonitorSeriesConditionsOverrideConditionArgs{...} }
type MonitorSeriesConditionsOverrideConditionArrayInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsOverrideConditionArrayOutput() MonitorSeriesConditionsOverrideConditionArrayOutput
	ToMonitorSeriesConditionsOverrideConditionArrayOutputWithContext(context.Context) MonitorSeriesConditionsOverrideConditionArrayOutput
}

type MonitorSeriesConditionsOverrideConditionArray []MonitorSeriesConditionsOverrideConditionInput

func (MonitorSeriesConditionsOverrideConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorSeriesConditionsOverrideCondition)(nil)).Elem()
}

func (i MonitorSeriesConditionsOverrideConditionArray) ToMonitorSeriesConditionsOverrideConditionArrayOutput() MonitorSeriesConditionsOverrideConditionArrayOutput {
	return i.ToMonitorSeriesConditionsOverrideConditionArrayOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsOverrideConditionArray) ToMonitorSeriesConditionsOverrideConditionArrayOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsOverrideConditionArrayOutput)
}

type MonitorSeriesConditionsOverrideConditionOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsOverrideConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditionsOverrideCondition)(nil)).Elem()
}

func (o MonitorSeriesConditionsOverrideConditionOutput) ToMonitorSeriesConditionsOverrideConditionOutput() MonitorSeriesConditionsOverrideConditionOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideConditionOutput) ToMonitorSeriesConditionsOverrideConditionOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideConditionOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideConditionOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverrideCondition) string { return v.Op }).(pulumi.StringOutput)
}

func (o MonitorSeriesConditionsOverrideConditionOutput) ResolveSustain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverrideCondition) *string { return v.ResolveSustain }).(pulumi.StringPtrOutput)
}

func (o MonitorSeriesConditionsOverrideConditionOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverrideCondition) string { return v.Severity }).(pulumi.StringOutput)
}

func (o MonitorSeriesConditionsOverrideConditionOutput) Sustain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverrideCondition) *string { return v.Sustain }).(pulumi.StringPtrOutput)
}

func (o MonitorSeriesConditionsOverrideConditionOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverrideCondition) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type MonitorSeriesConditionsOverrideConditionArrayOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsOverrideConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorSeriesConditionsOverrideCondition)(nil)).Elem()
}

func (o MonitorSeriesConditionsOverrideConditionArrayOutput) ToMonitorSeriesConditionsOverrideConditionArrayOutput() MonitorSeriesConditionsOverrideConditionArrayOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideConditionArrayOutput) ToMonitorSeriesConditionsOverrideConditionArrayOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideConditionArrayOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideConditionArrayOutput) Index(i pulumi.IntInput) MonitorSeriesConditionsOverrideConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorSeriesConditionsOverrideCondition {
		return vs[0].([]MonitorSeriesConditionsOverrideCondition)[vs[1].(int)]
	}).(MonitorSeriesConditionsOverrideConditionOutput)
}

type MonitorSeriesConditionsOverrideLabelMatcher struct {
	Name  string `pulumi:"name"`
	Type  string `pulumi:"type"`
	Value string `pulumi:"value"`
}

// MonitorSeriesConditionsOverrideLabelMatcherInput is an input type that accepts MonitorSeriesConditionsOverrideLabelMatcherArgs and MonitorSeriesConditionsOverrideLabelMatcherOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsOverrideLabelMatcherInput` via:
//
//	MonitorSeriesConditionsOverrideLabelMatcherArgs{...}
type MonitorSeriesConditionsOverrideLabelMatcherInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsOverrideLabelMatcherOutput() MonitorSeriesConditionsOverrideLabelMatcherOutput
	ToMonitorSeriesConditionsOverrideLabelMatcherOutputWithContext(context.Context) MonitorSeriesConditionsOverrideLabelMatcherOutput
}

type MonitorSeriesConditionsOverrideLabelMatcherArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (MonitorSeriesConditionsOverrideLabelMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditionsOverrideLabelMatcher)(nil)).Elem()
}

func (i MonitorSeriesConditionsOverrideLabelMatcherArgs) ToMonitorSeriesConditionsOverrideLabelMatcherOutput() MonitorSeriesConditionsOverrideLabelMatcherOutput {
	return i.ToMonitorSeriesConditionsOverrideLabelMatcherOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsOverrideLabelMatcherArgs) ToMonitorSeriesConditionsOverrideLabelMatcherOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideLabelMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsOverrideLabelMatcherOutput)
}

// MonitorSeriesConditionsOverrideLabelMatcherArrayInput is an input type that accepts MonitorSeriesConditionsOverrideLabelMatcherArray and MonitorSeriesConditionsOverrideLabelMatcherArrayOutput values.
// You can construct a concrete instance of `MonitorSeriesConditionsOverrideLabelMatcherArrayInput` via:
//
//	MonitorSeriesConditionsOverrideLabelMatcherArray{ MonitorSeriesConditionsOverrideLabelMatcherArgs{...} }
type MonitorSeriesConditionsOverrideLabelMatcherArrayInput interface {
	pulumi.Input

	ToMonitorSeriesConditionsOverrideLabelMatcherArrayOutput() MonitorSeriesConditionsOverrideLabelMatcherArrayOutput
	ToMonitorSeriesConditionsOverrideLabelMatcherArrayOutputWithContext(context.Context) MonitorSeriesConditionsOverrideLabelMatcherArrayOutput
}

type MonitorSeriesConditionsOverrideLabelMatcherArray []MonitorSeriesConditionsOverrideLabelMatcherInput

func (MonitorSeriesConditionsOverrideLabelMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorSeriesConditionsOverrideLabelMatcher)(nil)).Elem()
}

func (i MonitorSeriesConditionsOverrideLabelMatcherArray) ToMonitorSeriesConditionsOverrideLabelMatcherArrayOutput() MonitorSeriesConditionsOverrideLabelMatcherArrayOutput {
	return i.ToMonitorSeriesConditionsOverrideLabelMatcherArrayOutputWithContext(context.Background())
}

func (i MonitorSeriesConditionsOverrideLabelMatcherArray) ToMonitorSeriesConditionsOverrideLabelMatcherArrayOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideLabelMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSeriesConditionsOverrideLabelMatcherArrayOutput)
}

type MonitorSeriesConditionsOverrideLabelMatcherOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsOverrideLabelMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSeriesConditionsOverrideLabelMatcher)(nil)).Elem()
}

func (o MonitorSeriesConditionsOverrideLabelMatcherOutput) ToMonitorSeriesConditionsOverrideLabelMatcherOutput() MonitorSeriesConditionsOverrideLabelMatcherOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideLabelMatcherOutput) ToMonitorSeriesConditionsOverrideLabelMatcherOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideLabelMatcherOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideLabelMatcherOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverrideLabelMatcher) string { return v.Name }).(pulumi.StringOutput)
}

func (o MonitorSeriesConditionsOverrideLabelMatcherOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverrideLabelMatcher) string { return v.Type }).(pulumi.StringOutput)
}

func (o MonitorSeriesConditionsOverrideLabelMatcherOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorSeriesConditionsOverrideLabelMatcher) string { return v.Value }).(pulumi.StringOutput)
}

type MonitorSeriesConditionsOverrideLabelMatcherArrayOutput struct{ *pulumi.OutputState }

func (MonitorSeriesConditionsOverrideLabelMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorSeriesConditionsOverrideLabelMatcher)(nil)).Elem()
}

func (o MonitorSeriesConditionsOverrideLabelMatcherArrayOutput) ToMonitorSeriesConditionsOverrideLabelMatcherArrayOutput() MonitorSeriesConditionsOverrideLabelMatcherArrayOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideLabelMatcherArrayOutput) ToMonitorSeriesConditionsOverrideLabelMatcherArrayOutputWithContext(ctx context.Context) MonitorSeriesConditionsOverrideLabelMatcherArrayOutput {
	return o
}

func (o MonitorSeriesConditionsOverrideLabelMatcherArrayOutput) Index(i pulumi.IntInput) MonitorSeriesConditionsOverrideLabelMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorSeriesConditionsOverrideLabelMatcher {
		return vs[0].([]MonitorSeriesConditionsOverrideLabelMatcher)[vs[1].(int)]
	}).(MonitorSeriesConditionsOverrideLabelMatcherOutput)
}

type MonitorSignalGrouping struct {
	LabelNames      []string `pulumi:"labelNames"`
	SignalPerSeries *bool    `pulumi:"signalPerSeries"`
}

// MonitorSignalGroupingInput is an input type that accepts MonitorSignalGroupingArgs and MonitorSignalGroupingOutput values.
// You can construct a concrete instance of `MonitorSignalGroupingInput` via:
//
//	MonitorSignalGroupingArgs{...}
type MonitorSignalGroupingInput interface {
	pulumi.Input

	ToMonitorSignalGroupingOutput() MonitorSignalGroupingOutput
	ToMonitorSignalGroupingOutputWithContext(context.Context) MonitorSignalGroupingOutput
}

type MonitorSignalGroupingArgs struct {
	LabelNames      pulumi.StringArrayInput `pulumi:"labelNames"`
	SignalPerSeries pulumi.BoolPtrInput     `pulumi:"signalPerSeries"`
}

func (MonitorSignalGroupingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSignalGrouping)(nil)).Elem()
}

func (i MonitorSignalGroupingArgs) ToMonitorSignalGroupingOutput() MonitorSignalGroupingOutput {
	return i.ToMonitorSignalGroupingOutputWithContext(context.Background())
}

func (i MonitorSignalGroupingArgs) ToMonitorSignalGroupingOutputWithContext(ctx context.Context) MonitorSignalGroupingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSignalGroupingOutput)
}

func (i MonitorSignalGroupingArgs) ToMonitorSignalGroupingPtrOutput() MonitorSignalGroupingPtrOutput {
	return i.ToMonitorSignalGroupingPtrOutputWithContext(context.Background())
}

func (i MonitorSignalGroupingArgs) ToMonitorSignalGroupingPtrOutputWithContext(ctx context.Context) MonitorSignalGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSignalGroupingOutput).ToMonitorSignalGroupingPtrOutputWithContext(ctx)
}

// MonitorSignalGroupingPtrInput is an input type that accepts MonitorSignalGroupingArgs, MonitorSignalGroupingPtr and MonitorSignalGroupingPtrOutput values.
// You can construct a concrete instance of `MonitorSignalGroupingPtrInput` via:
//
//	        MonitorSignalGroupingArgs{...}
//
//	or:
//
//	        nil
type MonitorSignalGroupingPtrInput interface {
	pulumi.Input

	ToMonitorSignalGroupingPtrOutput() MonitorSignalGroupingPtrOutput
	ToMonitorSignalGroupingPtrOutputWithContext(context.Context) MonitorSignalGroupingPtrOutput
}

type monitorSignalGroupingPtrType MonitorSignalGroupingArgs

func MonitorSignalGroupingPtr(v *MonitorSignalGroupingArgs) MonitorSignalGroupingPtrInput {
	return (*monitorSignalGroupingPtrType)(v)
}

func (*monitorSignalGroupingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorSignalGrouping)(nil)).Elem()
}

func (i *monitorSignalGroupingPtrType) ToMonitorSignalGroupingPtrOutput() MonitorSignalGroupingPtrOutput {
	return i.ToMonitorSignalGroupingPtrOutputWithContext(context.Background())
}

func (i *monitorSignalGroupingPtrType) ToMonitorSignalGroupingPtrOutputWithContext(ctx context.Context) MonitorSignalGroupingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorSignalGroupingPtrOutput)
}

type MonitorSignalGroupingOutput struct{ *pulumi.OutputState }

func (MonitorSignalGroupingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorSignalGrouping)(nil)).Elem()
}

func (o MonitorSignalGroupingOutput) ToMonitorSignalGroupingOutput() MonitorSignalGroupingOutput {
	return o
}

func (o MonitorSignalGroupingOutput) ToMonitorSignalGroupingOutputWithContext(ctx context.Context) MonitorSignalGroupingOutput {
	return o
}

func (o MonitorSignalGroupingOutput) ToMonitorSignalGroupingPtrOutput() MonitorSignalGroupingPtrOutput {
	return o.ToMonitorSignalGroupingPtrOutputWithContext(context.Background())
}

func (o MonitorSignalGroupingOutput) ToMonitorSignalGroupingPtrOutputWithContext(ctx context.Context) MonitorSignalGroupingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorSignalGrouping) *MonitorSignalGrouping {
		return &v
	}).(MonitorSignalGroupingPtrOutput)
}

func (o MonitorSignalGroupingOutput) LabelNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorSignalGrouping) []string { return v.LabelNames }).(pulumi.StringArrayOutput)
}

func (o MonitorSignalGroupingOutput) SignalPerSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MonitorSignalGrouping) *bool { return v.SignalPerSeries }).(pulumi.BoolPtrOutput)
}

type MonitorSignalGroupingPtrOutput struct{ *pulumi.OutputState }

func (MonitorSignalGroupingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorSignalGrouping)(nil)).Elem()
}

func (o MonitorSignalGroupingPtrOutput) ToMonitorSignalGroupingPtrOutput() MonitorSignalGroupingPtrOutput {
	return o
}

func (o MonitorSignalGroupingPtrOutput) ToMonitorSignalGroupingPtrOutputWithContext(ctx context.Context) MonitorSignalGroupingPtrOutput {
	return o
}

func (o MonitorSignalGroupingPtrOutput) Elem() MonitorSignalGroupingOutput {
	return o.ApplyT(func(v *MonitorSignalGrouping) MonitorSignalGrouping {
		if v != nil {
			return *v
		}
		var ret MonitorSignalGrouping
		return ret
	}).(MonitorSignalGroupingOutput)
}

func (o MonitorSignalGroupingPtrOutput) LabelNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitorSignalGrouping) []string {
		if v == nil {
			return nil
		}
		return v.LabelNames
	}).(pulumi.StringArrayOutput)
}

func (o MonitorSignalGroupingPtrOutput) SignalPerSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *MonitorSignalGrouping) *bool {
		if v == nil {
			return nil
		}
		return v.SignalPerSeries
	}).(pulumi.BoolPtrOutput)
}

type NotificationPolicyDataSourceOverride struct {
	AlertLabelMatchers []NotificationPolicyDataSourceOverrideAlertLabelMatcher `pulumi:"alertLabelMatchers"`
	Routes             []NotificationPolicyDataSourceOverrideRoute             `pulumi:"routes"`
}

// NotificationPolicyDataSourceOverrideInput is an input type that accepts NotificationPolicyDataSourceOverrideArgs and NotificationPolicyDataSourceOverrideOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceOverrideInput` via:
//
//	NotificationPolicyDataSourceOverrideArgs{...}
type NotificationPolicyDataSourceOverrideInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceOverrideOutput() NotificationPolicyDataSourceOverrideOutput
	ToNotificationPolicyDataSourceOverrideOutputWithContext(context.Context) NotificationPolicyDataSourceOverrideOutput
}

type NotificationPolicyDataSourceOverrideArgs struct {
	AlertLabelMatchers NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayInput `pulumi:"alertLabelMatchers"`
	Routes             NotificationPolicyDataSourceOverrideRouteArrayInput             `pulumi:"routes"`
}

func (NotificationPolicyDataSourceOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceOverride)(nil)).Elem()
}

func (i NotificationPolicyDataSourceOverrideArgs) ToNotificationPolicyDataSourceOverrideOutput() NotificationPolicyDataSourceOverrideOutput {
	return i.ToNotificationPolicyDataSourceOverrideOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceOverrideArgs) ToNotificationPolicyDataSourceOverrideOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceOverrideOutput)
}

// NotificationPolicyDataSourceOverrideArrayInput is an input type that accepts NotificationPolicyDataSourceOverrideArray and NotificationPolicyDataSourceOverrideArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceOverrideArrayInput` via:
//
//	NotificationPolicyDataSourceOverrideArray{ NotificationPolicyDataSourceOverrideArgs{...} }
type NotificationPolicyDataSourceOverrideArrayInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceOverrideArrayOutput() NotificationPolicyDataSourceOverrideArrayOutput
	ToNotificationPolicyDataSourceOverrideArrayOutputWithContext(context.Context) NotificationPolicyDataSourceOverrideArrayOutput
}

type NotificationPolicyDataSourceOverrideArray []NotificationPolicyDataSourceOverrideInput

func (NotificationPolicyDataSourceOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceOverride)(nil)).Elem()
}

func (i NotificationPolicyDataSourceOverrideArray) ToNotificationPolicyDataSourceOverrideArrayOutput() NotificationPolicyDataSourceOverrideArrayOutput {
	return i.ToNotificationPolicyDataSourceOverrideArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceOverrideArray) ToNotificationPolicyDataSourceOverrideArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceOverrideArrayOutput)
}

type NotificationPolicyDataSourceOverrideOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceOverride)(nil)).Elem()
}

func (o NotificationPolicyDataSourceOverrideOutput) ToNotificationPolicyDataSourceOverrideOutput() NotificationPolicyDataSourceOverrideOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideOutput) ToNotificationPolicyDataSourceOverrideOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideOutput) AlertLabelMatchers() NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceOverride) []NotificationPolicyDataSourceOverrideAlertLabelMatcher {
		return v.AlertLabelMatchers
	}).(NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput)
}

func (o NotificationPolicyDataSourceOverrideOutput) Routes() NotificationPolicyDataSourceOverrideRouteArrayOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceOverride) []NotificationPolicyDataSourceOverrideRoute {
		return v.Routes
	}).(NotificationPolicyDataSourceOverrideRouteArrayOutput)
}

type NotificationPolicyDataSourceOverrideArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceOverride)(nil)).Elem()
}

func (o NotificationPolicyDataSourceOverrideArrayOutput) ToNotificationPolicyDataSourceOverrideArrayOutput() NotificationPolicyDataSourceOverrideArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideArrayOutput) ToNotificationPolicyDataSourceOverrideArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideArrayOutput) Index(i pulumi.IntInput) NotificationPolicyDataSourceOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyDataSourceOverride {
		return vs[0].([]NotificationPolicyDataSourceOverride)[vs[1].(int)]
	}).(NotificationPolicyDataSourceOverrideOutput)
}

type NotificationPolicyDataSourceOverrideAlertLabelMatcher struct {
	Name  string `pulumi:"name"`
	Type  string `pulumi:"type"`
	Value string `pulumi:"value"`
}

// NotificationPolicyDataSourceOverrideAlertLabelMatcherInput is an input type that accepts NotificationPolicyDataSourceOverrideAlertLabelMatcherArgs and NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceOverrideAlertLabelMatcherInput` via:
//
//	NotificationPolicyDataSourceOverrideAlertLabelMatcherArgs{...}
type NotificationPolicyDataSourceOverrideAlertLabelMatcherInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceOverrideAlertLabelMatcherOutput() NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput
	ToNotificationPolicyDataSourceOverrideAlertLabelMatcherOutputWithContext(context.Context) NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput
}

type NotificationPolicyDataSourceOverrideAlertLabelMatcherArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (NotificationPolicyDataSourceOverrideAlertLabelMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceOverrideAlertLabelMatcher)(nil)).Elem()
}

func (i NotificationPolicyDataSourceOverrideAlertLabelMatcherArgs) ToNotificationPolicyDataSourceOverrideAlertLabelMatcherOutput() NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput {
	return i.ToNotificationPolicyDataSourceOverrideAlertLabelMatcherOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceOverrideAlertLabelMatcherArgs) ToNotificationPolicyDataSourceOverrideAlertLabelMatcherOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput)
}

// NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayInput is an input type that accepts NotificationPolicyDataSourceOverrideAlertLabelMatcherArray and NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayInput` via:
//
//	NotificationPolicyDataSourceOverrideAlertLabelMatcherArray{ NotificationPolicyDataSourceOverrideAlertLabelMatcherArgs{...} }
type NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput() NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput
	ToNotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutputWithContext(context.Context) NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput
}

type NotificationPolicyDataSourceOverrideAlertLabelMatcherArray []NotificationPolicyDataSourceOverrideAlertLabelMatcherInput

func (NotificationPolicyDataSourceOverrideAlertLabelMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceOverrideAlertLabelMatcher)(nil)).Elem()
}

func (i NotificationPolicyDataSourceOverrideAlertLabelMatcherArray) ToNotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput() NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput {
	return i.ToNotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceOverrideAlertLabelMatcherArray) ToNotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput)
}

type NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceOverrideAlertLabelMatcher)(nil)).Elem()
}

func (o NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput) ToNotificationPolicyDataSourceOverrideAlertLabelMatcherOutput() NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput) ToNotificationPolicyDataSourceOverrideAlertLabelMatcherOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceOverrideAlertLabelMatcher) string { return v.Name }).(pulumi.StringOutput)
}

func (o NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceOverrideAlertLabelMatcher) string { return v.Type }).(pulumi.StringOutput)
}

func (o NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceOverrideAlertLabelMatcher) string { return v.Value }).(pulumi.StringOutput)
}

type NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceOverrideAlertLabelMatcher)(nil)).Elem()
}

func (o NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput) ToNotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput() NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput) ToNotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput) Index(i pulumi.IntInput) NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyDataSourceOverrideAlertLabelMatcher {
		return vs[0].([]NotificationPolicyDataSourceOverrideAlertLabelMatcher)[vs[1].(int)]
	}).(NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput)
}

type NotificationPolicyDataSourceOverrideRoute struct {
	Notifiers      []string `pulumi:"notifiers"`
	RepeatInterval *string  `pulumi:"repeatInterval"`
	Severity       string   `pulumi:"severity"`
}

// NotificationPolicyDataSourceOverrideRouteInput is an input type that accepts NotificationPolicyDataSourceOverrideRouteArgs and NotificationPolicyDataSourceOverrideRouteOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceOverrideRouteInput` via:
//
//	NotificationPolicyDataSourceOverrideRouteArgs{...}
type NotificationPolicyDataSourceOverrideRouteInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceOverrideRouteOutput() NotificationPolicyDataSourceOverrideRouteOutput
	ToNotificationPolicyDataSourceOverrideRouteOutputWithContext(context.Context) NotificationPolicyDataSourceOverrideRouteOutput
}

type NotificationPolicyDataSourceOverrideRouteArgs struct {
	Notifiers      pulumi.StringArrayInput `pulumi:"notifiers"`
	RepeatInterval pulumi.StringPtrInput   `pulumi:"repeatInterval"`
	Severity       pulumi.StringInput      `pulumi:"severity"`
}

func (NotificationPolicyDataSourceOverrideRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceOverrideRoute)(nil)).Elem()
}

func (i NotificationPolicyDataSourceOverrideRouteArgs) ToNotificationPolicyDataSourceOverrideRouteOutput() NotificationPolicyDataSourceOverrideRouteOutput {
	return i.ToNotificationPolicyDataSourceOverrideRouteOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceOverrideRouteArgs) ToNotificationPolicyDataSourceOverrideRouteOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceOverrideRouteOutput)
}

// NotificationPolicyDataSourceOverrideRouteArrayInput is an input type that accepts NotificationPolicyDataSourceOverrideRouteArray and NotificationPolicyDataSourceOverrideRouteArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceOverrideRouteArrayInput` via:
//
//	NotificationPolicyDataSourceOverrideRouteArray{ NotificationPolicyDataSourceOverrideRouteArgs{...} }
type NotificationPolicyDataSourceOverrideRouteArrayInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceOverrideRouteArrayOutput() NotificationPolicyDataSourceOverrideRouteArrayOutput
	ToNotificationPolicyDataSourceOverrideRouteArrayOutputWithContext(context.Context) NotificationPolicyDataSourceOverrideRouteArrayOutput
}

type NotificationPolicyDataSourceOverrideRouteArray []NotificationPolicyDataSourceOverrideRouteInput

func (NotificationPolicyDataSourceOverrideRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceOverrideRoute)(nil)).Elem()
}

func (i NotificationPolicyDataSourceOverrideRouteArray) ToNotificationPolicyDataSourceOverrideRouteArrayOutput() NotificationPolicyDataSourceOverrideRouteArrayOutput {
	return i.ToNotificationPolicyDataSourceOverrideRouteArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceOverrideRouteArray) ToNotificationPolicyDataSourceOverrideRouteArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceOverrideRouteArrayOutput)
}

type NotificationPolicyDataSourceOverrideRouteOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceOverrideRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceOverrideRoute)(nil)).Elem()
}

func (o NotificationPolicyDataSourceOverrideRouteOutput) ToNotificationPolicyDataSourceOverrideRouteOutput() NotificationPolicyDataSourceOverrideRouteOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideRouteOutput) ToNotificationPolicyDataSourceOverrideRouteOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideRouteOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideRouteOutput) Notifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceOverrideRoute) []string { return v.Notifiers }).(pulumi.StringArrayOutput)
}

func (o NotificationPolicyDataSourceOverrideRouteOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceOverrideRoute) *string { return v.RepeatInterval }).(pulumi.StringPtrOutput)
}

func (o NotificationPolicyDataSourceOverrideRouteOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceOverrideRoute) string { return v.Severity }).(pulumi.StringOutput)
}

type NotificationPolicyDataSourceOverrideRouteArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceOverrideRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceOverrideRoute)(nil)).Elem()
}

func (o NotificationPolicyDataSourceOverrideRouteArrayOutput) ToNotificationPolicyDataSourceOverrideRouteArrayOutput() NotificationPolicyDataSourceOverrideRouteArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideRouteArrayOutput) ToNotificationPolicyDataSourceOverrideRouteArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceOverrideRouteArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceOverrideRouteArrayOutput) Index(i pulumi.IntInput) NotificationPolicyDataSourceOverrideRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyDataSourceOverrideRoute {
		return vs[0].([]NotificationPolicyDataSourceOverrideRoute)[vs[1].(int)]
	}).(NotificationPolicyDataSourceOverrideRouteOutput)
}

type NotificationPolicyDataSourceRoute struct {
	Notifiers      []string `pulumi:"notifiers"`
	RepeatInterval *string  `pulumi:"repeatInterval"`
	Severity       string   `pulumi:"severity"`
}

// NotificationPolicyDataSourceRouteInput is an input type that accepts NotificationPolicyDataSourceRouteArgs and NotificationPolicyDataSourceRouteOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceRouteInput` via:
//
//	NotificationPolicyDataSourceRouteArgs{...}
type NotificationPolicyDataSourceRouteInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceRouteOutput() NotificationPolicyDataSourceRouteOutput
	ToNotificationPolicyDataSourceRouteOutputWithContext(context.Context) NotificationPolicyDataSourceRouteOutput
}

type NotificationPolicyDataSourceRouteArgs struct {
	Notifiers      pulumi.StringArrayInput `pulumi:"notifiers"`
	RepeatInterval pulumi.StringPtrInput   `pulumi:"repeatInterval"`
	Severity       pulumi.StringInput      `pulumi:"severity"`
}

func (NotificationPolicyDataSourceRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceRoute)(nil)).Elem()
}

func (i NotificationPolicyDataSourceRouteArgs) ToNotificationPolicyDataSourceRouteOutput() NotificationPolicyDataSourceRouteOutput {
	return i.ToNotificationPolicyDataSourceRouteOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceRouteArgs) ToNotificationPolicyDataSourceRouteOutputWithContext(ctx context.Context) NotificationPolicyDataSourceRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceRouteOutput)
}

// NotificationPolicyDataSourceRouteArrayInput is an input type that accepts NotificationPolicyDataSourceRouteArray and NotificationPolicyDataSourceRouteArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceRouteArrayInput` via:
//
//	NotificationPolicyDataSourceRouteArray{ NotificationPolicyDataSourceRouteArgs{...} }
type NotificationPolicyDataSourceRouteArrayInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceRouteArrayOutput() NotificationPolicyDataSourceRouteArrayOutput
	ToNotificationPolicyDataSourceRouteArrayOutputWithContext(context.Context) NotificationPolicyDataSourceRouteArrayOutput
}

type NotificationPolicyDataSourceRouteArray []NotificationPolicyDataSourceRouteInput

func (NotificationPolicyDataSourceRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceRoute)(nil)).Elem()
}

func (i NotificationPolicyDataSourceRouteArray) ToNotificationPolicyDataSourceRouteArrayOutput() NotificationPolicyDataSourceRouteArrayOutput {
	return i.ToNotificationPolicyDataSourceRouteArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceRouteArray) ToNotificationPolicyDataSourceRouteArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceRouteArrayOutput)
}

type NotificationPolicyDataSourceRouteOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceRoute)(nil)).Elem()
}

func (o NotificationPolicyDataSourceRouteOutput) ToNotificationPolicyDataSourceRouteOutput() NotificationPolicyDataSourceRouteOutput {
	return o
}

func (o NotificationPolicyDataSourceRouteOutput) ToNotificationPolicyDataSourceRouteOutputWithContext(ctx context.Context) NotificationPolicyDataSourceRouteOutput {
	return o
}

func (o NotificationPolicyDataSourceRouteOutput) Notifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceRoute) []string { return v.Notifiers }).(pulumi.StringArrayOutput)
}

func (o NotificationPolicyDataSourceRouteOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceRoute) *string { return v.RepeatInterval }).(pulumi.StringPtrOutput)
}

func (o NotificationPolicyDataSourceRouteOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceRoute) string { return v.Severity }).(pulumi.StringOutput)
}

type NotificationPolicyDataSourceRouteArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceRoute)(nil)).Elem()
}

func (o NotificationPolicyDataSourceRouteArrayOutput) ToNotificationPolicyDataSourceRouteArrayOutput() NotificationPolicyDataSourceRouteArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceRouteArrayOutput) ToNotificationPolicyDataSourceRouteArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceRouteArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceRouteArrayOutput) Index(i pulumi.IntInput) NotificationPolicyDataSourceRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyDataSourceRoute {
		return vs[0].([]NotificationPolicyDataSourceRoute)[vs[1].(int)]
	}).(NotificationPolicyDataSourceRouteOutput)
}

type NotificationPolicyDataSourceRule struct {
	Notifiers      []string `pulumi:"notifiers"`
	RepeatInterval *string  `pulumi:"repeatInterval"`
	Severity       string   `pulumi:"severity"`
}

// NotificationPolicyDataSourceRuleInput is an input type that accepts NotificationPolicyDataSourceRuleArgs and NotificationPolicyDataSourceRuleOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceRuleInput` via:
//
//	NotificationPolicyDataSourceRuleArgs{...}
type NotificationPolicyDataSourceRuleInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceRuleOutput() NotificationPolicyDataSourceRuleOutput
	ToNotificationPolicyDataSourceRuleOutputWithContext(context.Context) NotificationPolicyDataSourceRuleOutput
}

type NotificationPolicyDataSourceRuleArgs struct {
	Notifiers      pulumi.StringArrayInput `pulumi:"notifiers"`
	RepeatInterval pulumi.StringPtrInput   `pulumi:"repeatInterval"`
	Severity       pulumi.StringInput      `pulumi:"severity"`
}

func (NotificationPolicyDataSourceRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceRule)(nil)).Elem()
}

func (i NotificationPolicyDataSourceRuleArgs) ToNotificationPolicyDataSourceRuleOutput() NotificationPolicyDataSourceRuleOutput {
	return i.ToNotificationPolicyDataSourceRuleOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceRuleArgs) ToNotificationPolicyDataSourceRuleOutputWithContext(ctx context.Context) NotificationPolicyDataSourceRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceRuleOutput)
}

// NotificationPolicyDataSourceRuleArrayInput is an input type that accepts NotificationPolicyDataSourceRuleArray and NotificationPolicyDataSourceRuleArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyDataSourceRuleArrayInput` via:
//
//	NotificationPolicyDataSourceRuleArray{ NotificationPolicyDataSourceRuleArgs{...} }
type NotificationPolicyDataSourceRuleArrayInput interface {
	pulumi.Input

	ToNotificationPolicyDataSourceRuleArrayOutput() NotificationPolicyDataSourceRuleArrayOutput
	ToNotificationPolicyDataSourceRuleArrayOutputWithContext(context.Context) NotificationPolicyDataSourceRuleArrayOutput
}

type NotificationPolicyDataSourceRuleArray []NotificationPolicyDataSourceRuleInput

func (NotificationPolicyDataSourceRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceRule)(nil)).Elem()
}

func (i NotificationPolicyDataSourceRuleArray) ToNotificationPolicyDataSourceRuleArrayOutput() NotificationPolicyDataSourceRuleArrayOutput {
	return i.ToNotificationPolicyDataSourceRuleArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyDataSourceRuleArray) ToNotificationPolicyDataSourceRuleArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyDataSourceRuleArrayOutput)
}

type NotificationPolicyDataSourceRuleOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceRule)(nil)).Elem()
}

func (o NotificationPolicyDataSourceRuleOutput) ToNotificationPolicyDataSourceRuleOutput() NotificationPolicyDataSourceRuleOutput {
	return o
}

func (o NotificationPolicyDataSourceRuleOutput) ToNotificationPolicyDataSourceRuleOutputWithContext(ctx context.Context) NotificationPolicyDataSourceRuleOutput {
	return o
}

func (o NotificationPolicyDataSourceRuleOutput) Notifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceRule) []string { return v.Notifiers }).(pulumi.StringArrayOutput)
}

func (o NotificationPolicyDataSourceRuleOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceRule) *string { return v.RepeatInterval }).(pulumi.StringPtrOutput)
}

func (o NotificationPolicyDataSourceRuleOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceRule) string { return v.Severity }).(pulumi.StringOutput)
}

type NotificationPolicyDataSourceRuleArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyDataSourceRule)(nil)).Elem()
}

func (o NotificationPolicyDataSourceRuleArrayOutput) ToNotificationPolicyDataSourceRuleArrayOutput() NotificationPolicyDataSourceRuleArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceRuleArrayOutput) ToNotificationPolicyDataSourceRuleArrayOutputWithContext(ctx context.Context) NotificationPolicyDataSourceRuleArrayOutput {
	return o
}

func (o NotificationPolicyDataSourceRuleArrayOutput) Index(i pulumi.IntInput) NotificationPolicyDataSourceRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyDataSourceRule {
		return vs[0].([]NotificationPolicyDataSourceRule)[vs[1].(int)]
	}).(NotificationPolicyDataSourceRuleOutput)
}

type NotificationPolicyOverride struct {
	AlertLabelMatchers []NotificationPolicyOverrideAlertLabelMatcher `pulumi:"alertLabelMatchers"`
	Routes             []NotificationPolicyOverrideRoute             `pulumi:"routes"`
}

// NotificationPolicyOverrideInput is an input type that accepts NotificationPolicyOverrideArgs and NotificationPolicyOverrideOutput values.
// You can construct a concrete instance of `NotificationPolicyOverrideInput` via:
//
//	NotificationPolicyOverrideArgs{...}
type NotificationPolicyOverrideInput interface {
	pulumi.Input

	ToNotificationPolicyOverrideOutput() NotificationPolicyOverrideOutput
	ToNotificationPolicyOverrideOutputWithContext(context.Context) NotificationPolicyOverrideOutput
}

type NotificationPolicyOverrideArgs struct {
	AlertLabelMatchers NotificationPolicyOverrideAlertLabelMatcherArrayInput `pulumi:"alertLabelMatchers"`
	Routes             NotificationPolicyOverrideRouteArrayInput             `pulumi:"routes"`
}

func (NotificationPolicyOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyOverride)(nil)).Elem()
}

func (i NotificationPolicyOverrideArgs) ToNotificationPolicyOverrideOutput() NotificationPolicyOverrideOutput {
	return i.ToNotificationPolicyOverrideOutputWithContext(context.Background())
}

func (i NotificationPolicyOverrideArgs) ToNotificationPolicyOverrideOutputWithContext(ctx context.Context) NotificationPolicyOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyOverrideOutput)
}

// NotificationPolicyOverrideArrayInput is an input type that accepts NotificationPolicyOverrideArray and NotificationPolicyOverrideArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyOverrideArrayInput` via:
//
//	NotificationPolicyOverrideArray{ NotificationPolicyOverrideArgs{...} }
type NotificationPolicyOverrideArrayInput interface {
	pulumi.Input

	ToNotificationPolicyOverrideArrayOutput() NotificationPolicyOverrideArrayOutput
	ToNotificationPolicyOverrideArrayOutputWithContext(context.Context) NotificationPolicyOverrideArrayOutput
}

type NotificationPolicyOverrideArray []NotificationPolicyOverrideInput

func (NotificationPolicyOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyOverride)(nil)).Elem()
}

func (i NotificationPolicyOverrideArray) ToNotificationPolicyOverrideArrayOutput() NotificationPolicyOverrideArrayOutput {
	return i.ToNotificationPolicyOverrideArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyOverrideArray) ToNotificationPolicyOverrideArrayOutputWithContext(ctx context.Context) NotificationPolicyOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyOverrideArrayOutput)
}

type NotificationPolicyOverrideOutput struct{ *pulumi.OutputState }

func (NotificationPolicyOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyOverride)(nil)).Elem()
}

func (o NotificationPolicyOverrideOutput) ToNotificationPolicyOverrideOutput() NotificationPolicyOverrideOutput {
	return o
}

func (o NotificationPolicyOverrideOutput) ToNotificationPolicyOverrideOutputWithContext(ctx context.Context) NotificationPolicyOverrideOutput {
	return o
}

func (o NotificationPolicyOverrideOutput) AlertLabelMatchers() NotificationPolicyOverrideAlertLabelMatcherArrayOutput {
	return o.ApplyT(func(v NotificationPolicyOverride) []NotificationPolicyOverrideAlertLabelMatcher {
		return v.AlertLabelMatchers
	}).(NotificationPolicyOverrideAlertLabelMatcherArrayOutput)
}

func (o NotificationPolicyOverrideOutput) Routes() NotificationPolicyOverrideRouteArrayOutput {
	return o.ApplyT(func(v NotificationPolicyOverride) []NotificationPolicyOverrideRoute { return v.Routes }).(NotificationPolicyOverrideRouteArrayOutput)
}

type NotificationPolicyOverrideArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyOverride)(nil)).Elem()
}

func (o NotificationPolicyOverrideArrayOutput) ToNotificationPolicyOverrideArrayOutput() NotificationPolicyOverrideArrayOutput {
	return o
}

func (o NotificationPolicyOverrideArrayOutput) ToNotificationPolicyOverrideArrayOutputWithContext(ctx context.Context) NotificationPolicyOverrideArrayOutput {
	return o
}

func (o NotificationPolicyOverrideArrayOutput) Index(i pulumi.IntInput) NotificationPolicyOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyOverride {
		return vs[0].([]NotificationPolicyOverride)[vs[1].(int)]
	}).(NotificationPolicyOverrideOutput)
}

type NotificationPolicyOverrideAlertLabelMatcher struct {
	Name  string `pulumi:"name"`
	Type  string `pulumi:"type"`
	Value string `pulumi:"value"`
}

// NotificationPolicyOverrideAlertLabelMatcherInput is an input type that accepts NotificationPolicyOverrideAlertLabelMatcherArgs and NotificationPolicyOverrideAlertLabelMatcherOutput values.
// You can construct a concrete instance of `NotificationPolicyOverrideAlertLabelMatcherInput` via:
//
//	NotificationPolicyOverrideAlertLabelMatcherArgs{...}
type NotificationPolicyOverrideAlertLabelMatcherInput interface {
	pulumi.Input

	ToNotificationPolicyOverrideAlertLabelMatcherOutput() NotificationPolicyOverrideAlertLabelMatcherOutput
	ToNotificationPolicyOverrideAlertLabelMatcherOutputWithContext(context.Context) NotificationPolicyOverrideAlertLabelMatcherOutput
}

type NotificationPolicyOverrideAlertLabelMatcherArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (NotificationPolicyOverrideAlertLabelMatcherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyOverrideAlertLabelMatcher)(nil)).Elem()
}

func (i NotificationPolicyOverrideAlertLabelMatcherArgs) ToNotificationPolicyOverrideAlertLabelMatcherOutput() NotificationPolicyOverrideAlertLabelMatcherOutput {
	return i.ToNotificationPolicyOverrideAlertLabelMatcherOutputWithContext(context.Background())
}

func (i NotificationPolicyOverrideAlertLabelMatcherArgs) ToNotificationPolicyOverrideAlertLabelMatcherOutputWithContext(ctx context.Context) NotificationPolicyOverrideAlertLabelMatcherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyOverrideAlertLabelMatcherOutput)
}

// NotificationPolicyOverrideAlertLabelMatcherArrayInput is an input type that accepts NotificationPolicyOverrideAlertLabelMatcherArray and NotificationPolicyOverrideAlertLabelMatcherArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyOverrideAlertLabelMatcherArrayInput` via:
//
//	NotificationPolicyOverrideAlertLabelMatcherArray{ NotificationPolicyOverrideAlertLabelMatcherArgs{...} }
type NotificationPolicyOverrideAlertLabelMatcherArrayInput interface {
	pulumi.Input

	ToNotificationPolicyOverrideAlertLabelMatcherArrayOutput() NotificationPolicyOverrideAlertLabelMatcherArrayOutput
	ToNotificationPolicyOverrideAlertLabelMatcherArrayOutputWithContext(context.Context) NotificationPolicyOverrideAlertLabelMatcherArrayOutput
}

type NotificationPolicyOverrideAlertLabelMatcherArray []NotificationPolicyOverrideAlertLabelMatcherInput

func (NotificationPolicyOverrideAlertLabelMatcherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyOverrideAlertLabelMatcher)(nil)).Elem()
}

func (i NotificationPolicyOverrideAlertLabelMatcherArray) ToNotificationPolicyOverrideAlertLabelMatcherArrayOutput() NotificationPolicyOverrideAlertLabelMatcherArrayOutput {
	return i.ToNotificationPolicyOverrideAlertLabelMatcherArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyOverrideAlertLabelMatcherArray) ToNotificationPolicyOverrideAlertLabelMatcherArrayOutputWithContext(ctx context.Context) NotificationPolicyOverrideAlertLabelMatcherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyOverrideAlertLabelMatcherArrayOutput)
}

type NotificationPolicyOverrideAlertLabelMatcherOutput struct{ *pulumi.OutputState }

func (NotificationPolicyOverrideAlertLabelMatcherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyOverrideAlertLabelMatcher)(nil)).Elem()
}

func (o NotificationPolicyOverrideAlertLabelMatcherOutput) ToNotificationPolicyOverrideAlertLabelMatcherOutput() NotificationPolicyOverrideAlertLabelMatcherOutput {
	return o
}

func (o NotificationPolicyOverrideAlertLabelMatcherOutput) ToNotificationPolicyOverrideAlertLabelMatcherOutputWithContext(ctx context.Context) NotificationPolicyOverrideAlertLabelMatcherOutput {
	return o
}

func (o NotificationPolicyOverrideAlertLabelMatcherOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyOverrideAlertLabelMatcher) string { return v.Name }).(pulumi.StringOutput)
}

func (o NotificationPolicyOverrideAlertLabelMatcherOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyOverrideAlertLabelMatcher) string { return v.Type }).(pulumi.StringOutput)
}

func (o NotificationPolicyOverrideAlertLabelMatcherOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyOverrideAlertLabelMatcher) string { return v.Value }).(pulumi.StringOutput)
}

type NotificationPolicyOverrideAlertLabelMatcherArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyOverrideAlertLabelMatcherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyOverrideAlertLabelMatcher)(nil)).Elem()
}

func (o NotificationPolicyOverrideAlertLabelMatcherArrayOutput) ToNotificationPolicyOverrideAlertLabelMatcherArrayOutput() NotificationPolicyOverrideAlertLabelMatcherArrayOutput {
	return o
}

func (o NotificationPolicyOverrideAlertLabelMatcherArrayOutput) ToNotificationPolicyOverrideAlertLabelMatcherArrayOutputWithContext(ctx context.Context) NotificationPolicyOverrideAlertLabelMatcherArrayOutput {
	return o
}

func (o NotificationPolicyOverrideAlertLabelMatcherArrayOutput) Index(i pulumi.IntInput) NotificationPolicyOverrideAlertLabelMatcherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyOverrideAlertLabelMatcher {
		return vs[0].([]NotificationPolicyOverrideAlertLabelMatcher)[vs[1].(int)]
	}).(NotificationPolicyOverrideAlertLabelMatcherOutput)
}

type NotificationPolicyOverrideRoute struct {
	Notifiers      []string `pulumi:"notifiers"`
	RepeatInterval *string  `pulumi:"repeatInterval"`
	Severity       string   `pulumi:"severity"`
}

// NotificationPolicyOverrideRouteInput is an input type that accepts NotificationPolicyOverrideRouteArgs and NotificationPolicyOverrideRouteOutput values.
// You can construct a concrete instance of `NotificationPolicyOverrideRouteInput` via:
//
//	NotificationPolicyOverrideRouteArgs{...}
type NotificationPolicyOverrideRouteInput interface {
	pulumi.Input

	ToNotificationPolicyOverrideRouteOutput() NotificationPolicyOverrideRouteOutput
	ToNotificationPolicyOverrideRouteOutputWithContext(context.Context) NotificationPolicyOverrideRouteOutput
}

type NotificationPolicyOverrideRouteArgs struct {
	Notifiers      pulumi.StringArrayInput `pulumi:"notifiers"`
	RepeatInterval pulumi.StringPtrInput   `pulumi:"repeatInterval"`
	Severity       pulumi.StringInput      `pulumi:"severity"`
}

func (NotificationPolicyOverrideRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyOverrideRoute)(nil)).Elem()
}

func (i NotificationPolicyOverrideRouteArgs) ToNotificationPolicyOverrideRouteOutput() NotificationPolicyOverrideRouteOutput {
	return i.ToNotificationPolicyOverrideRouteOutputWithContext(context.Background())
}

func (i NotificationPolicyOverrideRouteArgs) ToNotificationPolicyOverrideRouteOutputWithContext(ctx context.Context) NotificationPolicyOverrideRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyOverrideRouteOutput)
}

// NotificationPolicyOverrideRouteArrayInput is an input type that accepts NotificationPolicyOverrideRouteArray and NotificationPolicyOverrideRouteArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyOverrideRouteArrayInput` via:
//
//	NotificationPolicyOverrideRouteArray{ NotificationPolicyOverrideRouteArgs{...} }
type NotificationPolicyOverrideRouteArrayInput interface {
	pulumi.Input

	ToNotificationPolicyOverrideRouteArrayOutput() NotificationPolicyOverrideRouteArrayOutput
	ToNotificationPolicyOverrideRouteArrayOutputWithContext(context.Context) NotificationPolicyOverrideRouteArrayOutput
}

type NotificationPolicyOverrideRouteArray []NotificationPolicyOverrideRouteInput

func (NotificationPolicyOverrideRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyOverrideRoute)(nil)).Elem()
}

func (i NotificationPolicyOverrideRouteArray) ToNotificationPolicyOverrideRouteArrayOutput() NotificationPolicyOverrideRouteArrayOutput {
	return i.ToNotificationPolicyOverrideRouteArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyOverrideRouteArray) ToNotificationPolicyOverrideRouteArrayOutputWithContext(ctx context.Context) NotificationPolicyOverrideRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyOverrideRouteArrayOutput)
}

type NotificationPolicyOverrideRouteOutput struct{ *pulumi.OutputState }

func (NotificationPolicyOverrideRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyOverrideRoute)(nil)).Elem()
}

func (o NotificationPolicyOverrideRouteOutput) ToNotificationPolicyOverrideRouteOutput() NotificationPolicyOverrideRouteOutput {
	return o
}

func (o NotificationPolicyOverrideRouteOutput) ToNotificationPolicyOverrideRouteOutputWithContext(ctx context.Context) NotificationPolicyOverrideRouteOutput {
	return o
}

func (o NotificationPolicyOverrideRouteOutput) Notifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationPolicyOverrideRoute) []string { return v.Notifiers }).(pulumi.StringArrayOutput)
}

func (o NotificationPolicyOverrideRouteOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyOverrideRoute) *string { return v.RepeatInterval }).(pulumi.StringPtrOutput)
}

func (o NotificationPolicyOverrideRouteOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyOverrideRoute) string { return v.Severity }).(pulumi.StringOutput)
}

type NotificationPolicyOverrideRouteArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyOverrideRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyOverrideRoute)(nil)).Elem()
}

func (o NotificationPolicyOverrideRouteArrayOutput) ToNotificationPolicyOverrideRouteArrayOutput() NotificationPolicyOverrideRouteArrayOutput {
	return o
}

func (o NotificationPolicyOverrideRouteArrayOutput) ToNotificationPolicyOverrideRouteArrayOutputWithContext(ctx context.Context) NotificationPolicyOverrideRouteArrayOutput {
	return o
}

func (o NotificationPolicyOverrideRouteArrayOutput) Index(i pulumi.IntInput) NotificationPolicyOverrideRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyOverrideRoute {
		return vs[0].([]NotificationPolicyOverrideRoute)[vs[1].(int)]
	}).(NotificationPolicyOverrideRouteOutput)
}

type NotificationPolicyRoute struct {
	Notifiers      []string `pulumi:"notifiers"`
	RepeatInterval *string  `pulumi:"repeatInterval"`
	Severity       string   `pulumi:"severity"`
}

// NotificationPolicyRouteInput is an input type that accepts NotificationPolicyRouteArgs and NotificationPolicyRouteOutput values.
// You can construct a concrete instance of `NotificationPolicyRouteInput` via:
//
//	NotificationPolicyRouteArgs{...}
type NotificationPolicyRouteInput interface {
	pulumi.Input

	ToNotificationPolicyRouteOutput() NotificationPolicyRouteOutput
	ToNotificationPolicyRouteOutputWithContext(context.Context) NotificationPolicyRouteOutput
}

type NotificationPolicyRouteArgs struct {
	Notifiers      pulumi.StringArrayInput `pulumi:"notifiers"`
	RepeatInterval pulumi.StringPtrInput   `pulumi:"repeatInterval"`
	Severity       pulumi.StringInput      `pulumi:"severity"`
}

func (NotificationPolicyRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyRoute)(nil)).Elem()
}

func (i NotificationPolicyRouteArgs) ToNotificationPolicyRouteOutput() NotificationPolicyRouteOutput {
	return i.ToNotificationPolicyRouteOutputWithContext(context.Background())
}

func (i NotificationPolicyRouteArgs) ToNotificationPolicyRouteOutputWithContext(ctx context.Context) NotificationPolicyRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyRouteOutput)
}

// NotificationPolicyRouteArrayInput is an input type that accepts NotificationPolicyRouteArray and NotificationPolicyRouteArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyRouteArrayInput` via:
//
//	NotificationPolicyRouteArray{ NotificationPolicyRouteArgs{...} }
type NotificationPolicyRouteArrayInput interface {
	pulumi.Input

	ToNotificationPolicyRouteArrayOutput() NotificationPolicyRouteArrayOutput
	ToNotificationPolicyRouteArrayOutputWithContext(context.Context) NotificationPolicyRouteArrayOutput
}

type NotificationPolicyRouteArray []NotificationPolicyRouteInput

func (NotificationPolicyRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyRoute)(nil)).Elem()
}

func (i NotificationPolicyRouteArray) ToNotificationPolicyRouteArrayOutput() NotificationPolicyRouteArrayOutput {
	return i.ToNotificationPolicyRouteArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyRouteArray) ToNotificationPolicyRouteArrayOutputWithContext(ctx context.Context) NotificationPolicyRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyRouteArrayOutput)
}

type NotificationPolicyRouteOutput struct{ *pulumi.OutputState }

func (NotificationPolicyRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyRoute)(nil)).Elem()
}

func (o NotificationPolicyRouteOutput) ToNotificationPolicyRouteOutput() NotificationPolicyRouteOutput {
	return o
}

func (o NotificationPolicyRouteOutput) ToNotificationPolicyRouteOutputWithContext(ctx context.Context) NotificationPolicyRouteOutput {
	return o
}

func (o NotificationPolicyRouteOutput) Notifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationPolicyRoute) []string { return v.Notifiers }).(pulumi.StringArrayOutput)
}

func (o NotificationPolicyRouteOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyRoute) *string { return v.RepeatInterval }).(pulumi.StringPtrOutput)
}

func (o NotificationPolicyRouteOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyRoute) string { return v.Severity }).(pulumi.StringOutput)
}

type NotificationPolicyRouteArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyRoute)(nil)).Elem()
}

func (o NotificationPolicyRouteArrayOutput) ToNotificationPolicyRouteArrayOutput() NotificationPolicyRouteArrayOutput {
	return o
}

func (o NotificationPolicyRouteArrayOutput) ToNotificationPolicyRouteArrayOutputWithContext(ctx context.Context) NotificationPolicyRouteArrayOutput {
	return o
}

func (o NotificationPolicyRouteArrayOutput) Index(i pulumi.IntInput) NotificationPolicyRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyRoute {
		return vs[0].([]NotificationPolicyRoute)[vs[1].(int)]
	}).(NotificationPolicyRouteOutput)
}

type NotificationPolicyRule struct {
	Notifiers      []string `pulumi:"notifiers"`
	RepeatInterval *string  `pulumi:"repeatInterval"`
	Severity       string   `pulumi:"severity"`
}

// NotificationPolicyRuleInput is an input type that accepts NotificationPolicyRuleArgs and NotificationPolicyRuleOutput values.
// You can construct a concrete instance of `NotificationPolicyRuleInput` via:
//
//	NotificationPolicyRuleArgs{...}
type NotificationPolicyRuleInput interface {
	pulumi.Input

	ToNotificationPolicyRuleOutput() NotificationPolicyRuleOutput
	ToNotificationPolicyRuleOutputWithContext(context.Context) NotificationPolicyRuleOutput
}

type NotificationPolicyRuleArgs struct {
	Notifiers      pulumi.StringArrayInput `pulumi:"notifiers"`
	RepeatInterval pulumi.StringPtrInput   `pulumi:"repeatInterval"`
	Severity       pulumi.StringInput      `pulumi:"severity"`
}

func (NotificationPolicyRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyRule)(nil)).Elem()
}

func (i NotificationPolicyRuleArgs) ToNotificationPolicyRuleOutput() NotificationPolicyRuleOutput {
	return i.ToNotificationPolicyRuleOutputWithContext(context.Background())
}

func (i NotificationPolicyRuleArgs) ToNotificationPolicyRuleOutputWithContext(ctx context.Context) NotificationPolicyRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyRuleOutput)
}

// NotificationPolicyRuleArrayInput is an input type that accepts NotificationPolicyRuleArray and NotificationPolicyRuleArrayOutput values.
// You can construct a concrete instance of `NotificationPolicyRuleArrayInput` via:
//
//	NotificationPolicyRuleArray{ NotificationPolicyRuleArgs{...} }
type NotificationPolicyRuleArrayInput interface {
	pulumi.Input

	ToNotificationPolicyRuleArrayOutput() NotificationPolicyRuleArrayOutput
	ToNotificationPolicyRuleArrayOutputWithContext(context.Context) NotificationPolicyRuleArrayOutput
}

type NotificationPolicyRuleArray []NotificationPolicyRuleInput

func (NotificationPolicyRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyRule)(nil)).Elem()
}

func (i NotificationPolicyRuleArray) ToNotificationPolicyRuleArrayOutput() NotificationPolicyRuleArrayOutput {
	return i.ToNotificationPolicyRuleArrayOutputWithContext(context.Background())
}

func (i NotificationPolicyRuleArray) ToNotificationPolicyRuleArrayOutputWithContext(ctx context.Context) NotificationPolicyRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationPolicyRuleArrayOutput)
}

type NotificationPolicyRuleOutput struct{ *pulumi.OutputState }

func (NotificationPolicyRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyRule)(nil)).Elem()
}

func (o NotificationPolicyRuleOutput) ToNotificationPolicyRuleOutput() NotificationPolicyRuleOutput {
	return o
}

func (o NotificationPolicyRuleOutput) ToNotificationPolicyRuleOutputWithContext(ctx context.Context) NotificationPolicyRuleOutput {
	return o
}

func (o NotificationPolicyRuleOutput) Notifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v NotificationPolicyRule) []string { return v.Notifiers }).(pulumi.StringArrayOutput)
}

func (o NotificationPolicyRuleOutput) RepeatInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyRule) *string { return v.RepeatInterval }).(pulumi.StringPtrOutput)
}

func (o NotificationPolicyRuleOutput) Severity() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyRule) string { return v.Severity }).(pulumi.StringOutput)
}

type NotificationPolicyRuleArrayOutput struct{ *pulumi.OutputState }

func (NotificationPolicyRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationPolicyRule)(nil)).Elem()
}

func (o NotificationPolicyRuleArrayOutput) ToNotificationPolicyRuleArrayOutput() NotificationPolicyRuleArrayOutput {
	return o
}

func (o NotificationPolicyRuleArrayOutput) ToNotificationPolicyRuleArrayOutputWithContext(ctx context.Context) NotificationPolicyRuleArrayOutput {
	return o
}

func (o NotificationPolicyRuleArrayOutput) Index(i pulumi.IntInput) NotificationPolicyRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationPolicyRule {
		return vs[0].([]NotificationPolicyRule)[vs[1].(int)]
	}).(NotificationPolicyRuleOutput)
}

type OpsgenieAlertNotifierResponder struct {
	Id       *string `pulumi:"id"`
	Name     *string `pulumi:"name"`
	Type     string  `pulumi:"type"`
	Username *string `pulumi:"username"`
}

// OpsgenieAlertNotifierResponderInput is an input type that accepts OpsgenieAlertNotifierResponderArgs and OpsgenieAlertNotifierResponderOutput values.
// You can construct a concrete instance of `OpsgenieAlertNotifierResponderInput` via:
//
//	OpsgenieAlertNotifierResponderArgs{...}
type OpsgenieAlertNotifierResponderInput interface {
	pulumi.Input

	ToOpsgenieAlertNotifierResponderOutput() OpsgenieAlertNotifierResponderOutput
	ToOpsgenieAlertNotifierResponderOutputWithContext(context.Context) OpsgenieAlertNotifierResponderOutput
}

type OpsgenieAlertNotifierResponderArgs struct {
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Name     pulumi.StringPtrInput `pulumi:"name"`
	Type     pulumi.StringInput    `pulumi:"type"`
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (OpsgenieAlertNotifierResponderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpsgenieAlertNotifierResponder)(nil)).Elem()
}

func (i OpsgenieAlertNotifierResponderArgs) ToOpsgenieAlertNotifierResponderOutput() OpsgenieAlertNotifierResponderOutput {
	return i.ToOpsgenieAlertNotifierResponderOutputWithContext(context.Background())
}

func (i OpsgenieAlertNotifierResponderArgs) ToOpsgenieAlertNotifierResponderOutputWithContext(ctx context.Context) OpsgenieAlertNotifierResponderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsgenieAlertNotifierResponderOutput)
}

// OpsgenieAlertNotifierResponderArrayInput is an input type that accepts OpsgenieAlertNotifierResponderArray and OpsgenieAlertNotifierResponderArrayOutput values.
// You can construct a concrete instance of `OpsgenieAlertNotifierResponderArrayInput` via:
//
//	OpsgenieAlertNotifierResponderArray{ OpsgenieAlertNotifierResponderArgs{...} }
type OpsgenieAlertNotifierResponderArrayInput interface {
	pulumi.Input

	ToOpsgenieAlertNotifierResponderArrayOutput() OpsgenieAlertNotifierResponderArrayOutput
	ToOpsgenieAlertNotifierResponderArrayOutputWithContext(context.Context) OpsgenieAlertNotifierResponderArrayOutput
}

type OpsgenieAlertNotifierResponderArray []OpsgenieAlertNotifierResponderInput

func (OpsgenieAlertNotifierResponderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpsgenieAlertNotifierResponder)(nil)).Elem()
}

func (i OpsgenieAlertNotifierResponderArray) ToOpsgenieAlertNotifierResponderArrayOutput() OpsgenieAlertNotifierResponderArrayOutput {
	return i.ToOpsgenieAlertNotifierResponderArrayOutputWithContext(context.Background())
}

func (i OpsgenieAlertNotifierResponderArray) ToOpsgenieAlertNotifierResponderArrayOutputWithContext(ctx context.Context) OpsgenieAlertNotifierResponderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpsgenieAlertNotifierResponderArrayOutput)
}

type OpsgenieAlertNotifierResponderOutput struct{ *pulumi.OutputState }

func (OpsgenieAlertNotifierResponderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpsgenieAlertNotifierResponder)(nil)).Elem()
}

func (o OpsgenieAlertNotifierResponderOutput) ToOpsgenieAlertNotifierResponderOutput() OpsgenieAlertNotifierResponderOutput {
	return o
}

func (o OpsgenieAlertNotifierResponderOutput) ToOpsgenieAlertNotifierResponderOutputWithContext(ctx context.Context) OpsgenieAlertNotifierResponderOutput {
	return o
}

func (o OpsgenieAlertNotifierResponderOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpsgenieAlertNotifierResponder) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o OpsgenieAlertNotifierResponderOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpsgenieAlertNotifierResponder) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o OpsgenieAlertNotifierResponderOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OpsgenieAlertNotifierResponder) string { return v.Type }).(pulumi.StringOutput)
}

func (o OpsgenieAlertNotifierResponderOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpsgenieAlertNotifierResponder) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type OpsgenieAlertNotifierResponderArrayOutput struct{ *pulumi.OutputState }

func (OpsgenieAlertNotifierResponderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpsgenieAlertNotifierResponder)(nil)).Elem()
}

func (o OpsgenieAlertNotifierResponderArrayOutput) ToOpsgenieAlertNotifierResponderArrayOutput() OpsgenieAlertNotifierResponderArrayOutput {
	return o
}

func (o OpsgenieAlertNotifierResponderArrayOutput) ToOpsgenieAlertNotifierResponderArrayOutputWithContext(ctx context.Context) OpsgenieAlertNotifierResponderArrayOutput {
	return o
}

func (o OpsgenieAlertNotifierResponderArrayOutput) Index(i pulumi.IntInput) OpsgenieAlertNotifierResponderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpsgenieAlertNotifierResponder {
		return vs[0].([]OpsgenieAlertNotifierResponder)[vs[1].(int)]
	}).(OpsgenieAlertNotifierResponderOutput)
}

type PagerdutyAlertNotifierImage struct {
	Alt  *string `pulumi:"alt"`
	Href *string `pulumi:"href"`
	Src  string  `pulumi:"src"`
}

// PagerdutyAlertNotifierImageInput is an input type that accepts PagerdutyAlertNotifierImageArgs and PagerdutyAlertNotifierImageOutput values.
// You can construct a concrete instance of `PagerdutyAlertNotifierImageInput` via:
//
//	PagerdutyAlertNotifierImageArgs{...}
type PagerdutyAlertNotifierImageInput interface {
	pulumi.Input

	ToPagerdutyAlertNotifierImageOutput() PagerdutyAlertNotifierImageOutput
	ToPagerdutyAlertNotifierImageOutputWithContext(context.Context) PagerdutyAlertNotifierImageOutput
}

type PagerdutyAlertNotifierImageArgs struct {
	Alt  pulumi.StringPtrInput `pulumi:"alt"`
	Href pulumi.StringPtrInput `pulumi:"href"`
	Src  pulumi.StringInput    `pulumi:"src"`
}

func (PagerdutyAlertNotifierImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PagerdutyAlertNotifierImage)(nil)).Elem()
}

func (i PagerdutyAlertNotifierImageArgs) ToPagerdutyAlertNotifierImageOutput() PagerdutyAlertNotifierImageOutput {
	return i.ToPagerdutyAlertNotifierImageOutputWithContext(context.Background())
}

func (i PagerdutyAlertNotifierImageArgs) ToPagerdutyAlertNotifierImageOutputWithContext(ctx context.Context) PagerdutyAlertNotifierImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerdutyAlertNotifierImageOutput)
}

// PagerdutyAlertNotifierImageArrayInput is an input type that accepts PagerdutyAlertNotifierImageArray and PagerdutyAlertNotifierImageArrayOutput values.
// You can construct a concrete instance of `PagerdutyAlertNotifierImageArrayInput` via:
//
//	PagerdutyAlertNotifierImageArray{ PagerdutyAlertNotifierImageArgs{...} }
type PagerdutyAlertNotifierImageArrayInput interface {
	pulumi.Input

	ToPagerdutyAlertNotifierImageArrayOutput() PagerdutyAlertNotifierImageArrayOutput
	ToPagerdutyAlertNotifierImageArrayOutputWithContext(context.Context) PagerdutyAlertNotifierImageArrayOutput
}

type PagerdutyAlertNotifierImageArray []PagerdutyAlertNotifierImageInput

func (PagerdutyAlertNotifierImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PagerdutyAlertNotifierImage)(nil)).Elem()
}

func (i PagerdutyAlertNotifierImageArray) ToPagerdutyAlertNotifierImageArrayOutput() PagerdutyAlertNotifierImageArrayOutput {
	return i.ToPagerdutyAlertNotifierImageArrayOutputWithContext(context.Background())
}

func (i PagerdutyAlertNotifierImageArray) ToPagerdutyAlertNotifierImageArrayOutputWithContext(ctx context.Context) PagerdutyAlertNotifierImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerdutyAlertNotifierImageArrayOutput)
}

type PagerdutyAlertNotifierImageOutput struct{ *pulumi.OutputState }

func (PagerdutyAlertNotifierImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PagerdutyAlertNotifierImage)(nil)).Elem()
}

func (o PagerdutyAlertNotifierImageOutput) ToPagerdutyAlertNotifierImageOutput() PagerdutyAlertNotifierImageOutput {
	return o
}

func (o PagerdutyAlertNotifierImageOutput) ToPagerdutyAlertNotifierImageOutputWithContext(ctx context.Context) PagerdutyAlertNotifierImageOutput {
	return o
}

func (o PagerdutyAlertNotifierImageOutput) Alt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PagerdutyAlertNotifierImage) *string { return v.Alt }).(pulumi.StringPtrOutput)
}

func (o PagerdutyAlertNotifierImageOutput) Href() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PagerdutyAlertNotifierImage) *string { return v.Href }).(pulumi.StringPtrOutput)
}

func (o PagerdutyAlertNotifierImageOutput) Src() pulumi.StringOutput {
	return o.ApplyT(func(v PagerdutyAlertNotifierImage) string { return v.Src }).(pulumi.StringOutput)
}

type PagerdutyAlertNotifierImageArrayOutput struct{ *pulumi.OutputState }

func (PagerdutyAlertNotifierImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PagerdutyAlertNotifierImage)(nil)).Elem()
}

func (o PagerdutyAlertNotifierImageArrayOutput) ToPagerdutyAlertNotifierImageArrayOutput() PagerdutyAlertNotifierImageArrayOutput {
	return o
}

func (o PagerdutyAlertNotifierImageArrayOutput) ToPagerdutyAlertNotifierImageArrayOutputWithContext(ctx context.Context) PagerdutyAlertNotifierImageArrayOutput {
	return o
}

func (o PagerdutyAlertNotifierImageArrayOutput) Index(i pulumi.IntInput) PagerdutyAlertNotifierImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PagerdutyAlertNotifierImage {
		return vs[0].([]PagerdutyAlertNotifierImage)[vs[1].(int)]
	}).(PagerdutyAlertNotifierImageOutput)
}

type PagerdutyAlertNotifierLink struct {
	Href string  `pulumi:"href"`
	Text *string `pulumi:"text"`
}

// PagerdutyAlertNotifierLinkInput is an input type that accepts PagerdutyAlertNotifierLinkArgs and PagerdutyAlertNotifierLinkOutput values.
// You can construct a concrete instance of `PagerdutyAlertNotifierLinkInput` via:
//
//	PagerdutyAlertNotifierLinkArgs{...}
type PagerdutyAlertNotifierLinkInput interface {
	pulumi.Input

	ToPagerdutyAlertNotifierLinkOutput() PagerdutyAlertNotifierLinkOutput
	ToPagerdutyAlertNotifierLinkOutputWithContext(context.Context) PagerdutyAlertNotifierLinkOutput
}

type PagerdutyAlertNotifierLinkArgs struct {
	Href pulumi.StringInput    `pulumi:"href"`
	Text pulumi.StringPtrInput `pulumi:"text"`
}

func (PagerdutyAlertNotifierLinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PagerdutyAlertNotifierLink)(nil)).Elem()
}

func (i PagerdutyAlertNotifierLinkArgs) ToPagerdutyAlertNotifierLinkOutput() PagerdutyAlertNotifierLinkOutput {
	return i.ToPagerdutyAlertNotifierLinkOutputWithContext(context.Background())
}

func (i PagerdutyAlertNotifierLinkArgs) ToPagerdutyAlertNotifierLinkOutputWithContext(ctx context.Context) PagerdutyAlertNotifierLinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerdutyAlertNotifierLinkOutput)
}

// PagerdutyAlertNotifierLinkArrayInput is an input type that accepts PagerdutyAlertNotifierLinkArray and PagerdutyAlertNotifierLinkArrayOutput values.
// You can construct a concrete instance of `PagerdutyAlertNotifierLinkArrayInput` via:
//
//	PagerdutyAlertNotifierLinkArray{ PagerdutyAlertNotifierLinkArgs{...} }
type PagerdutyAlertNotifierLinkArrayInput interface {
	pulumi.Input

	ToPagerdutyAlertNotifierLinkArrayOutput() PagerdutyAlertNotifierLinkArrayOutput
	ToPagerdutyAlertNotifierLinkArrayOutputWithContext(context.Context) PagerdutyAlertNotifierLinkArrayOutput
}

type PagerdutyAlertNotifierLinkArray []PagerdutyAlertNotifierLinkInput

func (PagerdutyAlertNotifierLinkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PagerdutyAlertNotifierLink)(nil)).Elem()
}

func (i PagerdutyAlertNotifierLinkArray) ToPagerdutyAlertNotifierLinkArrayOutput() PagerdutyAlertNotifierLinkArrayOutput {
	return i.ToPagerdutyAlertNotifierLinkArrayOutputWithContext(context.Background())
}

func (i PagerdutyAlertNotifierLinkArray) ToPagerdutyAlertNotifierLinkArrayOutputWithContext(ctx context.Context) PagerdutyAlertNotifierLinkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PagerdutyAlertNotifierLinkArrayOutput)
}

type PagerdutyAlertNotifierLinkOutput struct{ *pulumi.OutputState }

func (PagerdutyAlertNotifierLinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PagerdutyAlertNotifierLink)(nil)).Elem()
}

func (o PagerdutyAlertNotifierLinkOutput) ToPagerdutyAlertNotifierLinkOutput() PagerdutyAlertNotifierLinkOutput {
	return o
}

func (o PagerdutyAlertNotifierLinkOutput) ToPagerdutyAlertNotifierLinkOutputWithContext(ctx context.Context) PagerdutyAlertNotifierLinkOutput {
	return o
}

func (o PagerdutyAlertNotifierLinkOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v PagerdutyAlertNotifierLink) string { return v.Href }).(pulumi.StringOutput)
}

func (o PagerdutyAlertNotifierLinkOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PagerdutyAlertNotifierLink) *string { return v.Text }).(pulumi.StringPtrOutput)
}

type PagerdutyAlertNotifierLinkArrayOutput struct{ *pulumi.OutputState }

func (PagerdutyAlertNotifierLinkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PagerdutyAlertNotifierLink)(nil)).Elem()
}

func (o PagerdutyAlertNotifierLinkArrayOutput) ToPagerdutyAlertNotifierLinkArrayOutput() PagerdutyAlertNotifierLinkArrayOutput {
	return o
}

func (o PagerdutyAlertNotifierLinkArrayOutput) ToPagerdutyAlertNotifierLinkArrayOutputWithContext(ctx context.Context) PagerdutyAlertNotifierLinkArrayOutput {
	return o
}

func (o PagerdutyAlertNotifierLinkArrayOutput) Index(i pulumi.IntInput) PagerdutyAlertNotifierLinkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PagerdutyAlertNotifierLink {
		return vs[0].([]PagerdutyAlertNotifierLink)[vs[1].(int)]
	}).(PagerdutyAlertNotifierLinkOutput)
}

type ResourcePoolsConfigDefaultPool struct {
	Allocation ResourcePoolsConfigDefaultPoolAllocation  `pulumi:"allocation"`
	Priorities *ResourcePoolsConfigDefaultPoolPriorities `pulumi:"priorities"`
}

// ResourcePoolsConfigDefaultPoolInput is an input type that accepts ResourcePoolsConfigDefaultPoolArgs and ResourcePoolsConfigDefaultPoolOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigDefaultPoolInput` via:
//
//	ResourcePoolsConfigDefaultPoolArgs{...}
type ResourcePoolsConfigDefaultPoolInput interface {
	pulumi.Input

	ToResourcePoolsConfigDefaultPoolOutput() ResourcePoolsConfigDefaultPoolOutput
	ToResourcePoolsConfigDefaultPoolOutputWithContext(context.Context) ResourcePoolsConfigDefaultPoolOutput
}

type ResourcePoolsConfigDefaultPoolArgs struct {
	Allocation ResourcePoolsConfigDefaultPoolAllocationInput    `pulumi:"allocation"`
	Priorities ResourcePoolsConfigDefaultPoolPrioritiesPtrInput `pulumi:"priorities"`
}

func (ResourcePoolsConfigDefaultPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigDefaultPool)(nil)).Elem()
}

func (i ResourcePoolsConfigDefaultPoolArgs) ToResourcePoolsConfigDefaultPoolOutput() ResourcePoolsConfigDefaultPoolOutput {
	return i.ToResourcePoolsConfigDefaultPoolOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigDefaultPoolArgs) ToResourcePoolsConfigDefaultPoolOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigDefaultPoolOutput)
}

func (i ResourcePoolsConfigDefaultPoolArgs) ToResourcePoolsConfigDefaultPoolPtrOutput() ResourcePoolsConfigDefaultPoolPtrOutput {
	return i.ToResourcePoolsConfigDefaultPoolPtrOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigDefaultPoolArgs) ToResourcePoolsConfigDefaultPoolPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigDefaultPoolOutput).ToResourcePoolsConfigDefaultPoolPtrOutputWithContext(ctx)
}

// ResourcePoolsConfigDefaultPoolPtrInput is an input type that accepts ResourcePoolsConfigDefaultPoolArgs, ResourcePoolsConfigDefaultPoolPtr and ResourcePoolsConfigDefaultPoolPtrOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigDefaultPoolPtrInput` via:
//
//	        ResourcePoolsConfigDefaultPoolArgs{...}
//
//	or:
//
//	        nil
type ResourcePoolsConfigDefaultPoolPtrInput interface {
	pulumi.Input

	ToResourcePoolsConfigDefaultPoolPtrOutput() ResourcePoolsConfigDefaultPoolPtrOutput
	ToResourcePoolsConfigDefaultPoolPtrOutputWithContext(context.Context) ResourcePoolsConfigDefaultPoolPtrOutput
}

type resourcePoolsConfigDefaultPoolPtrType ResourcePoolsConfigDefaultPoolArgs

func ResourcePoolsConfigDefaultPoolPtr(v *ResourcePoolsConfigDefaultPoolArgs) ResourcePoolsConfigDefaultPoolPtrInput {
	return (*resourcePoolsConfigDefaultPoolPtrType)(v)
}

func (*resourcePoolsConfigDefaultPoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfigDefaultPool)(nil)).Elem()
}

func (i *resourcePoolsConfigDefaultPoolPtrType) ToResourcePoolsConfigDefaultPoolPtrOutput() ResourcePoolsConfigDefaultPoolPtrOutput {
	return i.ToResourcePoolsConfigDefaultPoolPtrOutputWithContext(context.Background())
}

func (i *resourcePoolsConfigDefaultPoolPtrType) ToResourcePoolsConfigDefaultPoolPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigDefaultPoolPtrOutput)
}

type ResourcePoolsConfigDefaultPoolOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigDefaultPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigDefaultPool)(nil)).Elem()
}

func (o ResourcePoolsConfigDefaultPoolOutput) ToResourcePoolsConfigDefaultPoolOutput() ResourcePoolsConfigDefaultPoolOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolOutput) ToResourcePoolsConfigDefaultPoolOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolOutput) ToResourcePoolsConfigDefaultPoolPtrOutput() ResourcePoolsConfigDefaultPoolPtrOutput {
	return o.ToResourcePoolsConfigDefaultPoolPtrOutputWithContext(context.Background())
}

func (o ResourcePoolsConfigDefaultPoolOutput) ToResourcePoolsConfigDefaultPoolPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePoolsConfigDefaultPool) *ResourcePoolsConfigDefaultPool {
		return &v
	}).(ResourcePoolsConfigDefaultPoolPtrOutput)
}

func (o ResourcePoolsConfigDefaultPoolOutput) Allocation() ResourcePoolsConfigDefaultPoolAllocationOutput {
	return o.ApplyT(func(v ResourcePoolsConfigDefaultPool) ResourcePoolsConfigDefaultPoolAllocation { return v.Allocation }).(ResourcePoolsConfigDefaultPoolAllocationOutput)
}

func (o ResourcePoolsConfigDefaultPoolOutput) Priorities() ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return o.ApplyT(func(v ResourcePoolsConfigDefaultPool) *ResourcePoolsConfigDefaultPoolPriorities { return v.Priorities }).(ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput)
}

type ResourcePoolsConfigDefaultPoolPtrOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigDefaultPoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfigDefaultPool)(nil)).Elem()
}

func (o ResourcePoolsConfigDefaultPoolPtrOutput) ToResourcePoolsConfigDefaultPoolPtrOutput() ResourcePoolsConfigDefaultPoolPtrOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolPtrOutput) ToResourcePoolsConfigDefaultPoolPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPtrOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolPtrOutput) Elem() ResourcePoolsConfigDefaultPoolOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigDefaultPool) ResourcePoolsConfigDefaultPool {
		if v != nil {
			return *v
		}
		var ret ResourcePoolsConfigDefaultPool
		return ret
	}).(ResourcePoolsConfigDefaultPoolOutput)
}

func (o ResourcePoolsConfigDefaultPoolPtrOutput) Allocation() ResourcePoolsConfigDefaultPoolAllocationPtrOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigDefaultPool) *ResourcePoolsConfigDefaultPoolAllocation {
		if v == nil {
			return nil
		}
		return &v.Allocation
	}).(ResourcePoolsConfigDefaultPoolAllocationPtrOutput)
}

func (o ResourcePoolsConfigDefaultPoolPtrOutput) Priorities() ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigDefaultPool) *ResourcePoolsConfigDefaultPoolPriorities {
		if v == nil {
			return nil
		}
		return v.Priorities
	}).(ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput)
}

type ResourcePoolsConfigDefaultPoolAllocation struct {
	PercentOfLicense float64 `pulumi:"percentOfLicense"`
}

// ResourcePoolsConfigDefaultPoolAllocationInput is an input type that accepts ResourcePoolsConfigDefaultPoolAllocationArgs and ResourcePoolsConfigDefaultPoolAllocationOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigDefaultPoolAllocationInput` via:
//
//	ResourcePoolsConfigDefaultPoolAllocationArgs{...}
type ResourcePoolsConfigDefaultPoolAllocationInput interface {
	pulumi.Input

	ToResourcePoolsConfigDefaultPoolAllocationOutput() ResourcePoolsConfigDefaultPoolAllocationOutput
	ToResourcePoolsConfigDefaultPoolAllocationOutputWithContext(context.Context) ResourcePoolsConfigDefaultPoolAllocationOutput
}

type ResourcePoolsConfigDefaultPoolAllocationArgs struct {
	PercentOfLicense pulumi.Float64Input `pulumi:"percentOfLicense"`
}

func (ResourcePoolsConfigDefaultPoolAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigDefaultPoolAllocation)(nil)).Elem()
}

func (i ResourcePoolsConfigDefaultPoolAllocationArgs) ToResourcePoolsConfigDefaultPoolAllocationOutput() ResourcePoolsConfigDefaultPoolAllocationOutput {
	return i.ToResourcePoolsConfigDefaultPoolAllocationOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigDefaultPoolAllocationArgs) ToResourcePoolsConfigDefaultPoolAllocationOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigDefaultPoolAllocationOutput)
}

func (i ResourcePoolsConfigDefaultPoolAllocationArgs) ToResourcePoolsConfigDefaultPoolAllocationPtrOutput() ResourcePoolsConfigDefaultPoolAllocationPtrOutput {
	return i.ToResourcePoolsConfigDefaultPoolAllocationPtrOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigDefaultPoolAllocationArgs) ToResourcePoolsConfigDefaultPoolAllocationPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolAllocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigDefaultPoolAllocationOutput).ToResourcePoolsConfigDefaultPoolAllocationPtrOutputWithContext(ctx)
}

// ResourcePoolsConfigDefaultPoolAllocationPtrInput is an input type that accepts ResourcePoolsConfigDefaultPoolAllocationArgs, ResourcePoolsConfigDefaultPoolAllocationPtr and ResourcePoolsConfigDefaultPoolAllocationPtrOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigDefaultPoolAllocationPtrInput` via:
//
//	        ResourcePoolsConfigDefaultPoolAllocationArgs{...}
//
//	or:
//
//	        nil
type ResourcePoolsConfigDefaultPoolAllocationPtrInput interface {
	pulumi.Input

	ToResourcePoolsConfigDefaultPoolAllocationPtrOutput() ResourcePoolsConfigDefaultPoolAllocationPtrOutput
	ToResourcePoolsConfigDefaultPoolAllocationPtrOutputWithContext(context.Context) ResourcePoolsConfigDefaultPoolAllocationPtrOutput
}

type resourcePoolsConfigDefaultPoolAllocationPtrType ResourcePoolsConfigDefaultPoolAllocationArgs

func ResourcePoolsConfigDefaultPoolAllocationPtr(v *ResourcePoolsConfigDefaultPoolAllocationArgs) ResourcePoolsConfigDefaultPoolAllocationPtrInput {
	return (*resourcePoolsConfigDefaultPoolAllocationPtrType)(v)
}

func (*resourcePoolsConfigDefaultPoolAllocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfigDefaultPoolAllocation)(nil)).Elem()
}

func (i *resourcePoolsConfigDefaultPoolAllocationPtrType) ToResourcePoolsConfigDefaultPoolAllocationPtrOutput() ResourcePoolsConfigDefaultPoolAllocationPtrOutput {
	return i.ToResourcePoolsConfigDefaultPoolAllocationPtrOutputWithContext(context.Background())
}

func (i *resourcePoolsConfigDefaultPoolAllocationPtrType) ToResourcePoolsConfigDefaultPoolAllocationPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolAllocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigDefaultPoolAllocationPtrOutput)
}

type ResourcePoolsConfigDefaultPoolAllocationOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigDefaultPoolAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigDefaultPoolAllocation)(nil)).Elem()
}

func (o ResourcePoolsConfigDefaultPoolAllocationOutput) ToResourcePoolsConfigDefaultPoolAllocationOutput() ResourcePoolsConfigDefaultPoolAllocationOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolAllocationOutput) ToResourcePoolsConfigDefaultPoolAllocationOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolAllocationOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolAllocationOutput) ToResourcePoolsConfigDefaultPoolAllocationPtrOutput() ResourcePoolsConfigDefaultPoolAllocationPtrOutput {
	return o.ToResourcePoolsConfigDefaultPoolAllocationPtrOutputWithContext(context.Background())
}

func (o ResourcePoolsConfigDefaultPoolAllocationOutput) ToResourcePoolsConfigDefaultPoolAllocationPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolAllocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePoolsConfigDefaultPoolAllocation) *ResourcePoolsConfigDefaultPoolAllocation {
		return &v
	}).(ResourcePoolsConfigDefaultPoolAllocationPtrOutput)
}

func (o ResourcePoolsConfigDefaultPoolAllocationOutput) PercentOfLicense() pulumi.Float64Output {
	return o.ApplyT(func(v ResourcePoolsConfigDefaultPoolAllocation) float64 { return v.PercentOfLicense }).(pulumi.Float64Output)
}

type ResourcePoolsConfigDefaultPoolAllocationPtrOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigDefaultPoolAllocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfigDefaultPoolAllocation)(nil)).Elem()
}

func (o ResourcePoolsConfigDefaultPoolAllocationPtrOutput) ToResourcePoolsConfigDefaultPoolAllocationPtrOutput() ResourcePoolsConfigDefaultPoolAllocationPtrOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolAllocationPtrOutput) ToResourcePoolsConfigDefaultPoolAllocationPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolAllocationPtrOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolAllocationPtrOutput) Elem() ResourcePoolsConfigDefaultPoolAllocationOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigDefaultPoolAllocation) ResourcePoolsConfigDefaultPoolAllocation {
		if v != nil {
			return *v
		}
		var ret ResourcePoolsConfigDefaultPoolAllocation
		return ret
	}).(ResourcePoolsConfigDefaultPoolAllocationOutput)
}

func (o ResourcePoolsConfigDefaultPoolAllocationPtrOutput) PercentOfLicense() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigDefaultPoolAllocation) *float64 {
		if v == nil {
			return nil
		}
		return &v.PercentOfLicense
	}).(pulumi.Float64PtrOutput)
}

type ResourcePoolsConfigDefaultPoolPriorities struct {
	HighPriorityMatchRules []string `pulumi:"highPriorityMatchRules"`
	LowPriorityMatchRules  []string `pulumi:"lowPriorityMatchRules"`
}

// ResourcePoolsConfigDefaultPoolPrioritiesInput is an input type that accepts ResourcePoolsConfigDefaultPoolPrioritiesArgs and ResourcePoolsConfigDefaultPoolPrioritiesOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigDefaultPoolPrioritiesInput` via:
//
//	ResourcePoolsConfigDefaultPoolPrioritiesArgs{...}
type ResourcePoolsConfigDefaultPoolPrioritiesInput interface {
	pulumi.Input

	ToResourcePoolsConfigDefaultPoolPrioritiesOutput() ResourcePoolsConfigDefaultPoolPrioritiesOutput
	ToResourcePoolsConfigDefaultPoolPrioritiesOutputWithContext(context.Context) ResourcePoolsConfigDefaultPoolPrioritiesOutput
}

type ResourcePoolsConfigDefaultPoolPrioritiesArgs struct {
	HighPriorityMatchRules pulumi.StringArrayInput `pulumi:"highPriorityMatchRules"`
	LowPriorityMatchRules  pulumi.StringArrayInput `pulumi:"lowPriorityMatchRules"`
}

func (ResourcePoolsConfigDefaultPoolPrioritiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigDefaultPoolPriorities)(nil)).Elem()
}

func (i ResourcePoolsConfigDefaultPoolPrioritiesArgs) ToResourcePoolsConfigDefaultPoolPrioritiesOutput() ResourcePoolsConfigDefaultPoolPrioritiesOutput {
	return i.ToResourcePoolsConfigDefaultPoolPrioritiesOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigDefaultPoolPrioritiesArgs) ToResourcePoolsConfigDefaultPoolPrioritiesOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPrioritiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigDefaultPoolPrioritiesOutput)
}

func (i ResourcePoolsConfigDefaultPoolPrioritiesArgs) ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutput() ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return i.ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigDefaultPoolPrioritiesArgs) ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigDefaultPoolPrioritiesOutput).ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutputWithContext(ctx)
}

// ResourcePoolsConfigDefaultPoolPrioritiesPtrInput is an input type that accepts ResourcePoolsConfigDefaultPoolPrioritiesArgs, ResourcePoolsConfigDefaultPoolPrioritiesPtr and ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigDefaultPoolPrioritiesPtrInput` via:
//
//	        ResourcePoolsConfigDefaultPoolPrioritiesArgs{...}
//
//	or:
//
//	        nil
type ResourcePoolsConfigDefaultPoolPrioritiesPtrInput interface {
	pulumi.Input

	ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutput() ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput
	ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutputWithContext(context.Context) ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput
}

type resourcePoolsConfigDefaultPoolPrioritiesPtrType ResourcePoolsConfigDefaultPoolPrioritiesArgs

func ResourcePoolsConfigDefaultPoolPrioritiesPtr(v *ResourcePoolsConfigDefaultPoolPrioritiesArgs) ResourcePoolsConfigDefaultPoolPrioritiesPtrInput {
	return (*resourcePoolsConfigDefaultPoolPrioritiesPtrType)(v)
}

func (*resourcePoolsConfigDefaultPoolPrioritiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfigDefaultPoolPriorities)(nil)).Elem()
}

func (i *resourcePoolsConfigDefaultPoolPrioritiesPtrType) ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutput() ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return i.ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutputWithContext(context.Background())
}

func (i *resourcePoolsConfigDefaultPoolPrioritiesPtrType) ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput)
}

type ResourcePoolsConfigDefaultPoolPrioritiesOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigDefaultPoolPrioritiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigDefaultPoolPriorities)(nil)).Elem()
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesOutput) ToResourcePoolsConfigDefaultPoolPrioritiesOutput() ResourcePoolsConfigDefaultPoolPrioritiesOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesOutput) ToResourcePoolsConfigDefaultPoolPrioritiesOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPrioritiesOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesOutput) ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutput() ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return o.ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutputWithContext(context.Background())
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesOutput) ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePoolsConfigDefaultPoolPriorities) *ResourcePoolsConfigDefaultPoolPriorities {
		return &v
	}).(ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput)
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesOutput) HighPriorityMatchRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePoolsConfigDefaultPoolPriorities) []string { return v.HighPriorityMatchRules }).(pulumi.StringArrayOutput)
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesOutput) LowPriorityMatchRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePoolsConfigDefaultPoolPriorities) []string { return v.LowPriorityMatchRules }).(pulumi.StringArrayOutput)
}

type ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfigDefaultPoolPriorities)(nil)).Elem()
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput) ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutput() ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput) ToResourcePoolsConfigDefaultPoolPrioritiesPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput {
	return o
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput) Elem() ResourcePoolsConfigDefaultPoolPrioritiesOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigDefaultPoolPriorities) ResourcePoolsConfigDefaultPoolPriorities {
		if v != nil {
			return *v
		}
		var ret ResourcePoolsConfigDefaultPoolPriorities
		return ret
	}).(ResourcePoolsConfigDefaultPoolPrioritiesOutput)
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput) HighPriorityMatchRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigDefaultPoolPriorities) []string {
		if v == nil {
			return nil
		}
		return v.HighPriorityMatchRules
	}).(pulumi.StringArrayOutput)
}

func (o ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput) LowPriorityMatchRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigDefaultPoolPriorities) []string {
		if v == nil {
			return nil
		}
		return v.LowPriorityMatchRules
	}).(pulumi.StringArrayOutput)
}

type ResourcePoolsConfigPool struct {
	Allocation ResourcePoolsConfigPoolAllocation `pulumi:"allocation"`
	// Deprecated: use match_rules
	MatchRule  *string                            `pulumi:"matchRule"`
	MatchRules []string                           `pulumi:"matchRules"`
	Name       string                             `pulumi:"name"`
	Priorities *ResourcePoolsConfigPoolPriorities `pulumi:"priorities"`
}

// ResourcePoolsConfigPoolInput is an input type that accepts ResourcePoolsConfigPoolArgs and ResourcePoolsConfigPoolOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigPoolInput` via:
//
//	ResourcePoolsConfigPoolArgs{...}
type ResourcePoolsConfigPoolInput interface {
	pulumi.Input

	ToResourcePoolsConfigPoolOutput() ResourcePoolsConfigPoolOutput
	ToResourcePoolsConfigPoolOutputWithContext(context.Context) ResourcePoolsConfigPoolOutput
}

type ResourcePoolsConfigPoolArgs struct {
	Allocation ResourcePoolsConfigPoolAllocationInput `pulumi:"allocation"`
	// Deprecated: use match_rules
	MatchRule  pulumi.StringPtrInput                     `pulumi:"matchRule"`
	MatchRules pulumi.StringArrayInput                   `pulumi:"matchRules"`
	Name       pulumi.StringInput                        `pulumi:"name"`
	Priorities ResourcePoolsConfigPoolPrioritiesPtrInput `pulumi:"priorities"`
}

func (ResourcePoolsConfigPoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigPool)(nil)).Elem()
}

func (i ResourcePoolsConfigPoolArgs) ToResourcePoolsConfigPoolOutput() ResourcePoolsConfigPoolOutput {
	return i.ToResourcePoolsConfigPoolOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigPoolArgs) ToResourcePoolsConfigPoolOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigPoolOutput)
}

// ResourcePoolsConfigPoolArrayInput is an input type that accepts ResourcePoolsConfigPoolArray and ResourcePoolsConfigPoolArrayOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigPoolArrayInput` via:
//
//	ResourcePoolsConfigPoolArray{ ResourcePoolsConfigPoolArgs{...} }
type ResourcePoolsConfigPoolArrayInput interface {
	pulumi.Input

	ToResourcePoolsConfigPoolArrayOutput() ResourcePoolsConfigPoolArrayOutput
	ToResourcePoolsConfigPoolArrayOutputWithContext(context.Context) ResourcePoolsConfigPoolArrayOutput
}

type ResourcePoolsConfigPoolArray []ResourcePoolsConfigPoolInput

func (ResourcePoolsConfigPoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePoolsConfigPool)(nil)).Elem()
}

func (i ResourcePoolsConfigPoolArray) ToResourcePoolsConfigPoolArrayOutput() ResourcePoolsConfigPoolArrayOutput {
	return i.ToResourcePoolsConfigPoolArrayOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigPoolArray) ToResourcePoolsConfigPoolArrayOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigPoolArrayOutput)
}

type ResourcePoolsConfigPoolOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigPoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigPool)(nil)).Elem()
}

func (o ResourcePoolsConfigPoolOutput) ToResourcePoolsConfigPoolOutput() ResourcePoolsConfigPoolOutput {
	return o
}

func (o ResourcePoolsConfigPoolOutput) ToResourcePoolsConfigPoolOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolOutput {
	return o
}

func (o ResourcePoolsConfigPoolOutput) Allocation() ResourcePoolsConfigPoolAllocationOutput {
	return o.ApplyT(func(v ResourcePoolsConfigPool) ResourcePoolsConfigPoolAllocation { return v.Allocation }).(ResourcePoolsConfigPoolAllocationOutput)
}

// Deprecated: use match_rules
func (o ResourcePoolsConfigPoolOutput) MatchRule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourcePoolsConfigPool) *string { return v.MatchRule }).(pulumi.StringPtrOutput)
}

func (o ResourcePoolsConfigPoolOutput) MatchRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePoolsConfigPool) []string { return v.MatchRules }).(pulumi.StringArrayOutput)
}

func (o ResourcePoolsConfigPoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResourcePoolsConfigPool) string { return v.Name }).(pulumi.StringOutput)
}

func (o ResourcePoolsConfigPoolOutput) Priorities() ResourcePoolsConfigPoolPrioritiesPtrOutput {
	return o.ApplyT(func(v ResourcePoolsConfigPool) *ResourcePoolsConfigPoolPriorities { return v.Priorities }).(ResourcePoolsConfigPoolPrioritiesPtrOutput)
}

type ResourcePoolsConfigPoolArrayOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigPoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourcePoolsConfigPool)(nil)).Elem()
}

func (o ResourcePoolsConfigPoolArrayOutput) ToResourcePoolsConfigPoolArrayOutput() ResourcePoolsConfigPoolArrayOutput {
	return o
}

func (o ResourcePoolsConfigPoolArrayOutput) ToResourcePoolsConfigPoolArrayOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolArrayOutput {
	return o
}

func (o ResourcePoolsConfigPoolArrayOutput) Index(i pulumi.IntInput) ResourcePoolsConfigPoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourcePoolsConfigPool {
		return vs[0].([]ResourcePoolsConfigPool)[vs[1].(int)]
	}).(ResourcePoolsConfigPoolOutput)
}

type ResourcePoolsConfigPoolAllocation struct {
	PercentOfLicense float64 `pulumi:"percentOfLicense"`
}

// ResourcePoolsConfigPoolAllocationInput is an input type that accepts ResourcePoolsConfigPoolAllocationArgs and ResourcePoolsConfigPoolAllocationOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigPoolAllocationInput` via:
//
//	ResourcePoolsConfigPoolAllocationArgs{...}
type ResourcePoolsConfigPoolAllocationInput interface {
	pulumi.Input

	ToResourcePoolsConfigPoolAllocationOutput() ResourcePoolsConfigPoolAllocationOutput
	ToResourcePoolsConfigPoolAllocationOutputWithContext(context.Context) ResourcePoolsConfigPoolAllocationOutput
}

type ResourcePoolsConfigPoolAllocationArgs struct {
	PercentOfLicense pulumi.Float64Input `pulumi:"percentOfLicense"`
}

func (ResourcePoolsConfigPoolAllocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigPoolAllocation)(nil)).Elem()
}

func (i ResourcePoolsConfigPoolAllocationArgs) ToResourcePoolsConfigPoolAllocationOutput() ResourcePoolsConfigPoolAllocationOutput {
	return i.ToResourcePoolsConfigPoolAllocationOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigPoolAllocationArgs) ToResourcePoolsConfigPoolAllocationOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolAllocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigPoolAllocationOutput)
}

type ResourcePoolsConfigPoolAllocationOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigPoolAllocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigPoolAllocation)(nil)).Elem()
}

func (o ResourcePoolsConfigPoolAllocationOutput) ToResourcePoolsConfigPoolAllocationOutput() ResourcePoolsConfigPoolAllocationOutput {
	return o
}

func (o ResourcePoolsConfigPoolAllocationOutput) ToResourcePoolsConfigPoolAllocationOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolAllocationOutput {
	return o
}

func (o ResourcePoolsConfigPoolAllocationOutput) PercentOfLicense() pulumi.Float64Output {
	return o.ApplyT(func(v ResourcePoolsConfigPoolAllocation) float64 { return v.PercentOfLicense }).(pulumi.Float64Output)
}

type ResourcePoolsConfigPoolPriorities struct {
	HighPriorityMatchRules []string `pulumi:"highPriorityMatchRules"`
	LowPriorityMatchRules  []string `pulumi:"lowPriorityMatchRules"`
}

// ResourcePoolsConfigPoolPrioritiesInput is an input type that accepts ResourcePoolsConfigPoolPrioritiesArgs and ResourcePoolsConfigPoolPrioritiesOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigPoolPrioritiesInput` via:
//
//	ResourcePoolsConfigPoolPrioritiesArgs{...}
type ResourcePoolsConfigPoolPrioritiesInput interface {
	pulumi.Input

	ToResourcePoolsConfigPoolPrioritiesOutput() ResourcePoolsConfigPoolPrioritiesOutput
	ToResourcePoolsConfigPoolPrioritiesOutputWithContext(context.Context) ResourcePoolsConfigPoolPrioritiesOutput
}

type ResourcePoolsConfigPoolPrioritiesArgs struct {
	HighPriorityMatchRules pulumi.StringArrayInput `pulumi:"highPriorityMatchRules"`
	LowPriorityMatchRules  pulumi.StringArrayInput `pulumi:"lowPriorityMatchRules"`
}

func (ResourcePoolsConfigPoolPrioritiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigPoolPriorities)(nil)).Elem()
}

func (i ResourcePoolsConfigPoolPrioritiesArgs) ToResourcePoolsConfigPoolPrioritiesOutput() ResourcePoolsConfigPoolPrioritiesOutput {
	return i.ToResourcePoolsConfigPoolPrioritiesOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigPoolPrioritiesArgs) ToResourcePoolsConfigPoolPrioritiesOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolPrioritiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigPoolPrioritiesOutput)
}

func (i ResourcePoolsConfigPoolPrioritiesArgs) ToResourcePoolsConfigPoolPrioritiesPtrOutput() ResourcePoolsConfigPoolPrioritiesPtrOutput {
	return i.ToResourcePoolsConfigPoolPrioritiesPtrOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigPoolPrioritiesArgs) ToResourcePoolsConfigPoolPrioritiesPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolPrioritiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigPoolPrioritiesOutput).ToResourcePoolsConfigPoolPrioritiesPtrOutputWithContext(ctx)
}

// ResourcePoolsConfigPoolPrioritiesPtrInput is an input type that accepts ResourcePoolsConfigPoolPrioritiesArgs, ResourcePoolsConfigPoolPrioritiesPtr and ResourcePoolsConfigPoolPrioritiesPtrOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigPoolPrioritiesPtrInput` via:
//
//	        ResourcePoolsConfigPoolPrioritiesArgs{...}
//
//	or:
//
//	        nil
type ResourcePoolsConfigPoolPrioritiesPtrInput interface {
	pulumi.Input

	ToResourcePoolsConfigPoolPrioritiesPtrOutput() ResourcePoolsConfigPoolPrioritiesPtrOutput
	ToResourcePoolsConfigPoolPrioritiesPtrOutputWithContext(context.Context) ResourcePoolsConfigPoolPrioritiesPtrOutput
}

type resourcePoolsConfigPoolPrioritiesPtrType ResourcePoolsConfigPoolPrioritiesArgs

func ResourcePoolsConfigPoolPrioritiesPtr(v *ResourcePoolsConfigPoolPrioritiesArgs) ResourcePoolsConfigPoolPrioritiesPtrInput {
	return (*resourcePoolsConfigPoolPrioritiesPtrType)(v)
}

func (*resourcePoolsConfigPoolPrioritiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfigPoolPriorities)(nil)).Elem()
}

func (i *resourcePoolsConfigPoolPrioritiesPtrType) ToResourcePoolsConfigPoolPrioritiesPtrOutput() ResourcePoolsConfigPoolPrioritiesPtrOutput {
	return i.ToResourcePoolsConfigPoolPrioritiesPtrOutputWithContext(context.Background())
}

func (i *resourcePoolsConfigPoolPrioritiesPtrType) ToResourcePoolsConfigPoolPrioritiesPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolPrioritiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigPoolPrioritiesPtrOutput)
}

type ResourcePoolsConfigPoolPrioritiesOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigPoolPrioritiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourcePoolsConfigPoolPriorities)(nil)).Elem()
}

func (o ResourcePoolsConfigPoolPrioritiesOutput) ToResourcePoolsConfigPoolPrioritiesOutput() ResourcePoolsConfigPoolPrioritiesOutput {
	return o
}

func (o ResourcePoolsConfigPoolPrioritiesOutput) ToResourcePoolsConfigPoolPrioritiesOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolPrioritiesOutput {
	return o
}

func (o ResourcePoolsConfigPoolPrioritiesOutput) ToResourcePoolsConfigPoolPrioritiesPtrOutput() ResourcePoolsConfigPoolPrioritiesPtrOutput {
	return o.ToResourcePoolsConfigPoolPrioritiesPtrOutputWithContext(context.Background())
}

func (o ResourcePoolsConfigPoolPrioritiesOutput) ToResourcePoolsConfigPoolPrioritiesPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolPrioritiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourcePoolsConfigPoolPriorities) *ResourcePoolsConfigPoolPriorities {
		return &v
	}).(ResourcePoolsConfigPoolPrioritiesPtrOutput)
}

func (o ResourcePoolsConfigPoolPrioritiesOutput) HighPriorityMatchRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePoolsConfigPoolPriorities) []string { return v.HighPriorityMatchRules }).(pulumi.StringArrayOutput)
}

func (o ResourcePoolsConfigPoolPrioritiesOutput) LowPriorityMatchRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourcePoolsConfigPoolPriorities) []string { return v.LowPriorityMatchRules }).(pulumi.StringArrayOutput)
}

type ResourcePoolsConfigPoolPrioritiesPtrOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigPoolPrioritiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfigPoolPriorities)(nil)).Elem()
}

func (o ResourcePoolsConfigPoolPrioritiesPtrOutput) ToResourcePoolsConfigPoolPrioritiesPtrOutput() ResourcePoolsConfigPoolPrioritiesPtrOutput {
	return o
}

func (o ResourcePoolsConfigPoolPrioritiesPtrOutput) ToResourcePoolsConfigPoolPrioritiesPtrOutputWithContext(ctx context.Context) ResourcePoolsConfigPoolPrioritiesPtrOutput {
	return o
}

func (o ResourcePoolsConfigPoolPrioritiesPtrOutput) Elem() ResourcePoolsConfigPoolPrioritiesOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigPoolPriorities) ResourcePoolsConfigPoolPriorities {
		if v != nil {
			return *v
		}
		var ret ResourcePoolsConfigPoolPriorities
		return ret
	}).(ResourcePoolsConfigPoolPrioritiesOutput)
}

func (o ResourcePoolsConfigPoolPrioritiesPtrOutput) HighPriorityMatchRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigPoolPriorities) []string {
		if v == nil {
			return nil
		}
		return v.HighPriorityMatchRules
	}).(pulumi.StringArrayOutput)
}

func (o ResourcePoolsConfigPoolPrioritiesPtrOutput) LowPriorityMatchRules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourcePoolsConfigPoolPriorities) []string {
		if v == nil {
			return nil
		}
		return v.LowPriorityMatchRules
	}).(pulumi.StringArrayOutput)
}

type RollupRuleStoragePolicies struct {
	Resolution string `pulumi:"resolution"`
	Retention  string `pulumi:"retention"`
}

// RollupRuleStoragePoliciesInput is an input type that accepts RollupRuleStoragePoliciesArgs and RollupRuleStoragePoliciesOutput values.
// You can construct a concrete instance of `RollupRuleStoragePoliciesInput` via:
//
//	RollupRuleStoragePoliciesArgs{...}
type RollupRuleStoragePoliciesInput interface {
	pulumi.Input

	ToRollupRuleStoragePoliciesOutput() RollupRuleStoragePoliciesOutput
	ToRollupRuleStoragePoliciesOutputWithContext(context.Context) RollupRuleStoragePoliciesOutput
}

type RollupRuleStoragePoliciesArgs struct {
	Resolution pulumi.StringInput `pulumi:"resolution"`
	Retention  pulumi.StringInput `pulumi:"retention"`
}

func (RollupRuleStoragePoliciesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RollupRuleStoragePolicies)(nil)).Elem()
}

func (i RollupRuleStoragePoliciesArgs) ToRollupRuleStoragePoliciesOutput() RollupRuleStoragePoliciesOutput {
	return i.ToRollupRuleStoragePoliciesOutputWithContext(context.Background())
}

func (i RollupRuleStoragePoliciesArgs) ToRollupRuleStoragePoliciesOutputWithContext(ctx context.Context) RollupRuleStoragePoliciesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollupRuleStoragePoliciesOutput)
}

func (i RollupRuleStoragePoliciesArgs) ToRollupRuleStoragePoliciesPtrOutput() RollupRuleStoragePoliciesPtrOutput {
	return i.ToRollupRuleStoragePoliciesPtrOutputWithContext(context.Background())
}

func (i RollupRuleStoragePoliciesArgs) ToRollupRuleStoragePoliciesPtrOutputWithContext(ctx context.Context) RollupRuleStoragePoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollupRuleStoragePoliciesOutput).ToRollupRuleStoragePoliciesPtrOutputWithContext(ctx)
}

// RollupRuleStoragePoliciesPtrInput is an input type that accepts RollupRuleStoragePoliciesArgs, RollupRuleStoragePoliciesPtr and RollupRuleStoragePoliciesPtrOutput values.
// You can construct a concrete instance of `RollupRuleStoragePoliciesPtrInput` via:
//
//	        RollupRuleStoragePoliciesArgs{...}
//
//	or:
//
//	        nil
type RollupRuleStoragePoliciesPtrInput interface {
	pulumi.Input

	ToRollupRuleStoragePoliciesPtrOutput() RollupRuleStoragePoliciesPtrOutput
	ToRollupRuleStoragePoliciesPtrOutputWithContext(context.Context) RollupRuleStoragePoliciesPtrOutput
}

type rollupRuleStoragePoliciesPtrType RollupRuleStoragePoliciesArgs

func RollupRuleStoragePoliciesPtr(v *RollupRuleStoragePoliciesArgs) RollupRuleStoragePoliciesPtrInput {
	return (*rollupRuleStoragePoliciesPtrType)(v)
}

func (*rollupRuleStoragePoliciesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RollupRuleStoragePolicies)(nil)).Elem()
}

func (i *rollupRuleStoragePoliciesPtrType) ToRollupRuleStoragePoliciesPtrOutput() RollupRuleStoragePoliciesPtrOutput {
	return i.ToRollupRuleStoragePoliciesPtrOutputWithContext(context.Background())
}

func (i *rollupRuleStoragePoliciesPtrType) ToRollupRuleStoragePoliciesPtrOutputWithContext(ctx context.Context) RollupRuleStoragePoliciesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollupRuleStoragePoliciesPtrOutput)
}

type RollupRuleStoragePoliciesOutput struct{ *pulumi.OutputState }

func (RollupRuleStoragePoliciesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RollupRuleStoragePolicies)(nil)).Elem()
}

func (o RollupRuleStoragePoliciesOutput) ToRollupRuleStoragePoliciesOutput() RollupRuleStoragePoliciesOutput {
	return o
}

func (o RollupRuleStoragePoliciesOutput) ToRollupRuleStoragePoliciesOutputWithContext(ctx context.Context) RollupRuleStoragePoliciesOutput {
	return o
}

func (o RollupRuleStoragePoliciesOutput) ToRollupRuleStoragePoliciesPtrOutput() RollupRuleStoragePoliciesPtrOutput {
	return o.ToRollupRuleStoragePoliciesPtrOutputWithContext(context.Background())
}

func (o RollupRuleStoragePoliciesOutput) ToRollupRuleStoragePoliciesPtrOutputWithContext(ctx context.Context) RollupRuleStoragePoliciesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RollupRuleStoragePolicies) *RollupRuleStoragePolicies {
		return &v
	}).(RollupRuleStoragePoliciesPtrOutput)
}

func (o RollupRuleStoragePoliciesOutput) Resolution() pulumi.StringOutput {
	return o.ApplyT(func(v RollupRuleStoragePolicies) string { return v.Resolution }).(pulumi.StringOutput)
}

func (o RollupRuleStoragePoliciesOutput) Retention() pulumi.StringOutput {
	return o.ApplyT(func(v RollupRuleStoragePolicies) string { return v.Retention }).(pulumi.StringOutput)
}

type RollupRuleStoragePoliciesPtrOutput struct{ *pulumi.OutputState }

func (RollupRuleStoragePoliciesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RollupRuleStoragePolicies)(nil)).Elem()
}

func (o RollupRuleStoragePoliciesPtrOutput) ToRollupRuleStoragePoliciesPtrOutput() RollupRuleStoragePoliciesPtrOutput {
	return o
}

func (o RollupRuleStoragePoliciesPtrOutput) ToRollupRuleStoragePoliciesPtrOutputWithContext(ctx context.Context) RollupRuleStoragePoliciesPtrOutput {
	return o
}

func (o RollupRuleStoragePoliciesPtrOutput) Elem() RollupRuleStoragePoliciesOutput {
	return o.ApplyT(func(v *RollupRuleStoragePolicies) RollupRuleStoragePolicies {
		if v != nil {
			return *v
		}
		var ret RollupRuleStoragePolicies
		return ret
	}).(RollupRuleStoragePoliciesOutput)
}

func (o RollupRuleStoragePoliciesPtrOutput) Resolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RollupRuleStoragePolicies) *string {
		if v == nil {
			return nil
		}
		return &v.Resolution
	}).(pulumi.StringPtrOutput)
}

func (o RollupRuleStoragePoliciesPtrOutput) Retention() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RollupRuleStoragePolicies) *string {
		if v == nil {
			return nil
		}
		return &v.Retention
	}).(pulumi.StringPtrOutput)
}

type ServiceAccountRestriction struct {
	Labels     map[string]string `pulumi:"labels"`
	Permission string            `pulumi:"permission"`
}

// ServiceAccountRestrictionInput is an input type that accepts ServiceAccountRestrictionArgs and ServiceAccountRestrictionOutput values.
// You can construct a concrete instance of `ServiceAccountRestrictionInput` via:
//
//	ServiceAccountRestrictionArgs{...}
type ServiceAccountRestrictionInput interface {
	pulumi.Input

	ToServiceAccountRestrictionOutput() ServiceAccountRestrictionOutput
	ToServiceAccountRestrictionOutputWithContext(context.Context) ServiceAccountRestrictionOutput
}

type ServiceAccountRestrictionArgs struct {
	Labels     pulumi.StringMapInput `pulumi:"labels"`
	Permission pulumi.StringInput    `pulumi:"permission"`
}

func (ServiceAccountRestrictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountRestriction)(nil)).Elem()
}

func (i ServiceAccountRestrictionArgs) ToServiceAccountRestrictionOutput() ServiceAccountRestrictionOutput {
	return i.ToServiceAccountRestrictionOutputWithContext(context.Background())
}

func (i ServiceAccountRestrictionArgs) ToServiceAccountRestrictionOutputWithContext(ctx context.Context) ServiceAccountRestrictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountRestrictionOutput)
}

func (i ServiceAccountRestrictionArgs) ToServiceAccountRestrictionPtrOutput() ServiceAccountRestrictionPtrOutput {
	return i.ToServiceAccountRestrictionPtrOutputWithContext(context.Background())
}

func (i ServiceAccountRestrictionArgs) ToServiceAccountRestrictionPtrOutputWithContext(ctx context.Context) ServiceAccountRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountRestrictionOutput).ToServiceAccountRestrictionPtrOutputWithContext(ctx)
}

// ServiceAccountRestrictionPtrInput is an input type that accepts ServiceAccountRestrictionArgs, ServiceAccountRestrictionPtr and ServiceAccountRestrictionPtrOutput values.
// You can construct a concrete instance of `ServiceAccountRestrictionPtrInput` via:
//
//	        ServiceAccountRestrictionArgs{...}
//
//	or:
//
//	        nil
type ServiceAccountRestrictionPtrInput interface {
	pulumi.Input

	ToServiceAccountRestrictionPtrOutput() ServiceAccountRestrictionPtrOutput
	ToServiceAccountRestrictionPtrOutputWithContext(context.Context) ServiceAccountRestrictionPtrOutput
}

type serviceAccountRestrictionPtrType ServiceAccountRestrictionArgs

func ServiceAccountRestrictionPtr(v *ServiceAccountRestrictionArgs) ServiceAccountRestrictionPtrInput {
	return (*serviceAccountRestrictionPtrType)(v)
}

func (*serviceAccountRestrictionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountRestriction)(nil)).Elem()
}

func (i *serviceAccountRestrictionPtrType) ToServiceAccountRestrictionPtrOutput() ServiceAccountRestrictionPtrOutput {
	return i.ToServiceAccountRestrictionPtrOutputWithContext(context.Background())
}

func (i *serviceAccountRestrictionPtrType) ToServiceAccountRestrictionPtrOutputWithContext(ctx context.Context) ServiceAccountRestrictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountRestrictionPtrOutput)
}

type ServiceAccountRestrictionOutput struct{ *pulumi.OutputState }

func (ServiceAccountRestrictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountRestriction)(nil)).Elem()
}

func (o ServiceAccountRestrictionOutput) ToServiceAccountRestrictionOutput() ServiceAccountRestrictionOutput {
	return o
}

func (o ServiceAccountRestrictionOutput) ToServiceAccountRestrictionOutputWithContext(ctx context.Context) ServiceAccountRestrictionOutput {
	return o
}

func (o ServiceAccountRestrictionOutput) ToServiceAccountRestrictionPtrOutput() ServiceAccountRestrictionPtrOutput {
	return o.ToServiceAccountRestrictionPtrOutputWithContext(context.Background())
}

func (o ServiceAccountRestrictionOutput) ToServiceAccountRestrictionPtrOutputWithContext(ctx context.Context) ServiceAccountRestrictionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceAccountRestriction) *ServiceAccountRestriction {
		return &v
	}).(ServiceAccountRestrictionPtrOutput)
}

func (o ServiceAccountRestrictionOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceAccountRestriction) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o ServiceAccountRestrictionOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceAccountRestriction) string { return v.Permission }).(pulumi.StringOutput)
}

type ServiceAccountRestrictionPtrOutput struct{ *pulumi.OutputState }

func (ServiceAccountRestrictionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountRestriction)(nil)).Elem()
}

func (o ServiceAccountRestrictionPtrOutput) ToServiceAccountRestrictionPtrOutput() ServiceAccountRestrictionPtrOutput {
	return o
}

func (o ServiceAccountRestrictionPtrOutput) ToServiceAccountRestrictionPtrOutputWithContext(ctx context.Context) ServiceAccountRestrictionPtrOutput {
	return o
}

func (o ServiceAccountRestrictionPtrOutput) Elem() ServiceAccountRestrictionOutput {
	return o.ApplyT(func(v *ServiceAccountRestriction) ServiceAccountRestriction {
		if v != nil {
			return *v
		}
		var ret ServiceAccountRestriction
		return ret
	}).(ServiceAccountRestrictionOutput)
}

func (o ServiceAccountRestrictionPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceAccountRestriction) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

func (o ServiceAccountRestrictionPtrOutput) Permission() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceAccountRestriction) *string {
		if v == nil {
			return nil
		}
		return &v.Permission
	}).(pulumi.StringPtrOutput)
}

type SlackAlertNotifierAction struct {
	ActionConfirmDismissText *string `pulumi:"actionConfirmDismissText"`
	ActionConfirmOkText      *string `pulumi:"actionConfirmOkText"`
	ActionConfirmText        *string `pulumi:"actionConfirmText"`
	ActionConfirmTile        *string `pulumi:"actionConfirmTile"`
	Name                     *string `pulumi:"name"`
	Style                    *string `pulumi:"style"`
	Text                     *string `pulumi:"text"`
	Type                     *string `pulumi:"type"`
	Url                      *string `pulumi:"url"`
	Value                    *string `pulumi:"value"`
}

// SlackAlertNotifierActionInput is an input type that accepts SlackAlertNotifierActionArgs and SlackAlertNotifierActionOutput values.
// You can construct a concrete instance of `SlackAlertNotifierActionInput` via:
//
//	SlackAlertNotifierActionArgs{...}
type SlackAlertNotifierActionInput interface {
	pulumi.Input

	ToSlackAlertNotifierActionOutput() SlackAlertNotifierActionOutput
	ToSlackAlertNotifierActionOutputWithContext(context.Context) SlackAlertNotifierActionOutput
}

type SlackAlertNotifierActionArgs struct {
	ActionConfirmDismissText pulumi.StringPtrInput `pulumi:"actionConfirmDismissText"`
	ActionConfirmOkText      pulumi.StringPtrInput `pulumi:"actionConfirmOkText"`
	ActionConfirmText        pulumi.StringPtrInput `pulumi:"actionConfirmText"`
	ActionConfirmTile        pulumi.StringPtrInput `pulumi:"actionConfirmTile"`
	Name                     pulumi.StringPtrInput `pulumi:"name"`
	Style                    pulumi.StringPtrInput `pulumi:"style"`
	Text                     pulumi.StringPtrInput `pulumi:"text"`
	Type                     pulumi.StringPtrInput `pulumi:"type"`
	Url                      pulumi.StringPtrInput `pulumi:"url"`
	Value                    pulumi.StringPtrInput `pulumi:"value"`
}

func (SlackAlertNotifierActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackAlertNotifierAction)(nil)).Elem()
}

func (i SlackAlertNotifierActionArgs) ToSlackAlertNotifierActionOutput() SlackAlertNotifierActionOutput {
	return i.ToSlackAlertNotifierActionOutputWithContext(context.Background())
}

func (i SlackAlertNotifierActionArgs) ToSlackAlertNotifierActionOutputWithContext(ctx context.Context) SlackAlertNotifierActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackAlertNotifierActionOutput)
}

// SlackAlertNotifierActionArrayInput is an input type that accepts SlackAlertNotifierActionArray and SlackAlertNotifierActionArrayOutput values.
// You can construct a concrete instance of `SlackAlertNotifierActionArrayInput` via:
//
//	SlackAlertNotifierActionArray{ SlackAlertNotifierActionArgs{...} }
type SlackAlertNotifierActionArrayInput interface {
	pulumi.Input

	ToSlackAlertNotifierActionArrayOutput() SlackAlertNotifierActionArrayOutput
	ToSlackAlertNotifierActionArrayOutputWithContext(context.Context) SlackAlertNotifierActionArrayOutput
}

type SlackAlertNotifierActionArray []SlackAlertNotifierActionInput

func (SlackAlertNotifierActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlackAlertNotifierAction)(nil)).Elem()
}

func (i SlackAlertNotifierActionArray) ToSlackAlertNotifierActionArrayOutput() SlackAlertNotifierActionArrayOutput {
	return i.ToSlackAlertNotifierActionArrayOutputWithContext(context.Background())
}

func (i SlackAlertNotifierActionArray) ToSlackAlertNotifierActionArrayOutputWithContext(ctx context.Context) SlackAlertNotifierActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackAlertNotifierActionArrayOutput)
}

type SlackAlertNotifierActionOutput struct{ *pulumi.OutputState }

func (SlackAlertNotifierActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackAlertNotifierAction)(nil)).Elem()
}

func (o SlackAlertNotifierActionOutput) ToSlackAlertNotifierActionOutput() SlackAlertNotifierActionOutput {
	return o
}

func (o SlackAlertNotifierActionOutput) ToSlackAlertNotifierActionOutputWithContext(ctx context.Context) SlackAlertNotifierActionOutput {
	return o
}

func (o SlackAlertNotifierActionOutput) ActionConfirmDismissText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.ActionConfirmDismissText }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierActionOutput) ActionConfirmOkText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.ActionConfirmOkText }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierActionOutput) ActionConfirmText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.ActionConfirmText }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierActionOutput) ActionConfirmTile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.ActionConfirmTile }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierActionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierActionOutput) Style() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.Style }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierActionOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.Text }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierActionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierActionOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierActionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierAction) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SlackAlertNotifierActionArrayOutput struct{ *pulumi.OutputState }

func (SlackAlertNotifierActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlackAlertNotifierAction)(nil)).Elem()
}

func (o SlackAlertNotifierActionArrayOutput) ToSlackAlertNotifierActionArrayOutput() SlackAlertNotifierActionArrayOutput {
	return o
}

func (o SlackAlertNotifierActionArrayOutput) ToSlackAlertNotifierActionArrayOutputWithContext(ctx context.Context) SlackAlertNotifierActionArrayOutput {
	return o
}

func (o SlackAlertNotifierActionArrayOutput) Index(i pulumi.IntInput) SlackAlertNotifierActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SlackAlertNotifierAction {
		return vs[0].([]SlackAlertNotifierAction)[vs[1].(int)]
	}).(SlackAlertNotifierActionOutput)
}

type SlackAlertNotifierField struct {
	Short *bool   `pulumi:"short"`
	Title *string `pulumi:"title"`
	Value *string `pulumi:"value"`
}

// SlackAlertNotifierFieldInput is an input type that accepts SlackAlertNotifierFieldArgs and SlackAlertNotifierFieldOutput values.
// You can construct a concrete instance of `SlackAlertNotifierFieldInput` via:
//
//	SlackAlertNotifierFieldArgs{...}
type SlackAlertNotifierFieldInput interface {
	pulumi.Input

	ToSlackAlertNotifierFieldOutput() SlackAlertNotifierFieldOutput
	ToSlackAlertNotifierFieldOutputWithContext(context.Context) SlackAlertNotifierFieldOutput
}

type SlackAlertNotifierFieldArgs struct {
	Short pulumi.BoolPtrInput   `pulumi:"short"`
	Title pulumi.StringPtrInput `pulumi:"title"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (SlackAlertNotifierFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackAlertNotifierField)(nil)).Elem()
}

func (i SlackAlertNotifierFieldArgs) ToSlackAlertNotifierFieldOutput() SlackAlertNotifierFieldOutput {
	return i.ToSlackAlertNotifierFieldOutputWithContext(context.Background())
}

func (i SlackAlertNotifierFieldArgs) ToSlackAlertNotifierFieldOutputWithContext(ctx context.Context) SlackAlertNotifierFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackAlertNotifierFieldOutput)
}

// SlackAlertNotifierFieldArrayInput is an input type that accepts SlackAlertNotifierFieldArray and SlackAlertNotifierFieldArrayOutput values.
// You can construct a concrete instance of `SlackAlertNotifierFieldArrayInput` via:
//
//	SlackAlertNotifierFieldArray{ SlackAlertNotifierFieldArgs{...} }
type SlackAlertNotifierFieldArrayInput interface {
	pulumi.Input

	ToSlackAlertNotifierFieldArrayOutput() SlackAlertNotifierFieldArrayOutput
	ToSlackAlertNotifierFieldArrayOutputWithContext(context.Context) SlackAlertNotifierFieldArrayOutput
}

type SlackAlertNotifierFieldArray []SlackAlertNotifierFieldInput

func (SlackAlertNotifierFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlackAlertNotifierField)(nil)).Elem()
}

func (i SlackAlertNotifierFieldArray) ToSlackAlertNotifierFieldArrayOutput() SlackAlertNotifierFieldArrayOutput {
	return i.ToSlackAlertNotifierFieldArrayOutputWithContext(context.Background())
}

func (i SlackAlertNotifierFieldArray) ToSlackAlertNotifierFieldArrayOutputWithContext(ctx context.Context) SlackAlertNotifierFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackAlertNotifierFieldArrayOutput)
}

type SlackAlertNotifierFieldOutput struct{ *pulumi.OutputState }

func (SlackAlertNotifierFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlackAlertNotifierField)(nil)).Elem()
}

func (o SlackAlertNotifierFieldOutput) ToSlackAlertNotifierFieldOutput() SlackAlertNotifierFieldOutput {
	return o
}

func (o SlackAlertNotifierFieldOutput) ToSlackAlertNotifierFieldOutputWithContext(ctx context.Context) SlackAlertNotifierFieldOutput {
	return o
}

func (o SlackAlertNotifierFieldOutput) Short() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierField) *bool { return v.Short }).(pulumi.BoolPtrOutput)
}

func (o SlackAlertNotifierFieldOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierField) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierFieldOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SlackAlertNotifierField) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type SlackAlertNotifierFieldArrayOutput struct{ *pulumi.OutputState }

func (SlackAlertNotifierFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SlackAlertNotifierField)(nil)).Elem()
}

func (o SlackAlertNotifierFieldArrayOutput) ToSlackAlertNotifierFieldArrayOutput() SlackAlertNotifierFieldArrayOutput {
	return o
}

func (o SlackAlertNotifierFieldArrayOutput) ToSlackAlertNotifierFieldArrayOutputWithContext(ctx context.Context) SlackAlertNotifierFieldArrayOutput {
	return o
}

func (o SlackAlertNotifierFieldArrayOutput) Index(i pulumi.IntInput) SlackAlertNotifierFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SlackAlertNotifierField {
		return vs[0].([]SlackAlertNotifierField)[vs[1].(int)]
	}).(SlackAlertNotifierFieldOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategy struct {
	PerOperationStrategies *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies `pulumi:"perOperationStrategies"`
	ProbabilisticStrategy  *TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy  `pulumi:"probabilisticStrategy"`
	RateLimitingStrategy   *TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy   `pulumi:"rateLimitingStrategy"`
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs and TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyInput` via:
//
//	TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs{...}
type TraceJaegerRemoteSamplingStrategyAppliedStrategyInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs struct {
	PerOperationStrategies TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrInput `pulumi:"perOperationStrategies"`
	ProbabilisticStrategy  TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrInput  `pulumi:"probabilisticStrategy"`
	RateLimitingStrategy   TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrInput   `pulumi:"rateLimitingStrategy"`
}

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategy)(nil)).Elem()
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput)
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput).ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutputWithContext(ctx)
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs, TraceJaegerRemoteSamplingStrategyAppliedStrategyPtr and TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrInput` via:
//
//	        TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs{...}
//
//	or:
//
//	        nil
type TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput
}

type traceJaegerRemoteSamplingStrategyAppliedStrategyPtrType TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs

func TraceJaegerRemoteSamplingStrategyAppliedStrategyPtr(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs) TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrInput {
	return (*traceJaegerRemoteSamplingStrategyAppliedStrategyPtrType)(v)
}

func (*traceJaegerRemoteSamplingStrategyAppliedStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceJaegerRemoteSamplingStrategyAppliedStrategy)(nil)).Elem()
}

func (i *traceJaegerRemoteSamplingStrategyAppliedStrategyPtrType) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutputWithContext(context.Background())
}

func (i *traceJaegerRemoteSamplingStrategyAppliedStrategyPtrType) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategy)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput {
	return o.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutputWithContext(context.Background())
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceJaegerRemoteSamplingStrategyAppliedStrategy) *TraceJaegerRemoteSamplingStrategyAppliedStrategy {
		return &v
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput) PerOperationStrategies() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategy) *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies {
		return v.PerOperationStrategies
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput) ProbabilisticStrategy() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategy) *TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy {
		return v.ProbabilisticStrategy
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput) RateLimitingStrategy() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategy) *TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy {
		return v.RateLimitingStrategy
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceJaegerRemoteSamplingStrategyAppliedStrategy)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput) Elem() TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategy) TraceJaegerRemoteSamplingStrategyAppliedStrategy {
		if v != nil {
			return *v
		}
		var ret TraceJaegerRemoteSamplingStrategyAppliedStrategy
		return ret
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput) PerOperationStrategies() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategy) *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies {
		if v == nil {
			return nil
		}
		return v.PerOperationStrategies
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput) ProbabilisticStrategy() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategy) *TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy {
		if v == nil {
			return nil
		}
		return v.ProbabilisticStrategy
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput) RateLimitingStrategy() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategy) *TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy {
		if v == nil {
			return nil
		}
		return v.RateLimitingStrategy
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies struct {
	DefaultLowerBoundTracesPerSecond *float64                                                                                     `pulumi:"defaultLowerBoundTracesPerSecond"`
	DefaultSamplingRate              float64                                                                                      `pulumi:"defaultSamplingRate"`
	DefaultUpperBoundTracesPerSecond *float64                                                                                     `pulumi:"defaultUpperBoundTracesPerSecond"`
	PerOperationStrategies           []TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy `pulumi:"perOperationStrategies"`
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs and TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesInput` via:
//
//	TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs{...}
type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs struct {
	DefaultLowerBoundTracesPerSecond pulumi.Float64PtrInput                                                                               `pulumi:"defaultLowerBoundTracesPerSecond"`
	DefaultSamplingRate              pulumi.Float64Input                                                                                  `pulumi:"defaultSamplingRate"`
	DefaultUpperBoundTracesPerSecond pulumi.Float64PtrInput                                                                               `pulumi:"defaultUpperBoundTracesPerSecond"`
	PerOperationStrategies           TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayInput `pulumi:"perOperationStrategies"`
}

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies)(nil)).Elem()
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput)
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput).ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutputWithContext(ctx)
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs, TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtr and TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrInput` via:
//
//	        TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs{...}
//
//	or:
//
//	        nil
type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput
}

type traceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrType TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs

func TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtr(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrInput {
	return (*traceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrType)(v)
}

func (*traceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies)(nil)).Elem()
}

func (i *traceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrType) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutputWithContext(context.Background())
}

func (i *traceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrType) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return o.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutputWithContext(context.Background())
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies {
		return &v
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput) DefaultLowerBoundTracesPerSecond() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) *float64 {
		return v.DefaultLowerBoundTracesPerSecond
	}).(pulumi.Float64PtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput) DefaultSamplingRate() pulumi.Float64Output {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) float64 {
		return v.DefaultSamplingRate
	}).(pulumi.Float64Output)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput) DefaultUpperBoundTracesPerSecond() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) *float64 {
		return v.DefaultUpperBoundTracesPerSecond
	}).(pulumi.Float64PtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput) PerOperationStrategies() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) []TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy {
		return v.PerOperationStrategies
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput) Elem() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies {
		if v != nil {
			return *v
		}
		var ret TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies
		return ret
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput) DefaultLowerBoundTracesPerSecond() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) *float64 {
		if v == nil {
			return nil
		}
		return v.DefaultLowerBoundTracesPerSecond
	}).(pulumi.Float64PtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput) DefaultSamplingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) *float64 {
		if v == nil {
			return nil
		}
		return &v.DefaultSamplingRate
	}).(pulumi.Float64PtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput) DefaultUpperBoundTracesPerSecond() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) *float64 {
		if v == nil {
			return nil
		}
		return v.DefaultUpperBoundTracesPerSecond
	}).(pulumi.Float64PtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput) PerOperationStrategies() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategies) []TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy {
		if v == nil {
			return nil
		}
		return v.PerOperationStrategies
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy struct {
	Operation             string                                                                                                          `pulumi:"operation"`
	ProbabilisticStrategy TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategy `pulumi:"probabilisticStrategy"`
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs and TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyInput` via:
//
//	TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs{...}
type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs struct {
	Operation             pulumi.StringInput                                                                                                   `pulumi:"operation"`
	ProbabilisticStrategy TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyInput `pulumi:"probabilisticStrategy"`
}

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy)(nil)).Elem()
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput)
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArray and TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayInput` via:
//
//	TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArray{ TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs{...} }
type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArray []TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyInput

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy)(nil)).Elem()
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArray) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArray) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput) Operation() pulumi.StringOutput {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy) string {
		return v.Operation
	}).(pulumi.StringOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput) ProbabilisticStrategy() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategy {
		return v.ProbabilisticStrategy
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput) Index(i pulumi.IntInput) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy {
		return vs[0].([]TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategy)[vs[1].(int)]
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategy struct {
	SamplingRate float64 `pulumi:"samplingRate"`
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs and TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyInput` via:
//
//	TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs{...}
type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs struct {
	SamplingRate pulumi.Float64Input `pulumi:"samplingRate"`
}

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategy)(nil)).Elem()
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategy)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput) SamplingRate() pulumi.Float64Output {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategy) float64 {
		return v.SamplingRate
	}).(pulumi.Float64Output)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy struct {
	SamplingRate float64 `pulumi:"samplingRate"`
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs and TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyInput` via:
//
//	TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs{...}
type TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs struct {
	SamplingRate pulumi.Float64Input `pulumi:"samplingRate"`
}

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy)(nil)).Elem()
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput)
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput).ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutputWithContext(ctx)
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs, TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtr and TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrInput` via:
//
//	        TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs{...}
//
//	or:
//
//	        nil
type TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput
}

type traceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrType TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs

func TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtr(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrInput {
	return (*traceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrType)(v)
}

func (*traceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy)(nil)).Elem()
}

func (i *traceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrType) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutputWithContext(context.Background())
}

func (i *traceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrType) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return o.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutputWithContext(context.Background())
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy) *TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy {
		return &v
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput) SamplingRate() pulumi.Float64Output {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy) float64 {
		return v.SamplingRate
	}).(pulumi.Float64Output)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput) Elem() TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy) TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy {
		if v != nil {
			return *v
		}
		var ret TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy
		return ret
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput) SamplingRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategy) *float64 {
		if v == nil {
			return nil
		}
		return &v.SamplingRate
	}).(pulumi.Float64PtrOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy struct {
	MaxTracesPerSecond int `pulumi:"maxTracesPerSecond"`
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs and TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyInput` via:
//
//	TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs{...}
type TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs struct {
	MaxTracesPerSecond pulumi.IntInput `pulumi:"maxTracesPerSecond"`
}

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy)(nil)).Elem()
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput)
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutputWithContext(context.Background())
}

func (i TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput).ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutputWithContext(ctx)
}

// TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrInput is an input type that accepts TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs, TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtr and TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput values.
// You can construct a concrete instance of `TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrInput` via:
//
//	        TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs{...}
//
//	or:
//
//	        nil
type TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrInput interface {
	pulumi.Input

	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput
	ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutputWithContext(context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput
}

type traceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrType TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs

func TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtr(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrInput {
	return (*traceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrType)(v)
}

func (*traceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy)(nil)).Elem()
}

func (i *traceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrType) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return i.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutputWithContext(context.Background())
}

func (i *traceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrType) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return o.ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutputWithContext(context.Background())
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy) *TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy {
		return &v
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput) MaxTracesPerSecond() pulumi.IntOutput {
	return o.ApplyT(func(v TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy) int {
		return v.MaxTracesPerSecond
	}).(pulumi.IntOutput)
}

type TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput struct{ *pulumi.OutputState }

func (TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy)(nil)).Elem()
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput) ToTraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutputWithContext(ctx context.Context) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput {
	return o
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput) Elem() TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy) TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy {
		if v != nil {
			return *v
		}
		var ret TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy
		return ret
	}).(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput)
}

func (o TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput) MaxTracesPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy) *int {
		if v == nil {
			return nil
		}
		return &v.MaxTracesPerSecond
	}).(pulumi.IntPtrOutput)
}

type TraceMetricsRuleGroupBy struct {
	Key   TraceMetricsRuleGroupByKey `pulumi:"key"`
	Label string                     `pulumi:"label"`
}

// TraceMetricsRuleGroupByInput is an input type that accepts TraceMetricsRuleGroupByArgs and TraceMetricsRuleGroupByOutput values.
// You can construct a concrete instance of `TraceMetricsRuleGroupByInput` via:
//
//	TraceMetricsRuleGroupByArgs{...}
type TraceMetricsRuleGroupByInput interface {
	pulumi.Input

	ToTraceMetricsRuleGroupByOutput() TraceMetricsRuleGroupByOutput
	ToTraceMetricsRuleGroupByOutputWithContext(context.Context) TraceMetricsRuleGroupByOutput
}

type TraceMetricsRuleGroupByArgs struct {
	Key   TraceMetricsRuleGroupByKeyInput `pulumi:"key"`
	Label pulumi.StringInput              `pulumi:"label"`
}

func (TraceMetricsRuleGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleGroupBy)(nil)).Elem()
}

func (i TraceMetricsRuleGroupByArgs) ToTraceMetricsRuleGroupByOutput() TraceMetricsRuleGroupByOutput {
	return i.ToTraceMetricsRuleGroupByOutputWithContext(context.Background())
}

func (i TraceMetricsRuleGroupByArgs) ToTraceMetricsRuleGroupByOutputWithContext(ctx context.Context) TraceMetricsRuleGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleGroupByOutput)
}

// TraceMetricsRuleGroupByArrayInput is an input type that accepts TraceMetricsRuleGroupByArray and TraceMetricsRuleGroupByArrayOutput values.
// You can construct a concrete instance of `TraceMetricsRuleGroupByArrayInput` via:
//
//	TraceMetricsRuleGroupByArray{ TraceMetricsRuleGroupByArgs{...} }
type TraceMetricsRuleGroupByArrayInput interface {
	pulumi.Input

	ToTraceMetricsRuleGroupByArrayOutput() TraceMetricsRuleGroupByArrayOutput
	ToTraceMetricsRuleGroupByArrayOutputWithContext(context.Context) TraceMetricsRuleGroupByArrayOutput
}

type TraceMetricsRuleGroupByArray []TraceMetricsRuleGroupByInput

func (TraceMetricsRuleGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceMetricsRuleGroupBy)(nil)).Elem()
}

func (i TraceMetricsRuleGroupByArray) ToTraceMetricsRuleGroupByArrayOutput() TraceMetricsRuleGroupByArrayOutput {
	return i.ToTraceMetricsRuleGroupByArrayOutputWithContext(context.Background())
}

func (i TraceMetricsRuleGroupByArray) ToTraceMetricsRuleGroupByArrayOutputWithContext(ctx context.Context) TraceMetricsRuleGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleGroupByArrayOutput)
}

type TraceMetricsRuleGroupByOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleGroupBy)(nil)).Elem()
}

func (o TraceMetricsRuleGroupByOutput) ToTraceMetricsRuleGroupByOutput() TraceMetricsRuleGroupByOutput {
	return o
}

func (o TraceMetricsRuleGroupByOutput) ToTraceMetricsRuleGroupByOutputWithContext(ctx context.Context) TraceMetricsRuleGroupByOutput {
	return o
}

func (o TraceMetricsRuleGroupByOutput) Key() TraceMetricsRuleGroupByKeyOutput {
	return o.ApplyT(func(v TraceMetricsRuleGroupBy) TraceMetricsRuleGroupByKey { return v.Key }).(TraceMetricsRuleGroupByKeyOutput)
}

func (o TraceMetricsRuleGroupByOutput) Label() pulumi.StringOutput {
	return o.ApplyT(func(v TraceMetricsRuleGroupBy) string { return v.Label }).(pulumi.StringOutput)
}

type TraceMetricsRuleGroupByArrayOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceMetricsRuleGroupBy)(nil)).Elem()
}

func (o TraceMetricsRuleGroupByArrayOutput) ToTraceMetricsRuleGroupByArrayOutput() TraceMetricsRuleGroupByArrayOutput {
	return o
}

func (o TraceMetricsRuleGroupByArrayOutput) ToTraceMetricsRuleGroupByArrayOutputWithContext(ctx context.Context) TraceMetricsRuleGroupByArrayOutput {
	return o
}

func (o TraceMetricsRuleGroupByArrayOutput) Index(i pulumi.IntInput) TraceMetricsRuleGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TraceMetricsRuleGroupBy {
		return vs[0].([]TraceMetricsRuleGroupBy)[vs[1].(int)]
	}).(TraceMetricsRuleGroupByOutput)
}

type TraceMetricsRuleGroupByKey struct {
	NamedKey *string `pulumi:"namedKey"`
	Type     string  `pulumi:"type"`
}

// TraceMetricsRuleGroupByKeyInput is an input type that accepts TraceMetricsRuleGroupByKeyArgs and TraceMetricsRuleGroupByKeyOutput values.
// You can construct a concrete instance of `TraceMetricsRuleGroupByKeyInput` via:
//
//	TraceMetricsRuleGroupByKeyArgs{...}
type TraceMetricsRuleGroupByKeyInput interface {
	pulumi.Input

	ToTraceMetricsRuleGroupByKeyOutput() TraceMetricsRuleGroupByKeyOutput
	ToTraceMetricsRuleGroupByKeyOutputWithContext(context.Context) TraceMetricsRuleGroupByKeyOutput
}

type TraceMetricsRuleGroupByKeyArgs struct {
	NamedKey pulumi.StringPtrInput `pulumi:"namedKey"`
	Type     pulumi.StringInput    `pulumi:"type"`
}

func (TraceMetricsRuleGroupByKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleGroupByKey)(nil)).Elem()
}

func (i TraceMetricsRuleGroupByKeyArgs) ToTraceMetricsRuleGroupByKeyOutput() TraceMetricsRuleGroupByKeyOutput {
	return i.ToTraceMetricsRuleGroupByKeyOutputWithContext(context.Background())
}

func (i TraceMetricsRuleGroupByKeyArgs) ToTraceMetricsRuleGroupByKeyOutputWithContext(ctx context.Context) TraceMetricsRuleGroupByKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleGroupByKeyOutput)
}

type TraceMetricsRuleGroupByKeyOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleGroupByKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleGroupByKey)(nil)).Elem()
}

func (o TraceMetricsRuleGroupByKeyOutput) ToTraceMetricsRuleGroupByKeyOutput() TraceMetricsRuleGroupByKeyOutput {
	return o
}

func (o TraceMetricsRuleGroupByKeyOutput) ToTraceMetricsRuleGroupByKeyOutputWithContext(ctx context.Context) TraceMetricsRuleGroupByKeyOutput {
	return o
}

func (o TraceMetricsRuleGroupByKeyOutput) NamedKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleGroupByKey) *string { return v.NamedKey }).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleGroupByKeyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TraceMetricsRuleGroupByKey) string { return v.Type }).(pulumi.StringOutput)
}

type TraceMetricsRuleTraceFilter struct {
	Spans []TraceMetricsRuleTraceFilterSpan `pulumi:"spans"`
	Trace *TraceMetricsRuleTraceFilterTrace `pulumi:"trace"`
}

// TraceMetricsRuleTraceFilterInput is an input type that accepts TraceMetricsRuleTraceFilterArgs and TraceMetricsRuleTraceFilterOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterInput` via:
//
//	TraceMetricsRuleTraceFilterArgs{...}
type TraceMetricsRuleTraceFilterInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterOutput() TraceMetricsRuleTraceFilterOutput
	ToTraceMetricsRuleTraceFilterOutputWithContext(context.Context) TraceMetricsRuleTraceFilterOutput
}

type TraceMetricsRuleTraceFilterArgs struct {
	Spans TraceMetricsRuleTraceFilterSpanArrayInput `pulumi:"spans"`
	Trace TraceMetricsRuleTraceFilterTracePtrInput  `pulumi:"trace"`
}

func (TraceMetricsRuleTraceFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilter)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterArgs) ToTraceMetricsRuleTraceFilterOutput() TraceMetricsRuleTraceFilterOutput {
	return i.ToTraceMetricsRuleTraceFilterOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterArgs) ToTraceMetricsRuleTraceFilterOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterOutput)
}

func (i TraceMetricsRuleTraceFilterArgs) ToTraceMetricsRuleTraceFilterPtrOutput() TraceMetricsRuleTraceFilterPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterPtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterArgs) ToTraceMetricsRuleTraceFilterPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterOutput).ToTraceMetricsRuleTraceFilterPtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterPtrInput is an input type that accepts TraceMetricsRuleTraceFilterArgs, TraceMetricsRuleTraceFilterPtr and TraceMetricsRuleTraceFilterPtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterPtrInput` via:
//
//	        TraceMetricsRuleTraceFilterArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterPtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterPtrOutput() TraceMetricsRuleTraceFilterPtrOutput
	ToTraceMetricsRuleTraceFilterPtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterPtrOutput
}

type traceMetricsRuleTraceFilterPtrType TraceMetricsRuleTraceFilterArgs

func TraceMetricsRuleTraceFilterPtr(v *TraceMetricsRuleTraceFilterArgs) TraceMetricsRuleTraceFilterPtrInput {
	return (*traceMetricsRuleTraceFilterPtrType)(v)
}

func (*traceMetricsRuleTraceFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilter)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterPtrType) ToTraceMetricsRuleTraceFilterPtrOutput() TraceMetricsRuleTraceFilterPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterPtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterPtrType) ToTraceMetricsRuleTraceFilterPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterPtrOutput)
}

type TraceMetricsRuleTraceFilterOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilter)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterOutput) ToTraceMetricsRuleTraceFilterOutput() TraceMetricsRuleTraceFilterOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterOutput) ToTraceMetricsRuleTraceFilterOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterOutput) ToTraceMetricsRuleTraceFilterPtrOutput() TraceMetricsRuleTraceFilterPtrOutput {
	return o.ToTraceMetricsRuleTraceFilterPtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterOutput) ToTraceMetricsRuleTraceFilterPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilter) *TraceMetricsRuleTraceFilter {
		return &v
	}).(TraceMetricsRuleTraceFilterPtrOutput)
}

func (o TraceMetricsRuleTraceFilterOutput) Spans() TraceMetricsRuleTraceFilterSpanArrayOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilter) []TraceMetricsRuleTraceFilterSpan { return v.Spans }).(TraceMetricsRuleTraceFilterSpanArrayOutput)
}

func (o TraceMetricsRuleTraceFilterOutput) Trace() TraceMetricsRuleTraceFilterTracePtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilter) *TraceMetricsRuleTraceFilterTrace { return v.Trace }).(TraceMetricsRuleTraceFilterTracePtrOutput)
}

type TraceMetricsRuleTraceFilterPtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilter)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterPtrOutput) ToTraceMetricsRuleTraceFilterPtrOutput() TraceMetricsRuleTraceFilterPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterPtrOutput) ToTraceMetricsRuleTraceFilterPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterPtrOutput) Elem() TraceMetricsRuleTraceFilterOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilter) TraceMetricsRuleTraceFilter {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilter
		return ret
	}).(TraceMetricsRuleTraceFilterOutput)
}

func (o TraceMetricsRuleTraceFilterPtrOutput) Spans() TraceMetricsRuleTraceFilterSpanArrayOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilter) []TraceMetricsRuleTraceFilterSpan {
		if v == nil {
			return nil
		}
		return v.Spans
	}).(TraceMetricsRuleTraceFilterSpanArrayOutput)
}

func (o TraceMetricsRuleTraceFilterPtrOutput) Trace() TraceMetricsRuleTraceFilterTracePtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilter) *TraceMetricsRuleTraceFilterTrace {
		if v == nil {
			return nil
		}
		return v.Trace
	}).(TraceMetricsRuleTraceFilterTracePtrOutput)
}

type TraceMetricsRuleTraceFilterSpan struct {
	Duration        *TraceMetricsRuleTraceFilterSpanDuration        `pulumi:"duration"`
	Error           *TraceMetricsRuleTraceFilterSpanError           `pulumi:"error"`
	MatchType       *string                                         `pulumi:"matchType"`
	Operation       *TraceMetricsRuleTraceFilterSpanOperation       `pulumi:"operation"`
	ParentOperation *TraceMetricsRuleTraceFilterSpanParentOperation `pulumi:"parentOperation"`
	ParentService   *TraceMetricsRuleTraceFilterSpanParentService   `pulumi:"parentService"`
	Service         *TraceMetricsRuleTraceFilterSpanService         `pulumi:"service"`
	SpanCount       *TraceMetricsRuleTraceFilterSpanSpanCount       `pulumi:"spanCount"`
	Tags            []TraceMetricsRuleTraceFilterSpanTag            `pulumi:"tags"`
}

// TraceMetricsRuleTraceFilterSpanInput is an input type that accepts TraceMetricsRuleTraceFilterSpanArgs and TraceMetricsRuleTraceFilterSpanOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanInput` via:
//
//	TraceMetricsRuleTraceFilterSpanArgs{...}
type TraceMetricsRuleTraceFilterSpanInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanOutput() TraceMetricsRuleTraceFilterSpanOutput
	ToTraceMetricsRuleTraceFilterSpanOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanOutput
}

type TraceMetricsRuleTraceFilterSpanArgs struct {
	Duration        TraceMetricsRuleTraceFilterSpanDurationPtrInput        `pulumi:"duration"`
	Error           TraceMetricsRuleTraceFilterSpanErrorPtrInput           `pulumi:"error"`
	MatchType       pulumi.StringPtrInput                                  `pulumi:"matchType"`
	Operation       TraceMetricsRuleTraceFilterSpanOperationPtrInput       `pulumi:"operation"`
	ParentOperation TraceMetricsRuleTraceFilterSpanParentOperationPtrInput `pulumi:"parentOperation"`
	ParentService   TraceMetricsRuleTraceFilterSpanParentServicePtrInput   `pulumi:"parentService"`
	Service         TraceMetricsRuleTraceFilterSpanServicePtrInput         `pulumi:"service"`
	SpanCount       TraceMetricsRuleTraceFilterSpanSpanCountPtrInput       `pulumi:"spanCount"`
	Tags            TraceMetricsRuleTraceFilterSpanTagArrayInput           `pulumi:"tags"`
}

func (TraceMetricsRuleTraceFilterSpanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpan)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanArgs) ToTraceMetricsRuleTraceFilterSpanOutput() TraceMetricsRuleTraceFilterSpanOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanArgs) ToTraceMetricsRuleTraceFilterSpanOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanOutput)
}

// TraceMetricsRuleTraceFilterSpanArrayInput is an input type that accepts TraceMetricsRuleTraceFilterSpanArray and TraceMetricsRuleTraceFilterSpanArrayOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanArrayInput` via:
//
//	TraceMetricsRuleTraceFilterSpanArray{ TraceMetricsRuleTraceFilterSpanArgs{...} }
type TraceMetricsRuleTraceFilterSpanArrayInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanArrayOutput() TraceMetricsRuleTraceFilterSpanArrayOutput
	ToTraceMetricsRuleTraceFilterSpanArrayOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanArrayOutput
}

type TraceMetricsRuleTraceFilterSpanArray []TraceMetricsRuleTraceFilterSpanInput

func (TraceMetricsRuleTraceFilterSpanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceMetricsRuleTraceFilterSpan)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanArray) ToTraceMetricsRuleTraceFilterSpanArrayOutput() TraceMetricsRuleTraceFilterSpanArrayOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanArrayOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanArray) ToTraceMetricsRuleTraceFilterSpanArrayOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanArrayOutput)
}

type TraceMetricsRuleTraceFilterSpanOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpan)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanOutput) ToTraceMetricsRuleTraceFilterSpanOutput() TraceMetricsRuleTraceFilterSpanOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanOutput) ToTraceMetricsRuleTraceFilterSpanOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanOutput) Duration() TraceMetricsRuleTraceFilterSpanDurationPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpan) *TraceMetricsRuleTraceFilterSpanDuration { return v.Duration }).(TraceMetricsRuleTraceFilterSpanDurationPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOutput) Error() TraceMetricsRuleTraceFilterSpanErrorPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpan) *TraceMetricsRuleTraceFilterSpanError { return v.Error }).(TraceMetricsRuleTraceFilterSpanErrorPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpan) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOutput) Operation() TraceMetricsRuleTraceFilterSpanOperationPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpan) *TraceMetricsRuleTraceFilterSpanOperation { return v.Operation }).(TraceMetricsRuleTraceFilterSpanOperationPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOutput) ParentOperation() TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpan) *TraceMetricsRuleTraceFilterSpanParentOperation {
		return v.ParentOperation
	}).(TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOutput) ParentService() TraceMetricsRuleTraceFilterSpanParentServicePtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpan) *TraceMetricsRuleTraceFilterSpanParentService {
		return v.ParentService
	}).(TraceMetricsRuleTraceFilterSpanParentServicePtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOutput) Service() TraceMetricsRuleTraceFilterSpanServicePtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpan) *TraceMetricsRuleTraceFilterSpanService { return v.Service }).(TraceMetricsRuleTraceFilterSpanServicePtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOutput) SpanCount() TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpan) *TraceMetricsRuleTraceFilterSpanSpanCount { return v.SpanCount }).(TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOutput) Tags() TraceMetricsRuleTraceFilterSpanTagArrayOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpan) []TraceMetricsRuleTraceFilterSpanTag { return v.Tags }).(TraceMetricsRuleTraceFilterSpanTagArrayOutput)
}

type TraceMetricsRuleTraceFilterSpanArrayOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceMetricsRuleTraceFilterSpan)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanArrayOutput) ToTraceMetricsRuleTraceFilterSpanArrayOutput() TraceMetricsRuleTraceFilterSpanArrayOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanArrayOutput) ToTraceMetricsRuleTraceFilterSpanArrayOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanArrayOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanArrayOutput) Index(i pulumi.IntInput) TraceMetricsRuleTraceFilterSpanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TraceMetricsRuleTraceFilterSpan {
		return vs[0].([]TraceMetricsRuleTraceFilterSpan)[vs[1].(int)]
	}).(TraceMetricsRuleTraceFilterSpanOutput)
}

type TraceMetricsRuleTraceFilterSpanDuration struct {
	MaxSeconds *float64 `pulumi:"maxSeconds"`
	MinSeconds *float64 `pulumi:"minSeconds"`
}

// TraceMetricsRuleTraceFilterSpanDurationInput is an input type that accepts TraceMetricsRuleTraceFilterSpanDurationArgs and TraceMetricsRuleTraceFilterSpanDurationOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanDurationInput` via:
//
//	TraceMetricsRuleTraceFilterSpanDurationArgs{...}
type TraceMetricsRuleTraceFilterSpanDurationInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanDurationOutput() TraceMetricsRuleTraceFilterSpanDurationOutput
	ToTraceMetricsRuleTraceFilterSpanDurationOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanDurationOutput
}

type TraceMetricsRuleTraceFilterSpanDurationArgs struct {
	MaxSeconds pulumi.Float64PtrInput `pulumi:"maxSeconds"`
	MinSeconds pulumi.Float64PtrInput `pulumi:"minSeconds"`
}

func (TraceMetricsRuleTraceFilterSpanDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanDuration)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanDurationArgs) ToTraceMetricsRuleTraceFilterSpanDurationOutput() TraceMetricsRuleTraceFilterSpanDurationOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanDurationOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanDurationArgs) ToTraceMetricsRuleTraceFilterSpanDurationOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanDurationOutput)
}

func (i TraceMetricsRuleTraceFilterSpanDurationArgs) ToTraceMetricsRuleTraceFilterSpanDurationPtrOutput() TraceMetricsRuleTraceFilterSpanDurationPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanDurationPtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanDurationArgs) ToTraceMetricsRuleTraceFilterSpanDurationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanDurationOutput).ToTraceMetricsRuleTraceFilterSpanDurationPtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterSpanDurationPtrInput is an input type that accepts TraceMetricsRuleTraceFilterSpanDurationArgs, TraceMetricsRuleTraceFilterSpanDurationPtr and TraceMetricsRuleTraceFilterSpanDurationPtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanDurationPtrInput` via:
//
//	        TraceMetricsRuleTraceFilterSpanDurationArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterSpanDurationPtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanDurationPtrOutput() TraceMetricsRuleTraceFilterSpanDurationPtrOutput
	ToTraceMetricsRuleTraceFilterSpanDurationPtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanDurationPtrOutput
}

type traceMetricsRuleTraceFilterSpanDurationPtrType TraceMetricsRuleTraceFilterSpanDurationArgs

func TraceMetricsRuleTraceFilterSpanDurationPtr(v *TraceMetricsRuleTraceFilterSpanDurationArgs) TraceMetricsRuleTraceFilterSpanDurationPtrInput {
	return (*traceMetricsRuleTraceFilterSpanDurationPtrType)(v)
}

func (*traceMetricsRuleTraceFilterSpanDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanDuration)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterSpanDurationPtrType) ToTraceMetricsRuleTraceFilterSpanDurationPtrOutput() TraceMetricsRuleTraceFilterSpanDurationPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanDurationPtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterSpanDurationPtrType) ToTraceMetricsRuleTraceFilterSpanDurationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanDurationPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanDurationOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanDuration)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanDurationOutput) ToTraceMetricsRuleTraceFilterSpanDurationOutput() TraceMetricsRuleTraceFilterSpanDurationOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanDurationOutput) ToTraceMetricsRuleTraceFilterSpanDurationOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanDurationOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanDurationOutput) ToTraceMetricsRuleTraceFilterSpanDurationPtrOutput() TraceMetricsRuleTraceFilterSpanDurationPtrOutput {
	return o.ToTraceMetricsRuleTraceFilterSpanDurationPtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterSpanDurationOutput) ToTraceMetricsRuleTraceFilterSpanDurationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterSpanDuration) *TraceMetricsRuleTraceFilterSpanDuration {
		return &v
	}).(TraceMetricsRuleTraceFilterSpanDurationPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanDurationOutput) MaxSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanDuration) *float64 { return v.MaxSeconds }).(pulumi.Float64PtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanDurationOutput) MinSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanDuration) *float64 { return v.MinSeconds }).(pulumi.Float64PtrOutput)
}

type TraceMetricsRuleTraceFilterSpanDurationPtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanDuration)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanDurationPtrOutput) ToTraceMetricsRuleTraceFilterSpanDurationPtrOutput() TraceMetricsRuleTraceFilterSpanDurationPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanDurationPtrOutput) ToTraceMetricsRuleTraceFilterSpanDurationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanDurationPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanDurationPtrOutput) Elem() TraceMetricsRuleTraceFilterSpanDurationOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanDuration) TraceMetricsRuleTraceFilterSpanDuration {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterSpanDuration
		return ret
	}).(TraceMetricsRuleTraceFilterSpanDurationOutput)
}

func (o TraceMetricsRuleTraceFilterSpanDurationPtrOutput) MaxSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanDuration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxSeconds
	}).(pulumi.Float64PtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanDurationPtrOutput) MinSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanDuration) *float64 {
		if v == nil {
			return nil
		}
		return v.MinSeconds
	}).(pulumi.Float64PtrOutput)
}

type TraceMetricsRuleTraceFilterSpanError struct {
	Value bool `pulumi:"value"`
}

// TraceMetricsRuleTraceFilterSpanErrorInput is an input type that accepts TraceMetricsRuleTraceFilterSpanErrorArgs and TraceMetricsRuleTraceFilterSpanErrorOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanErrorInput` via:
//
//	TraceMetricsRuleTraceFilterSpanErrorArgs{...}
type TraceMetricsRuleTraceFilterSpanErrorInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanErrorOutput() TraceMetricsRuleTraceFilterSpanErrorOutput
	ToTraceMetricsRuleTraceFilterSpanErrorOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanErrorOutput
}

type TraceMetricsRuleTraceFilterSpanErrorArgs struct {
	Value pulumi.BoolInput `pulumi:"value"`
}

func (TraceMetricsRuleTraceFilterSpanErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanError)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanErrorArgs) ToTraceMetricsRuleTraceFilterSpanErrorOutput() TraceMetricsRuleTraceFilterSpanErrorOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanErrorOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanErrorArgs) ToTraceMetricsRuleTraceFilterSpanErrorOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanErrorOutput)
}

func (i TraceMetricsRuleTraceFilterSpanErrorArgs) ToTraceMetricsRuleTraceFilterSpanErrorPtrOutput() TraceMetricsRuleTraceFilterSpanErrorPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanErrorPtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanErrorArgs) ToTraceMetricsRuleTraceFilterSpanErrorPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanErrorOutput).ToTraceMetricsRuleTraceFilterSpanErrorPtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterSpanErrorPtrInput is an input type that accepts TraceMetricsRuleTraceFilterSpanErrorArgs, TraceMetricsRuleTraceFilterSpanErrorPtr and TraceMetricsRuleTraceFilterSpanErrorPtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanErrorPtrInput` via:
//
//	        TraceMetricsRuleTraceFilterSpanErrorArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterSpanErrorPtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanErrorPtrOutput() TraceMetricsRuleTraceFilterSpanErrorPtrOutput
	ToTraceMetricsRuleTraceFilterSpanErrorPtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanErrorPtrOutput
}

type traceMetricsRuleTraceFilterSpanErrorPtrType TraceMetricsRuleTraceFilterSpanErrorArgs

func TraceMetricsRuleTraceFilterSpanErrorPtr(v *TraceMetricsRuleTraceFilterSpanErrorArgs) TraceMetricsRuleTraceFilterSpanErrorPtrInput {
	return (*traceMetricsRuleTraceFilterSpanErrorPtrType)(v)
}

func (*traceMetricsRuleTraceFilterSpanErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanError)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterSpanErrorPtrType) ToTraceMetricsRuleTraceFilterSpanErrorPtrOutput() TraceMetricsRuleTraceFilterSpanErrorPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanErrorPtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterSpanErrorPtrType) ToTraceMetricsRuleTraceFilterSpanErrorPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanErrorPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanErrorOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanError)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanErrorOutput) ToTraceMetricsRuleTraceFilterSpanErrorOutput() TraceMetricsRuleTraceFilterSpanErrorOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanErrorOutput) ToTraceMetricsRuleTraceFilterSpanErrorOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanErrorOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanErrorOutput) ToTraceMetricsRuleTraceFilterSpanErrorPtrOutput() TraceMetricsRuleTraceFilterSpanErrorPtrOutput {
	return o.ToTraceMetricsRuleTraceFilterSpanErrorPtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterSpanErrorOutput) ToTraceMetricsRuleTraceFilterSpanErrorPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterSpanError) *TraceMetricsRuleTraceFilterSpanError {
		return &v
	}).(TraceMetricsRuleTraceFilterSpanErrorPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanErrorOutput) Value() pulumi.BoolOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanError) bool { return v.Value }).(pulumi.BoolOutput)
}

type TraceMetricsRuleTraceFilterSpanErrorPtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanError)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanErrorPtrOutput) ToTraceMetricsRuleTraceFilterSpanErrorPtrOutput() TraceMetricsRuleTraceFilterSpanErrorPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanErrorPtrOutput) ToTraceMetricsRuleTraceFilterSpanErrorPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanErrorPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanErrorPtrOutput) Elem() TraceMetricsRuleTraceFilterSpanErrorOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanError) TraceMetricsRuleTraceFilterSpanError {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterSpanError
		return ret
	}).(TraceMetricsRuleTraceFilterSpanErrorOutput)
}

func (o TraceMetricsRuleTraceFilterSpanErrorPtrOutput) Value() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanError) *bool {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.BoolPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanOperation struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceMetricsRuleTraceFilterSpanOperationInput is an input type that accepts TraceMetricsRuleTraceFilterSpanOperationArgs and TraceMetricsRuleTraceFilterSpanOperationOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanOperationInput` via:
//
//	TraceMetricsRuleTraceFilterSpanOperationArgs{...}
type TraceMetricsRuleTraceFilterSpanOperationInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanOperationOutput() TraceMetricsRuleTraceFilterSpanOperationOutput
	ToTraceMetricsRuleTraceFilterSpanOperationOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanOperationOutput
}

type TraceMetricsRuleTraceFilterSpanOperationArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceMetricsRuleTraceFilterSpanOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanOperation)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanOperationArgs) ToTraceMetricsRuleTraceFilterSpanOperationOutput() TraceMetricsRuleTraceFilterSpanOperationOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanOperationOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanOperationArgs) ToTraceMetricsRuleTraceFilterSpanOperationOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanOperationOutput)
}

func (i TraceMetricsRuleTraceFilterSpanOperationArgs) ToTraceMetricsRuleTraceFilterSpanOperationPtrOutput() TraceMetricsRuleTraceFilterSpanOperationPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanOperationPtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanOperationArgs) ToTraceMetricsRuleTraceFilterSpanOperationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanOperationOutput).ToTraceMetricsRuleTraceFilterSpanOperationPtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterSpanOperationPtrInput is an input type that accepts TraceMetricsRuleTraceFilterSpanOperationArgs, TraceMetricsRuleTraceFilterSpanOperationPtr and TraceMetricsRuleTraceFilterSpanOperationPtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanOperationPtrInput` via:
//
//	        TraceMetricsRuleTraceFilterSpanOperationArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterSpanOperationPtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanOperationPtrOutput() TraceMetricsRuleTraceFilterSpanOperationPtrOutput
	ToTraceMetricsRuleTraceFilterSpanOperationPtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanOperationPtrOutput
}

type traceMetricsRuleTraceFilterSpanOperationPtrType TraceMetricsRuleTraceFilterSpanOperationArgs

func TraceMetricsRuleTraceFilterSpanOperationPtr(v *TraceMetricsRuleTraceFilterSpanOperationArgs) TraceMetricsRuleTraceFilterSpanOperationPtrInput {
	return (*traceMetricsRuleTraceFilterSpanOperationPtrType)(v)
}

func (*traceMetricsRuleTraceFilterSpanOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanOperation)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterSpanOperationPtrType) ToTraceMetricsRuleTraceFilterSpanOperationPtrOutput() TraceMetricsRuleTraceFilterSpanOperationPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanOperationPtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterSpanOperationPtrType) ToTraceMetricsRuleTraceFilterSpanOperationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanOperationPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanOperationOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanOperation)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanOperationOutput) ToTraceMetricsRuleTraceFilterSpanOperationOutput() TraceMetricsRuleTraceFilterSpanOperationOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanOperationOutput) ToTraceMetricsRuleTraceFilterSpanOperationOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanOperationOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanOperationOutput) ToTraceMetricsRuleTraceFilterSpanOperationPtrOutput() TraceMetricsRuleTraceFilterSpanOperationPtrOutput {
	return o.ToTraceMetricsRuleTraceFilterSpanOperationPtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterSpanOperationOutput) ToTraceMetricsRuleTraceFilterSpanOperationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterSpanOperation) *TraceMetricsRuleTraceFilterSpanOperation {
		return &v
	}).(TraceMetricsRuleTraceFilterSpanOperationPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOperationOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanOperation) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOperationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanOperation) string { return v.Value }).(pulumi.StringOutput)
}

type TraceMetricsRuleTraceFilterSpanOperationPtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanOperation)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanOperationPtrOutput) ToTraceMetricsRuleTraceFilterSpanOperationPtrOutput() TraceMetricsRuleTraceFilterSpanOperationPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanOperationPtrOutput) ToTraceMetricsRuleTraceFilterSpanOperationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanOperationPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanOperationPtrOutput) Elem() TraceMetricsRuleTraceFilterSpanOperationOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanOperation) TraceMetricsRuleTraceFilterSpanOperation {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterSpanOperation
		return ret
	}).(TraceMetricsRuleTraceFilterSpanOperationOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOperationPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanOperation) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanOperationPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanOperation) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanParentOperation struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceMetricsRuleTraceFilterSpanParentOperationInput is an input type that accepts TraceMetricsRuleTraceFilterSpanParentOperationArgs and TraceMetricsRuleTraceFilterSpanParentOperationOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanParentOperationInput` via:
//
//	TraceMetricsRuleTraceFilterSpanParentOperationArgs{...}
type TraceMetricsRuleTraceFilterSpanParentOperationInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanParentOperationOutput() TraceMetricsRuleTraceFilterSpanParentOperationOutput
	ToTraceMetricsRuleTraceFilterSpanParentOperationOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanParentOperationOutput
}

type TraceMetricsRuleTraceFilterSpanParentOperationArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceMetricsRuleTraceFilterSpanParentOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanParentOperation)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanParentOperationArgs) ToTraceMetricsRuleTraceFilterSpanParentOperationOutput() TraceMetricsRuleTraceFilterSpanParentOperationOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanParentOperationOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanParentOperationArgs) ToTraceMetricsRuleTraceFilterSpanParentOperationOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanParentOperationOutput)
}

func (i TraceMetricsRuleTraceFilterSpanParentOperationArgs) ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutput() TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanParentOperationArgs) ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanParentOperationOutput).ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterSpanParentOperationPtrInput is an input type that accepts TraceMetricsRuleTraceFilterSpanParentOperationArgs, TraceMetricsRuleTraceFilterSpanParentOperationPtr and TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanParentOperationPtrInput` via:
//
//	        TraceMetricsRuleTraceFilterSpanParentOperationArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterSpanParentOperationPtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutput() TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput
	ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput
}

type traceMetricsRuleTraceFilterSpanParentOperationPtrType TraceMetricsRuleTraceFilterSpanParentOperationArgs

func TraceMetricsRuleTraceFilterSpanParentOperationPtr(v *TraceMetricsRuleTraceFilterSpanParentOperationArgs) TraceMetricsRuleTraceFilterSpanParentOperationPtrInput {
	return (*traceMetricsRuleTraceFilterSpanParentOperationPtrType)(v)
}

func (*traceMetricsRuleTraceFilterSpanParentOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanParentOperation)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterSpanParentOperationPtrType) ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutput() TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterSpanParentOperationPtrType) ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanParentOperationOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanParentOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanParentOperation)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationOutput) ToTraceMetricsRuleTraceFilterSpanParentOperationOutput() TraceMetricsRuleTraceFilterSpanParentOperationOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationOutput) ToTraceMetricsRuleTraceFilterSpanParentOperationOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentOperationOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationOutput) ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutput() TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput {
	return o.ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationOutput) ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterSpanParentOperation) *TraceMetricsRuleTraceFilterSpanParentOperation {
		return &v
	}).(TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanParentOperation) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanParentOperation) string { return v.Value }).(pulumi.StringOutput)
}

type TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanParentOperation)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput) ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutput() TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput) ToTraceMetricsRuleTraceFilterSpanParentOperationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput) Elem() TraceMetricsRuleTraceFilterSpanParentOperationOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanParentOperation) TraceMetricsRuleTraceFilterSpanParentOperation {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterSpanParentOperation
		return ret
	}).(TraceMetricsRuleTraceFilterSpanParentOperationOutput)
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanParentOperation) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanParentOperation) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanParentService struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceMetricsRuleTraceFilterSpanParentServiceInput is an input type that accepts TraceMetricsRuleTraceFilterSpanParentServiceArgs and TraceMetricsRuleTraceFilterSpanParentServiceOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanParentServiceInput` via:
//
//	TraceMetricsRuleTraceFilterSpanParentServiceArgs{...}
type TraceMetricsRuleTraceFilterSpanParentServiceInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanParentServiceOutput() TraceMetricsRuleTraceFilterSpanParentServiceOutput
	ToTraceMetricsRuleTraceFilterSpanParentServiceOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanParentServiceOutput
}

type TraceMetricsRuleTraceFilterSpanParentServiceArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceMetricsRuleTraceFilterSpanParentServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanParentService)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanParentServiceArgs) ToTraceMetricsRuleTraceFilterSpanParentServiceOutput() TraceMetricsRuleTraceFilterSpanParentServiceOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanParentServiceOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanParentServiceArgs) ToTraceMetricsRuleTraceFilterSpanParentServiceOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanParentServiceOutput)
}

func (i TraceMetricsRuleTraceFilterSpanParentServiceArgs) ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutput() TraceMetricsRuleTraceFilterSpanParentServicePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanParentServiceArgs) ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanParentServiceOutput).ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterSpanParentServicePtrInput is an input type that accepts TraceMetricsRuleTraceFilterSpanParentServiceArgs, TraceMetricsRuleTraceFilterSpanParentServicePtr and TraceMetricsRuleTraceFilterSpanParentServicePtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanParentServicePtrInput` via:
//
//	        TraceMetricsRuleTraceFilterSpanParentServiceArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterSpanParentServicePtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutput() TraceMetricsRuleTraceFilterSpanParentServicePtrOutput
	ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanParentServicePtrOutput
}

type traceMetricsRuleTraceFilterSpanParentServicePtrType TraceMetricsRuleTraceFilterSpanParentServiceArgs

func TraceMetricsRuleTraceFilterSpanParentServicePtr(v *TraceMetricsRuleTraceFilterSpanParentServiceArgs) TraceMetricsRuleTraceFilterSpanParentServicePtrInput {
	return (*traceMetricsRuleTraceFilterSpanParentServicePtrType)(v)
}

func (*traceMetricsRuleTraceFilterSpanParentServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanParentService)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterSpanParentServicePtrType) ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutput() TraceMetricsRuleTraceFilterSpanParentServicePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterSpanParentServicePtrType) ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanParentServicePtrOutput)
}

type TraceMetricsRuleTraceFilterSpanParentServiceOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanParentServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanParentService)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanParentServiceOutput) ToTraceMetricsRuleTraceFilterSpanParentServiceOutput() TraceMetricsRuleTraceFilterSpanParentServiceOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanParentServiceOutput) ToTraceMetricsRuleTraceFilterSpanParentServiceOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentServiceOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanParentServiceOutput) ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutput() TraceMetricsRuleTraceFilterSpanParentServicePtrOutput {
	return o.ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterSpanParentServiceOutput) ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterSpanParentService) *TraceMetricsRuleTraceFilterSpanParentService {
		return &v
	}).(TraceMetricsRuleTraceFilterSpanParentServicePtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanParentServiceOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanParentService) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanParentServiceOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanParentService) string { return v.Value }).(pulumi.StringOutput)
}

type TraceMetricsRuleTraceFilterSpanParentServicePtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanParentServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanParentService)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanParentServicePtrOutput) ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutput() TraceMetricsRuleTraceFilterSpanParentServicePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanParentServicePtrOutput) ToTraceMetricsRuleTraceFilterSpanParentServicePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanParentServicePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanParentServicePtrOutput) Elem() TraceMetricsRuleTraceFilterSpanParentServiceOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanParentService) TraceMetricsRuleTraceFilterSpanParentService {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterSpanParentService
		return ret
	}).(TraceMetricsRuleTraceFilterSpanParentServiceOutput)
}

func (o TraceMetricsRuleTraceFilterSpanParentServicePtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanParentService) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanParentServicePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanParentService) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanService struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceMetricsRuleTraceFilterSpanServiceInput is an input type that accepts TraceMetricsRuleTraceFilterSpanServiceArgs and TraceMetricsRuleTraceFilterSpanServiceOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanServiceInput` via:
//
//	TraceMetricsRuleTraceFilterSpanServiceArgs{...}
type TraceMetricsRuleTraceFilterSpanServiceInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanServiceOutput() TraceMetricsRuleTraceFilterSpanServiceOutput
	ToTraceMetricsRuleTraceFilterSpanServiceOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanServiceOutput
}

type TraceMetricsRuleTraceFilterSpanServiceArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceMetricsRuleTraceFilterSpanServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanService)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanServiceArgs) ToTraceMetricsRuleTraceFilterSpanServiceOutput() TraceMetricsRuleTraceFilterSpanServiceOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanServiceOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanServiceArgs) ToTraceMetricsRuleTraceFilterSpanServiceOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanServiceOutput)
}

func (i TraceMetricsRuleTraceFilterSpanServiceArgs) ToTraceMetricsRuleTraceFilterSpanServicePtrOutput() TraceMetricsRuleTraceFilterSpanServicePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanServicePtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanServiceArgs) ToTraceMetricsRuleTraceFilterSpanServicePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanServiceOutput).ToTraceMetricsRuleTraceFilterSpanServicePtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterSpanServicePtrInput is an input type that accepts TraceMetricsRuleTraceFilterSpanServiceArgs, TraceMetricsRuleTraceFilterSpanServicePtr and TraceMetricsRuleTraceFilterSpanServicePtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanServicePtrInput` via:
//
//	        TraceMetricsRuleTraceFilterSpanServiceArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterSpanServicePtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanServicePtrOutput() TraceMetricsRuleTraceFilterSpanServicePtrOutput
	ToTraceMetricsRuleTraceFilterSpanServicePtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanServicePtrOutput
}

type traceMetricsRuleTraceFilterSpanServicePtrType TraceMetricsRuleTraceFilterSpanServiceArgs

func TraceMetricsRuleTraceFilterSpanServicePtr(v *TraceMetricsRuleTraceFilterSpanServiceArgs) TraceMetricsRuleTraceFilterSpanServicePtrInput {
	return (*traceMetricsRuleTraceFilterSpanServicePtrType)(v)
}

func (*traceMetricsRuleTraceFilterSpanServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanService)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterSpanServicePtrType) ToTraceMetricsRuleTraceFilterSpanServicePtrOutput() TraceMetricsRuleTraceFilterSpanServicePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanServicePtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterSpanServicePtrType) ToTraceMetricsRuleTraceFilterSpanServicePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanServicePtrOutput)
}

type TraceMetricsRuleTraceFilterSpanServiceOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanService)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanServiceOutput) ToTraceMetricsRuleTraceFilterSpanServiceOutput() TraceMetricsRuleTraceFilterSpanServiceOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanServiceOutput) ToTraceMetricsRuleTraceFilterSpanServiceOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanServiceOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanServiceOutput) ToTraceMetricsRuleTraceFilterSpanServicePtrOutput() TraceMetricsRuleTraceFilterSpanServicePtrOutput {
	return o.ToTraceMetricsRuleTraceFilterSpanServicePtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterSpanServiceOutput) ToTraceMetricsRuleTraceFilterSpanServicePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterSpanService) *TraceMetricsRuleTraceFilterSpanService {
		return &v
	}).(TraceMetricsRuleTraceFilterSpanServicePtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanServiceOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanService) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanServiceOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanService) string { return v.Value }).(pulumi.StringOutput)
}

type TraceMetricsRuleTraceFilterSpanServicePtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanService)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanServicePtrOutput) ToTraceMetricsRuleTraceFilterSpanServicePtrOutput() TraceMetricsRuleTraceFilterSpanServicePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanServicePtrOutput) ToTraceMetricsRuleTraceFilterSpanServicePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanServicePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanServicePtrOutput) Elem() TraceMetricsRuleTraceFilterSpanServiceOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanService) TraceMetricsRuleTraceFilterSpanService {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterSpanService
		return ret
	}).(TraceMetricsRuleTraceFilterSpanServiceOutput)
}

func (o TraceMetricsRuleTraceFilterSpanServicePtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanService) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanServicePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanService) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanSpanCount struct {
	Max *int `pulumi:"max"`
	Min *int `pulumi:"min"`
}

// TraceMetricsRuleTraceFilterSpanSpanCountInput is an input type that accepts TraceMetricsRuleTraceFilterSpanSpanCountArgs and TraceMetricsRuleTraceFilterSpanSpanCountOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanSpanCountInput` via:
//
//	TraceMetricsRuleTraceFilterSpanSpanCountArgs{...}
type TraceMetricsRuleTraceFilterSpanSpanCountInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanSpanCountOutput() TraceMetricsRuleTraceFilterSpanSpanCountOutput
	ToTraceMetricsRuleTraceFilterSpanSpanCountOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanSpanCountOutput
}

type TraceMetricsRuleTraceFilterSpanSpanCountArgs struct {
	Max pulumi.IntPtrInput `pulumi:"max"`
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (TraceMetricsRuleTraceFilterSpanSpanCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanSpanCount)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanSpanCountArgs) ToTraceMetricsRuleTraceFilterSpanSpanCountOutput() TraceMetricsRuleTraceFilterSpanSpanCountOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanSpanCountOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanSpanCountArgs) ToTraceMetricsRuleTraceFilterSpanSpanCountOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanSpanCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanSpanCountOutput)
}

func (i TraceMetricsRuleTraceFilterSpanSpanCountArgs) ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutput() TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanSpanCountArgs) ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanSpanCountOutput).ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterSpanSpanCountPtrInput is an input type that accepts TraceMetricsRuleTraceFilterSpanSpanCountArgs, TraceMetricsRuleTraceFilterSpanSpanCountPtr and TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanSpanCountPtrInput` via:
//
//	        TraceMetricsRuleTraceFilterSpanSpanCountArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterSpanSpanCountPtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutput() TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput
	ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput
}

type traceMetricsRuleTraceFilterSpanSpanCountPtrType TraceMetricsRuleTraceFilterSpanSpanCountArgs

func TraceMetricsRuleTraceFilterSpanSpanCountPtr(v *TraceMetricsRuleTraceFilterSpanSpanCountArgs) TraceMetricsRuleTraceFilterSpanSpanCountPtrInput {
	return (*traceMetricsRuleTraceFilterSpanSpanCountPtrType)(v)
}

func (*traceMetricsRuleTraceFilterSpanSpanCountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanSpanCount)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterSpanSpanCountPtrType) ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutput() TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterSpanSpanCountPtrType) ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanSpanCountOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanSpanCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanSpanCount)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountOutput) ToTraceMetricsRuleTraceFilterSpanSpanCountOutput() TraceMetricsRuleTraceFilterSpanSpanCountOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountOutput) ToTraceMetricsRuleTraceFilterSpanSpanCountOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanSpanCountOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountOutput) ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutput() TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput {
	return o.ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountOutput) ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterSpanSpanCount) *TraceMetricsRuleTraceFilterSpanSpanCount {
		return &v
	}).(TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanSpanCount) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanSpanCount) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanSpanCount)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput) ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutput() TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput) ToTraceMetricsRuleTraceFilterSpanSpanCountPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput) Elem() TraceMetricsRuleTraceFilterSpanSpanCountOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanSpanCount) TraceMetricsRuleTraceFilterSpanSpanCount {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterSpanSpanCount
		return ret
	}).(TraceMetricsRuleTraceFilterSpanSpanCountOutput)
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanSpanCount) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanSpanCount) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

type TraceMetricsRuleTraceFilterSpanTag struct {
	Key          string                                          `pulumi:"key"`
	NumericValue *TraceMetricsRuleTraceFilterSpanTagNumericValue `pulumi:"numericValue"`
	Value        *TraceMetricsRuleTraceFilterSpanTagValue        `pulumi:"value"`
}

// TraceMetricsRuleTraceFilterSpanTagInput is an input type that accepts TraceMetricsRuleTraceFilterSpanTagArgs and TraceMetricsRuleTraceFilterSpanTagOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanTagInput` via:
//
//	TraceMetricsRuleTraceFilterSpanTagArgs{...}
type TraceMetricsRuleTraceFilterSpanTagInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanTagOutput() TraceMetricsRuleTraceFilterSpanTagOutput
	ToTraceMetricsRuleTraceFilterSpanTagOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanTagOutput
}

type TraceMetricsRuleTraceFilterSpanTagArgs struct {
	Key          pulumi.StringInput                                     `pulumi:"key"`
	NumericValue TraceMetricsRuleTraceFilterSpanTagNumericValuePtrInput `pulumi:"numericValue"`
	Value        TraceMetricsRuleTraceFilterSpanTagValuePtrInput        `pulumi:"value"`
}

func (TraceMetricsRuleTraceFilterSpanTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTag)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanTagArgs) ToTraceMetricsRuleTraceFilterSpanTagOutput() TraceMetricsRuleTraceFilterSpanTagOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanTagOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanTagArgs) ToTraceMetricsRuleTraceFilterSpanTagOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanTagOutput)
}

// TraceMetricsRuleTraceFilterSpanTagArrayInput is an input type that accepts TraceMetricsRuleTraceFilterSpanTagArray and TraceMetricsRuleTraceFilterSpanTagArrayOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanTagArrayInput` via:
//
//	TraceMetricsRuleTraceFilterSpanTagArray{ TraceMetricsRuleTraceFilterSpanTagArgs{...} }
type TraceMetricsRuleTraceFilterSpanTagArrayInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanTagArrayOutput() TraceMetricsRuleTraceFilterSpanTagArrayOutput
	ToTraceMetricsRuleTraceFilterSpanTagArrayOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanTagArrayOutput
}

type TraceMetricsRuleTraceFilterSpanTagArray []TraceMetricsRuleTraceFilterSpanTagInput

func (TraceMetricsRuleTraceFilterSpanTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceMetricsRuleTraceFilterSpanTag)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanTagArray) ToTraceMetricsRuleTraceFilterSpanTagArrayOutput() TraceMetricsRuleTraceFilterSpanTagArrayOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanTagArrayOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanTagArray) ToTraceMetricsRuleTraceFilterSpanTagArrayOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanTagArrayOutput)
}

type TraceMetricsRuleTraceFilterSpanTagOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTag)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanTagOutput) ToTraceMetricsRuleTraceFilterSpanTagOutput() TraceMetricsRuleTraceFilterSpanTagOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagOutput) ToTraceMetricsRuleTraceFilterSpanTagOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagOutput) NumericValue() TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanTag) *TraceMetricsRuleTraceFilterSpanTagNumericValue {
		return v.NumericValue
	}).(TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagOutput) Value() TraceMetricsRuleTraceFilterSpanTagValuePtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanTag) *TraceMetricsRuleTraceFilterSpanTagValue { return v.Value }).(TraceMetricsRuleTraceFilterSpanTagValuePtrOutput)
}

type TraceMetricsRuleTraceFilterSpanTagArrayOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceMetricsRuleTraceFilterSpanTag)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanTagArrayOutput) ToTraceMetricsRuleTraceFilterSpanTagArrayOutput() TraceMetricsRuleTraceFilterSpanTagArrayOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagArrayOutput) ToTraceMetricsRuleTraceFilterSpanTagArrayOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagArrayOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagArrayOutput) Index(i pulumi.IntInput) TraceMetricsRuleTraceFilterSpanTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TraceMetricsRuleTraceFilterSpanTag {
		return vs[0].([]TraceMetricsRuleTraceFilterSpanTag)[vs[1].(int)]
	}).(TraceMetricsRuleTraceFilterSpanTagOutput)
}

type TraceMetricsRuleTraceFilterSpanTagNumericValue struct {
	Comparison string  `pulumi:"comparison"`
	Value      float64 `pulumi:"value"`
}

// TraceMetricsRuleTraceFilterSpanTagNumericValueInput is an input type that accepts TraceMetricsRuleTraceFilterSpanTagNumericValueArgs and TraceMetricsRuleTraceFilterSpanTagNumericValueOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanTagNumericValueInput` via:
//
//	TraceMetricsRuleTraceFilterSpanTagNumericValueArgs{...}
type TraceMetricsRuleTraceFilterSpanTagNumericValueInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanTagNumericValueOutput() TraceMetricsRuleTraceFilterSpanTagNumericValueOutput
	ToTraceMetricsRuleTraceFilterSpanTagNumericValueOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanTagNumericValueOutput
}

type TraceMetricsRuleTraceFilterSpanTagNumericValueArgs struct {
	Comparison pulumi.StringInput  `pulumi:"comparison"`
	Value      pulumi.Float64Input `pulumi:"value"`
}

func (TraceMetricsRuleTraceFilterSpanTagNumericValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagNumericValue)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanTagNumericValueArgs) ToTraceMetricsRuleTraceFilterSpanTagNumericValueOutput() TraceMetricsRuleTraceFilterSpanTagNumericValueOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanTagNumericValueOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanTagNumericValueArgs) ToTraceMetricsRuleTraceFilterSpanTagNumericValueOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagNumericValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanTagNumericValueOutput)
}

func (i TraceMetricsRuleTraceFilterSpanTagNumericValueArgs) ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanTagNumericValueArgs) ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanTagNumericValueOutput).ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterSpanTagNumericValuePtrInput is an input type that accepts TraceMetricsRuleTraceFilterSpanTagNumericValueArgs, TraceMetricsRuleTraceFilterSpanTagNumericValuePtr and TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanTagNumericValuePtrInput` via:
//
//	        TraceMetricsRuleTraceFilterSpanTagNumericValueArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterSpanTagNumericValuePtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput
	ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput
}

type traceMetricsRuleTraceFilterSpanTagNumericValuePtrType TraceMetricsRuleTraceFilterSpanTagNumericValueArgs

func TraceMetricsRuleTraceFilterSpanTagNumericValuePtr(v *TraceMetricsRuleTraceFilterSpanTagNumericValueArgs) TraceMetricsRuleTraceFilterSpanTagNumericValuePtrInput {
	return (*traceMetricsRuleTraceFilterSpanTagNumericValuePtrType)(v)
}

func (*traceMetricsRuleTraceFilterSpanTagNumericValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanTagNumericValue)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterSpanTagNumericValuePtrType) ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterSpanTagNumericValuePtrType) ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput)
}

type TraceMetricsRuleTraceFilterSpanTagNumericValueOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanTagNumericValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagNumericValue)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValueOutput) ToTraceMetricsRuleTraceFilterSpanTagNumericValueOutput() TraceMetricsRuleTraceFilterSpanTagNumericValueOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValueOutput) ToTraceMetricsRuleTraceFilterSpanTagNumericValueOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagNumericValueOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValueOutput) ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput {
	return o.ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValueOutput) ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterSpanTagNumericValue) *TraceMetricsRuleTraceFilterSpanTagNumericValue {
		return &v
	}).(TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValueOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanTagNumericValue) string { return v.Comparison }).(pulumi.StringOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValueOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanTagNumericValue) float64 { return v.Value }).(pulumi.Float64Output)
}

type TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanTagNumericValue)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput) ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput) ToTraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput) Elem() TraceMetricsRuleTraceFilterSpanTagNumericValueOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanTagNumericValue) TraceMetricsRuleTraceFilterSpanTagNumericValue {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterSpanTagNumericValue
		return ret
	}).(TraceMetricsRuleTraceFilterSpanTagNumericValueOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanTagNumericValue) *string {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanTagNumericValue) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type TraceMetricsRuleTraceFilterSpanTagValue struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceMetricsRuleTraceFilterSpanTagValueInput is an input type that accepts TraceMetricsRuleTraceFilterSpanTagValueArgs and TraceMetricsRuleTraceFilterSpanTagValueOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanTagValueInput` via:
//
//	TraceMetricsRuleTraceFilterSpanTagValueArgs{...}
type TraceMetricsRuleTraceFilterSpanTagValueInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanTagValueOutput() TraceMetricsRuleTraceFilterSpanTagValueOutput
	ToTraceMetricsRuleTraceFilterSpanTagValueOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanTagValueOutput
}

type TraceMetricsRuleTraceFilterSpanTagValueArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceMetricsRuleTraceFilterSpanTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagValue)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterSpanTagValueArgs) ToTraceMetricsRuleTraceFilterSpanTagValueOutput() TraceMetricsRuleTraceFilterSpanTagValueOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanTagValueOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanTagValueArgs) ToTraceMetricsRuleTraceFilterSpanTagValueOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanTagValueOutput)
}

func (i TraceMetricsRuleTraceFilterSpanTagValueArgs) ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagValuePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterSpanTagValueArgs) ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanTagValueOutput).ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterSpanTagValuePtrInput is an input type that accepts TraceMetricsRuleTraceFilterSpanTagValueArgs, TraceMetricsRuleTraceFilterSpanTagValuePtr and TraceMetricsRuleTraceFilterSpanTagValuePtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterSpanTagValuePtrInput` via:
//
//	        TraceMetricsRuleTraceFilterSpanTagValueArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterSpanTagValuePtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagValuePtrOutput
	ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterSpanTagValuePtrOutput
}

type traceMetricsRuleTraceFilterSpanTagValuePtrType TraceMetricsRuleTraceFilterSpanTagValueArgs

func TraceMetricsRuleTraceFilterSpanTagValuePtr(v *TraceMetricsRuleTraceFilterSpanTagValueArgs) TraceMetricsRuleTraceFilterSpanTagValuePtrInput {
	return (*traceMetricsRuleTraceFilterSpanTagValuePtrType)(v)
}

func (*traceMetricsRuleTraceFilterSpanTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanTagValue)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterSpanTagValuePtrType) ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagValuePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterSpanTagValuePtrType) ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterSpanTagValuePtrOutput)
}

type TraceMetricsRuleTraceFilterSpanTagValueOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagValue)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanTagValueOutput) ToTraceMetricsRuleTraceFilterSpanTagValueOutput() TraceMetricsRuleTraceFilterSpanTagValueOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagValueOutput) ToTraceMetricsRuleTraceFilterSpanTagValueOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagValueOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagValueOutput) ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagValuePtrOutput {
	return o.ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterSpanTagValueOutput) ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterSpanTagValue) *TraceMetricsRuleTraceFilterSpanTagValue {
		return &v
	}).(TraceMetricsRuleTraceFilterSpanTagValuePtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagValueOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanTagValue) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterSpanTagValue) string { return v.Value }).(pulumi.StringOutput)
}

type TraceMetricsRuleTraceFilterSpanTagValuePtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterSpanTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterSpanTagValue)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterSpanTagValuePtrOutput) ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutput() TraceMetricsRuleTraceFilterSpanTagValuePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagValuePtrOutput) ToTraceMetricsRuleTraceFilterSpanTagValuePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterSpanTagValuePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterSpanTagValuePtrOutput) Elem() TraceMetricsRuleTraceFilterSpanTagValueOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanTagValue) TraceMetricsRuleTraceFilterSpanTagValue {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterSpanTagValue
		return ret
	}).(TraceMetricsRuleTraceFilterSpanTagValueOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagValuePtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceMetricsRuleTraceFilterSpanTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterSpanTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceMetricsRuleTraceFilterTrace struct {
	Duration *TraceMetricsRuleTraceFilterTraceDuration `pulumi:"duration"`
	Error    *TraceMetricsRuleTraceFilterTraceError    `pulumi:"error"`
}

// TraceMetricsRuleTraceFilterTraceInput is an input type that accepts TraceMetricsRuleTraceFilterTraceArgs and TraceMetricsRuleTraceFilterTraceOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterTraceInput` via:
//
//	TraceMetricsRuleTraceFilterTraceArgs{...}
type TraceMetricsRuleTraceFilterTraceInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterTraceOutput() TraceMetricsRuleTraceFilterTraceOutput
	ToTraceMetricsRuleTraceFilterTraceOutputWithContext(context.Context) TraceMetricsRuleTraceFilterTraceOutput
}

type TraceMetricsRuleTraceFilterTraceArgs struct {
	Duration TraceMetricsRuleTraceFilterTraceDurationPtrInput `pulumi:"duration"`
	Error    TraceMetricsRuleTraceFilterTraceErrorPtrInput    `pulumi:"error"`
}

func (TraceMetricsRuleTraceFilterTraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterTrace)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterTraceArgs) ToTraceMetricsRuleTraceFilterTraceOutput() TraceMetricsRuleTraceFilterTraceOutput {
	return i.ToTraceMetricsRuleTraceFilterTraceOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterTraceArgs) ToTraceMetricsRuleTraceFilterTraceOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterTraceOutput)
}

func (i TraceMetricsRuleTraceFilterTraceArgs) ToTraceMetricsRuleTraceFilterTracePtrOutput() TraceMetricsRuleTraceFilterTracePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterTracePtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterTraceArgs) ToTraceMetricsRuleTraceFilterTracePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterTraceOutput).ToTraceMetricsRuleTraceFilterTracePtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterTracePtrInput is an input type that accepts TraceMetricsRuleTraceFilterTraceArgs, TraceMetricsRuleTraceFilterTracePtr and TraceMetricsRuleTraceFilterTracePtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterTracePtrInput` via:
//
//	        TraceMetricsRuleTraceFilterTraceArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterTracePtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterTracePtrOutput() TraceMetricsRuleTraceFilterTracePtrOutput
	ToTraceMetricsRuleTraceFilterTracePtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterTracePtrOutput
}

type traceMetricsRuleTraceFilterTracePtrType TraceMetricsRuleTraceFilterTraceArgs

func TraceMetricsRuleTraceFilterTracePtr(v *TraceMetricsRuleTraceFilterTraceArgs) TraceMetricsRuleTraceFilterTracePtrInput {
	return (*traceMetricsRuleTraceFilterTracePtrType)(v)
}

func (*traceMetricsRuleTraceFilterTracePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterTrace)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterTracePtrType) ToTraceMetricsRuleTraceFilterTracePtrOutput() TraceMetricsRuleTraceFilterTracePtrOutput {
	return i.ToTraceMetricsRuleTraceFilterTracePtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterTracePtrType) ToTraceMetricsRuleTraceFilterTracePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterTracePtrOutput)
}

type TraceMetricsRuleTraceFilterTraceOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterTraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterTrace)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterTraceOutput) ToTraceMetricsRuleTraceFilterTraceOutput() TraceMetricsRuleTraceFilterTraceOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceOutput) ToTraceMetricsRuleTraceFilterTraceOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceOutput) ToTraceMetricsRuleTraceFilterTracePtrOutput() TraceMetricsRuleTraceFilterTracePtrOutput {
	return o.ToTraceMetricsRuleTraceFilterTracePtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterTraceOutput) ToTraceMetricsRuleTraceFilterTracePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTracePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterTrace) *TraceMetricsRuleTraceFilterTrace {
		return &v
	}).(TraceMetricsRuleTraceFilterTracePtrOutput)
}

func (o TraceMetricsRuleTraceFilterTraceOutput) Duration() TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterTrace) *TraceMetricsRuleTraceFilterTraceDuration { return v.Duration }).(TraceMetricsRuleTraceFilterTraceDurationPtrOutput)
}

func (o TraceMetricsRuleTraceFilterTraceOutput) Error() TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterTrace) *TraceMetricsRuleTraceFilterTraceError { return v.Error }).(TraceMetricsRuleTraceFilterTraceErrorPtrOutput)
}

type TraceMetricsRuleTraceFilterTracePtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterTracePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterTrace)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterTracePtrOutput) ToTraceMetricsRuleTraceFilterTracePtrOutput() TraceMetricsRuleTraceFilterTracePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTracePtrOutput) ToTraceMetricsRuleTraceFilterTracePtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTracePtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTracePtrOutput) Elem() TraceMetricsRuleTraceFilterTraceOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterTrace) TraceMetricsRuleTraceFilterTrace {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterTrace
		return ret
	}).(TraceMetricsRuleTraceFilterTraceOutput)
}

func (o TraceMetricsRuleTraceFilterTracePtrOutput) Duration() TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterTrace) *TraceMetricsRuleTraceFilterTraceDuration {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(TraceMetricsRuleTraceFilterTraceDurationPtrOutput)
}

func (o TraceMetricsRuleTraceFilterTracePtrOutput) Error() TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterTrace) *TraceMetricsRuleTraceFilterTraceError {
		if v == nil {
			return nil
		}
		return v.Error
	}).(TraceMetricsRuleTraceFilterTraceErrorPtrOutput)
}

type TraceMetricsRuleTraceFilterTraceDuration struct {
	MaxSeconds *float64 `pulumi:"maxSeconds"`
	MinSeconds *float64 `pulumi:"minSeconds"`
}

// TraceMetricsRuleTraceFilterTraceDurationInput is an input type that accepts TraceMetricsRuleTraceFilterTraceDurationArgs and TraceMetricsRuleTraceFilterTraceDurationOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterTraceDurationInput` via:
//
//	TraceMetricsRuleTraceFilterTraceDurationArgs{...}
type TraceMetricsRuleTraceFilterTraceDurationInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterTraceDurationOutput() TraceMetricsRuleTraceFilterTraceDurationOutput
	ToTraceMetricsRuleTraceFilterTraceDurationOutputWithContext(context.Context) TraceMetricsRuleTraceFilterTraceDurationOutput
}

type TraceMetricsRuleTraceFilterTraceDurationArgs struct {
	MaxSeconds pulumi.Float64PtrInput `pulumi:"maxSeconds"`
	MinSeconds pulumi.Float64PtrInput `pulumi:"minSeconds"`
}

func (TraceMetricsRuleTraceFilterTraceDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterTraceDuration)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterTraceDurationArgs) ToTraceMetricsRuleTraceFilterTraceDurationOutput() TraceMetricsRuleTraceFilterTraceDurationOutput {
	return i.ToTraceMetricsRuleTraceFilterTraceDurationOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterTraceDurationArgs) ToTraceMetricsRuleTraceFilterTraceDurationOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterTraceDurationOutput)
}

func (i TraceMetricsRuleTraceFilterTraceDurationArgs) ToTraceMetricsRuleTraceFilterTraceDurationPtrOutput() TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterTraceDurationPtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterTraceDurationArgs) ToTraceMetricsRuleTraceFilterTraceDurationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterTraceDurationOutput).ToTraceMetricsRuleTraceFilterTraceDurationPtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterTraceDurationPtrInput is an input type that accepts TraceMetricsRuleTraceFilterTraceDurationArgs, TraceMetricsRuleTraceFilterTraceDurationPtr and TraceMetricsRuleTraceFilterTraceDurationPtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterTraceDurationPtrInput` via:
//
//	        TraceMetricsRuleTraceFilterTraceDurationArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterTraceDurationPtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterTraceDurationPtrOutput() TraceMetricsRuleTraceFilterTraceDurationPtrOutput
	ToTraceMetricsRuleTraceFilterTraceDurationPtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterTraceDurationPtrOutput
}

type traceMetricsRuleTraceFilterTraceDurationPtrType TraceMetricsRuleTraceFilterTraceDurationArgs

func TraceMetricsRuleTraceFilterTraceDurationPtr(v *TraceMetricsRuleTraceFilterTraceDurationArgs) TraceMetricsRuleTraceFilterTraceDurationPtrInput {
	return (*traceMetricsRuleTraceFilterTraceDurationPtrType)(v)
}

func (*traceMetricsRuleTraceFilterTraceDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterTraceDuration)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterTraceDurationPtrType) ToTraceMetricsRuleTraceFilterTraceDurationPtrOutput() TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterTraceDurationPtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterTraceDurationPtrType) ToTraceMetricsRuleTraceFilterTraceDurationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterTraceDurationPtrOutput)
}

type TraceMetricsRuleTraceFilterTraceDurationOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterTraceDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterTraceDuration)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterTraceDurationOutput) ToTraceMetricsRuleTraceFilterTraceDurationOutput() TraceMetricsRuleTraceFilterTraceDurationOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceDurationOutput) ToTraceMetricsRuleTraceFilterTraceDurationOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceDurationOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceDurationOutput) ToTraceMetricsRuleTraceFilterTraceDurationPtrOutput() TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return o.ToTraceMetricsRuleTraceFilterTraceDurationPtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterTraceDurationOutput) ToTraceMetricsRuleTraceFilterTraceDurationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterTraceDuration) *TraceMetricsRuleTraceFilterTraceDuration {
		return &v
	}).(TraceMetricsRuleTraceFilterTraceDurationPtrOutput)
}

func (o TraceMetricsRuleTraceFilterTraceDurationOutput) MaxSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterTraceDuration) *float64 { return v.MaxSeconds }).(pulumi.Float64PtrOutput)
}

func (o TraceMetricsRuleTraceFilterTraceDurationOutput) MinSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterTraceDuration) *float64 { return v.MinSeconds }).(pulumi.Float64PtrOutput)
}

type TraceMetricsRuleTraceFilterTraceDurationPtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterTraceDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterTraceDuration)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterTraceDurationPtrOutput) ToTraceMetricsRuleTraceFilterTraceDurationPtrOutput() TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceDurationPtrOutput) ToTraceMetricsRuleTraceFilterTraceDurationPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceDurationPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceDurationPtrOutput) Elem() TraceMetricsRuleTraceFilterTraceDurationOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterTraceDuration) TraceMetricsRuleTraceFilterTraceDuration {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterTraceDuration
		return ret
	}).(TraceMetricsRuleTraceFilterTraceDurationOutput)
}

func (o TraceMetricsRuleTraceFilterTraceDurationPtrOutput) MaxSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterTraceDuration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxSeconds
	}).(pulumi.Float64PtrOutput)
}

func (o TraceMetricsRuleTraceFilterTraceDurationPtrOutput) MinSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterTraceDuration) *float64 {
		if v == nil {
			return nil
		}
		return v.MinSeconds
	}).(pulumi.Float64PtrOutput)
}

type TraceMetricsRuleTraceFilterTraceError struct {
	Value bool `pulumi:"value"`
}

// TraceMetricsRuleTraceFilterTraceErrorInput is an input type that accepts TraceMetricsRuleTraceFilterTraceErrorArgs and TraceMetricsRuleTraceFilterTraceErrorOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterTraceErrorInput` via:
//
//	TraceMetricsRuleTraceFilterTraceErrorArgs{...}
type TraceMetricsRuleTraceFilterTraceErrorInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterTraceErrorOutput() TraceMetricsRuleTraceFilterTraceErrorOutput
	ToTraceMetricsRuleTraceFilterTraceErrorOutputWithContext(context.Context) TraceMetricsRuleTraceFilterTraceErrorOutput
}

type TraceMetricsRuleTraceFilterTraceErrorArgs struct {
	Value pulumi.BoolInput `pulumi:"value"`
}

func (TraceMetricsRuleTraceFilterTraceErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterTraceError)(nil)).Elem()
}

func (i TraceMetricsRuleTraceFilterTraceErrorArgs) ToTraceMetricsRuleTraceFilterTraceErrorOutput() TraceMetricsRuleTraceFilterTraceErrorOutput {
	return i.ToTraceMetricsRuleTraceFilterTraceErrorOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterTraceErrorArgs) ToTraceMetricsRuleTraceFilterTraceErrorOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterTraceErrorOutput)
}

func (i TraceMetricsRuleTraceFilterTraceErrorArgs) ToTraceMetricsRuleTraceFilterTraceErrorPtrOutput() TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterTraceErrorPtrOutputWithContext(context.Background())
}

func (i TraceMetricsRuleTraceFilterTraceErrorArgs) ToTraceMetricsRuleTraceFilterTraceErrorPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterTraceErrorOutput).ToTraceMetricsRuleTraceFilterTraceErrorPtrOutputWithContext(ctx)
}

// TraceMetricsRuleTraceFilterTraceErrorPtrInput is an input type that accepts TraceMetricsRuleTraceFilterTraceErrorArgs, TraceMetricsRuleTraceFilterTraceErrorPtr and TraceMetricsRuleTraceFilterTraceErrorPtrOutput values.
// You can construct a concrete instance of `TraceMetricsRuleTraceFilterTraceErrorPtrInput` via:
//
//	        TraceMetricsRuleTraceFilterTraceErrorArgs{...}
//
//	or:
//
//	        nil
type TraceMetricsRuleTraceFilterTraceErrorPtrInput interface {
	pulumi.Input

	ToTraceMetricsRuleTraceFilterTraceErrorPtrOutput() TraceMetricsRuleTraceFilterTraceErrorPtrOutput
	ToTraceMetricsRuleTraceFilterTraceErrorPtrOutputWithContext(context.Context) TraceMetricsRuleTraceFilterTraceErrorPtrOutput
}

type traceMetricsRuleTraceFilterTraceErrorPtrType TraceMetricsRuleTraceFilterTraceErrorArgs

func TraceMetricsRuleTraceFilterTraceErrorPtr(v *TraceMetricsRuleTraceFilterTraceErrorArgs) TraceMetricsRuleTraceFilterTraceErrorPtrInput {
	return (*traceMetricsRuleTraceFilterTraceErrorPtrType)(v)
}

func (*traceMetricsRuleTraceFilterTraceErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterTraceError)(nil)).Elem()
}

func (i *traceMetricsRuleTraceFilterTraceErrorPtrType) ToTraceMetricsRuleTraceFilterTraceErrorPtrOutput() TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return i.ToTraceMetricsRuleTraceFilterTraceErrorPtrOutputWithContext(context.Background())
}

func (i *traceMetricsRuleTraceFilterTraceErrorPtrType) ToTraceMetricsRuleTraceFilterTraceErrorPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceMetricsRuleTraceFilterTraceErrorPtrOutput)
}

type TraceMetricsRuleTraceFilterTraceErrorOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterTraceErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceMetricsRuleTraceFilterTraceError)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterTraceErrorOutput) ToTraceMetricsRuleTraceFilterTraceErrorOutput() TraceMetricsRuleTraceFilterTraceErrorOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceErrorOutput) ToTraceMetricsRuleTraceFilterTraceErrorOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceErrorOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceErrorOutput) ToTraceMetricsRuleTraceFilterTraceErrorPtrOutput() TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return o.ToTraceMetricsRuleTraceFilterTraceErrorPtrOutputWithContext(context.Background())
}

func (o TraceMetricsRuleTraceFilterTraceErrorOutput) ToTraceMetricsRuleTraceFilterTraceErrorPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceMetricsRuleTraceFilterTraceError) *TraceMetricsRuleTraceFilterTraceError {
		return &v
	}).(TraceMetricsRuleTraceFilterTraceErrorPtrOutput)
}

func (o TraceMetricsRuleTraceFilterTraceErrorOutput) Value() pulumi.BoolOutput {
	return o.ApplyT(func(v TraceMetricsRuleTraceFilterTraceError) bool { return v.Value }).(pulumi.BoolOutput)
}

type TraceMetricsRuleTraceFilterTraceErrorPtrOutput struct{ *pulumi.OutputState }

func (TraceMetricsRuleTraceFilterTraceErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceMetricsRuleTraceFilterTraceError)(nil)).Elem()
}

func (o TraceMetricsRuleTraceFilterTraceErrorPtrOutput) ToTraceMetricsRuleTraceFilterTraceErrorPtrOutput() TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceErrorPtrOutput) ToTraceMetricsRuleTraceFilterTraceErrorPtrOutputWithContext(ctx context.Context) TraceMetricsRuleTraceFilterTraceErrorPtrOutput {
	return o
}

func (o TraceMetricsRuleTraceFilterTraceErrorPtrOutput) Elem() TraceMetricsRuleTraceFilterTraceErrorOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterTraceError) TraceMetricsRuleTraceFilterTraceError {
		if v != nil {
			return *v
		}
		var ret TraceMetricsRuleTraceFilterTraceError
		return ret
	}).(TraceMetricsRuleTraceFilterTraceErrorOutput)
}

func (o TraceMetricsRuleTraceFilterTraceErrorPtrOutput) Value() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TraceMetricsRuleTraceFilterTraceError) *bool {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.BoolPtrOutput)
}

type TraceTailSamplingRulesDefaultSampleRate struct {
	Enabled    *bool   `pulumi:"enabled"`
	SampleRate float64 `pulumi:"sampleRate"`
}

// TraceTailSamplingRulesDefaultSampleRateInput is an input type that accepts TraceTailSamplingRulesDefaultSampleRateArgs and TraceTailSamplingRulesDefaultSampleRateOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesDefaultSampleRateInput` via:
//
//	TraceTailSamplingRulesDefaultSampleRateArgs{...}
type TraceTailSamplingRulesDefaultSampleRateInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesDefaultSampleRateOutput() TraceTailSamplingRulesDefaultSampleRateOutput
	ToTraceTailSamplingRulesDefaultSampleRateOutputWithContext(context.Context) TraceTailSamplingRulesDefaultSampleRateOutput
}

type TraceTailSamplingRulesDefaultSampleRateArgs struct {
	Enabled    pulumi.BoolPtrInput `pulumi:"enabled"`
	SampleRate pulumi.Float64Input `pulumi:"sampleRate"`
}

func (TraceTailSamplingRulesDefaultSampleRateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesDefaultSampleRate)(nil)).Elem()
}

func (i TraceTailSamplingRulesDefaultSampleRateArgs) ToTraceTailSamplingRulesDefaultSampleRateOutput() TraceTailSamplingRulesDefaultSampleRateOutput {
	return i.ToTraceTailSamplingRulesDefaultSampleRateOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesDefaultSampleRateArgs) ToTraceTailSamplingRulesDefaultSampleRateOutputWithContext(ctx context.Context) TraceTailSamplingRulesDefaultSampleRateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesDefaultSampleRateOutput)
}

func (i TraceTailSamplingRulesDefaultSampleRateArgs) ToTraceTailSamplingRulesDefaultSampleRatePtrOutput() TraceTailSamplingRulesDefaultSampleRatePtrOutput {
	return i.ToTraceTailSamplingRulesDefaultSampleRatePtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesDefaultSampleRateArgs) ToTraceTailSamplingRulesDefaultSampleRatePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesDefaultSampleRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesDefaultSampleRateOutput).ToTraceTailSamplingRulesDefaultSampleRatePtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesDefaultSampleRatePtrInput is an input type that accepts TraceTailSamplingRulesDefaultSampleRateArgs, TraceTailSamplingRulesDefaultSampleRatePtr and TraceTailSamplingRulesDefaultSampleRatePtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesDefaultSampleRatePtrInput` via:
//
//	        TraceTailSamplingRulesDefaultSampleRateArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesDefaultSampleRatePtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesDefaultSampleRatePtrOutput() TraceTailSamplingRulesDefaultSampleRatePtrOutput
	ToTraceTailSamplingRulesDefaultSampleRatePtrOutputWithContext(context.Context) TraceTailSamplingRulesDefaultSampleRatePtrOutput
}

type traceTailSamplingRulesDefaultSampleRatePtrType TraceTailSamplingRulesDefaultSampleRateArgs

func TraceTailSamplingRulesDefaultSampleRatePtr(v *TraceTailSamplingRulesDefaultSampleRateArgs) TraceTailSamplingRulesDefaultSampleRatePtrInput {
	return (*traceTailSamplingRulesDefaultSampleRatePtrType)(v)
}

func (*traceTailSamplingRulesDefaultSampleRatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesDefaultSampleRate)(nil)).Elem()
}

func (i *traceTailSamplingRulesDefaultSampleRatePtrType) ToTraceTailSamplingRulesDefaultSampleRatePtrOutput() TraceTailSamplingRulesDefaultSampleRatePtrOutput {
	return i.ToTraceTailSamplingRulesDefaultSampleRatePtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesDefaultSampleRatePtrType) ToTraceTailSamplingRulesDefaultSampleRatePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesDefaultSampleRatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesDefaultSampleRatePtrOutput)
}

type TraceTailSamplingRulesDefaultSampleRateOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesDefaultSampleRateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesDefaultSampleRate)(nil)).Elem()
}

func (o TraceTailSamplingRulesDefaultSampleRateOutput) ToTraceTailSamplingRulesDefaultSampleRateOutput() TraceTailSamplingRulesDefaultSampleRateOutput {
	return o
}

func (o TraceTailSamplingRulesDefaultSampleRateOutput) ToTraceTailSamplingRulesDefaultSampleRateOutputWithContext(ctx context.Context) TraceTailSamplingRulesDefaultSampleRateOutput {
	return o
}

func (o TraceTailSamplingRulesDefaultSampleRateOutput) ToTraceTailSamplingRulesDefaultSampleRatePtrOutput() TraceTailSamplingRulesDefaultSampleRatePtrOutput {
	return o.ToTraceTailSamplingRulesDefaultSampleRatePtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesDefaultSampleRateOutput) ToTraceTailSamplingRulesDefaultSampleRatePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesDefaultSampleRatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesDefaultSampleRate) *TraceTailSamplingRulesDefaultSampleRate {
		return &v
	}).(TraceTailSamplingRulesDefaultSampleRatePtrOutput)
}

func (o TraceTailSamplingRulesDefaultSampleRateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesDefaultSampleRate) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o TraceTailSamplingRulesDefaultSampleRateOutput) SampleRate() pulumi.Float64Output {
	return o.ApplyT(func(v TraceTailSamplingRulesDefaultSampleRate) float64 { return v.SampleRate }).(pulumi.Float64Output)
}

type TraceTailSamplingRulesDefaultSampleRatePtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesDefaultSampleRatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesDefaultSampleRate)(nil)).Elem()
}

func (o TraceTailSamplingRulesDefaultSampleRatePtrOutput) ToTraceTailSamplingRulesDefaultSampleRatePtrOutput() TraceTailSamplingRulesDefaultSampleRatePtrOutput {
	return o
}

func (o TraceTailSamplingRulesDefaultSampleRatePtrOutput) ToTraceTailSamplingRulesDefaultSampleRatePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesDefaultSampleRatePtrOutput {
	return o
}

func (o TraceTailSamplingRulesDefaultSampleRatePtrOutput) Elem() TraceTailSamplingRulesDefaultSampleRateOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesDefaultSampleRate) TraceTailSamplingRulesDefaultSampleRate {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesDefaultSampleRate
		return ret
	}).(TraceTailSamplingRulesDefaultSampleRateOutput)
}

func (o TraceTailSamplingRulesDefaultSampleRatePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesDefaultSampleRate) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o TraceTailSamplingRulesDefaultSampleRatePtrOutput) SampleRate() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesDefaultSampleRate) *float64 {
		if v == nil {
			return nil
		}
		return &v.SampleRate
	}).(pulumi.Float64PtrOutput)
}

type TraceTailSamplingRulesRule struct {
	Filter     TraceTailSamplingRulesRuleFilter `pulumi:"filter"`
	Name       *string                          `pulumi:"name"`
	SampleRate float64                          `pulumi:"sampleRate"`
	SystemName *string                          `pulumi:"systemName"`
}

// TraceTailSamplingRulesRuleInput is an input type that accepts TraceTailSamplingRulesRuleArgs and TraceTailSamplingRulesRuleOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleInput` via:
//
//	TraceTailSamplingRulesRuleArgs{...}
type TraceTailSamplingRulesRuleInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleOutput() TraceTailSamplingRulesRuleOutput
	ToTraceTailSamplingRulesRuleOutputWithContext(context.Context) TraceTailSamplingRulesRuleOutput
}

type TraceTailSamplingRulesRuleArgs struct {
	Filter     TraceTailSamplingRulesRuleFilterInput `pulumi:"filter"`
	Name       pulumi.StringPtrInput                 `pulumi:"name"`
	SampleRate pulumi.Float64Input                   `pulumi:"sampleRate"`
	SystemName pulumi.StringPtrInput                 `pulumi:"systemName"`
}

func (TraceTailSamplingRulesRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRule)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleArgs) ToTraceTailSamplingRulesRuleOutput() TraceTailSamplingRulesRuleOutput {
	return i.ToTraceTailSamplingRulesRuleOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleArgs) ToTraceTailSamplingRulesRuleOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleOutput)
}

// TraceTailSamplingRulesRuleArrayInput is an input type that accepts TraceTailSamplingRulesRuleArray and TraceTailSamplingRulesRuleArrayOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleArrayInput` via:
//
//	TraceTailSamplingRulesRuleArray{ TraceTailSamplingRulesRuleArgs{...} }
type TraceTailSamplingRulesRuleArrayInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleArrayOutput() TraceTailSamplingRulesRuleArrayOutput
	ToTraceTailSamplingRulesRuleArrayOutputWithContext(context.Context) TraceTailSamplingRulesRuleArrayOutput
}

type TraceTailSamplingRulesRuleArray []TraceTailSamplingRulesRuleInput

func (TraceTailSamplingRulesRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceTailSamplingRulesRule)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleArray) ToTraceTailSamplingRulesRuleArrayOutput() TraceTailSamplingRulesRuleArrayOutput {
	return i.ToTraceTailSamplingRulesRuleArrayOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleArray) ToTraceTailSamplingRulesRuleArrayOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleArrayOutput)
}

type TraceTailSamplingRulesRuleOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRule)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleOutput) ToTraceTailSamplingRulesRuleOutput() TraceTailSamplingRulesRuleOutput {
	return o
}

func (o TraceTailSamplingRulesRuleOutput) ToTraceTailSamplingRulesRuleOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleOutput {
	return o
}

func (o TraceTailSamplingRulesRuleOutput) Filter() TraceTailSamplingRulesRuleFilterOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRule) TraceTailSamplingRulesRuleFilter { return v.Filter }).(TraceTailSamplingRulesRuleFilterOutput)
}

func (o TraceTailSamplingRulesRuleOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRule) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleOutput) SampleRate() pulumi.Float64Output {
	return o.ApplyT(func(v TraceTailSamplingRulesRule) float64 { return v.SampleRate }).(pulumi.Float64Output)
}

func (o TraceTailSamplingRulesRuleOutput) SystemName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRule) *string { return v.SystemName }).(pulumi.StringPtrOutput)
}

type TraceTailSamplingRulesRuleArrayOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceTailSamplingRulesRule)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleArrayOutput) ToTraceTailSamplingRulesRuleArrayOutput() TraceTailSamplingRulesRuleArrayOutput {
	return o
}

func (o TraceTailSamplingRulesRuleArrayOutput) ToTraceTailSamplingRulesRuleArrayOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleArrayOutput {
	return o
}

func (o TraceTailSamplingRulesRuleArrayOutput) Index(i pulumi.IntInput) TraceTailSamplingRulesRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TraceTailSamplingRulesRule {
		return vs[0].([]TraceTailSamplingRulesRule)[vs[1].(int)]
	}).(TraceTailSamplingRulesRuleOutput)
}

type TraceTailSamplingRulesRuleFilter struct {
	Spans []TraceTailSamplingRulesRuleFilterSpan `pulumi:"spans"`
	Trace *TraceTailSamplingRulesRuleFilterTrace `pulumi:"trace"`
}

// TraceTailSamplingRulesRuleFilterInput is an input type that accepts TraceTailSamplingRulesRuleFilterArgs and TraceTailSamplingRulesRuleFilterOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterInput` via:
//
//	TraceTailSamplingRulesRuleFilterArgs{...}
type TraceTailSamplingRulesRuleFilterInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterOutput() TraceTailSamplingRulesRuleFilterOutput
	ToTraceTailSamplingRulesRuleFilterOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterOutput
}

type TraceTailSamplingRulesRuleFilterArgs struct {
	Spans TraceTailSamplingRulesRuleFilterSpanArrayInput `pulumi:"spans"`
	Trace TraceTailSamplingRulesRuleFilterTracePtrInput  `pulumi:"trace"`
}

func (TraceTailSamplingRulesRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilter)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterArgs) ToTraceTailSamplingRulesRuleFilterOutput() TraceTailSamplingRulesRuleFilterOutput {
	return i.ToTraceTailSamplingRulesRuleFilterOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterArgs) ToTraceTailSamplingRulesRuleFilterOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterOutput)
}

type TraceTailSamplingRulesRuleFilterOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilter)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterOutput) ToTraceTailSamplingRulesRuleFilterOutput() TraceTailSamplingRulesRuleFilterOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterOutput) ToTraceTailSamplingRulesRuleFilterOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterOutput) Spans() TraceTailSamplingRulesRuleFilterSpanArrayOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilter) []TraceTailSamplingRulesRuleFilterSpan { return v.Spans }).(TraceTailSamplingRulesRuleFilterSpanArrayOutput)
}

func (o TraceTailSamplingRulesRuleFilterOutput) Trace() TraceTailSamplingRulesRuleFilterTracePtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilter) *TraceTailSamplingRulesRuleFilterTrace { return v.Trace }).(TraceTailSamplingRulesRuleFilterTracePtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpan struct {
	Duration        *TraceTailSamplingRulesRuleFilterSpanDuration        `pulumi:"duration"`
	Error           *TraceTailSamplingRulesRuleFilterSpanError           `pulumi:"error"`
	MatchType       *string                                              `pulumi:"matchType"`
	Operation       *TraceTailSamplingRulesRuleFilterSpanOperation       `pulumi:"operation"`
	ParentOperation *TraceTailSamplingRulesRuleFilterSpanParentOperation `pulumi:"parentOperation"`
	ParentService   *TraceTailSamplingRulesRuleFilterSpanParentService   `pulumi:"parentService"`
	Service         *TraceTailSamplingRulesRuleFilterSpanService         `pulumi:"service"`
	SpanCount       *TraceTailSamplingRulesRuleFilterSpanSpanCount       `pulumi:"spanCount"`
	Tags            []TraceTailSamplingRulesRuleFilterSpanTag            `pulumi:"tags"`
}

// TraceTailSamplingRulesRuleFilterSpanInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanArgs and TraceTailSamplingRulesRuleFilterSpanOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanArgs{...}
type TraceTailSamplingRulesRuleFilterSpanInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanOutput() TraceTailSamplingRulesRuleFilterSpanOutput
	ToTraceTailSamplingRulesRuleFilterSpanOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanOutput
}

type TraceTailSamplingRulesRuleFilterSpanArgs struct {
	Duration        TraceTailSamplingRulesRuleFilterSpanDurationPtrInput        `pulumi:"duration"`
	Error           TraceTailSamplingRulesRuleFilterSpanErrorPtrInput           `pulumi:"error"`
	MatchType       pulumi.StringPtrInput                                       `pulumi:"matchType"`
	Operation       TraceTailSamplingRulesRuleFilterSpanOperationPtrInput       `pulumi:"operation"`
	ParentOperation TraceTailSamplingRulesRuleFilterSpanParentOperationPtrInput `pulumi:"parentOperation"`
	ParentService   TraceTailSamplingRulesRuleFilterSpanParentServicePtrInput   `pulumi:"parentService"`
	Service         TraceTailSamplingRulesRuleFilterSpanServicePtrInput         `pulumi:"service"`
	SpanCount       TraceTailSamplingRulesRuleFilterSpanSpanCountPtrInput       `pulumi:"spanCount"`
	Tags            TraceTailSamplingRulesRuleFilterSpanTagArrayInput           `pulumi:"tags"`
}

func (TraceTailSamplingRulesRuleFilterSpanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpan)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanArgs) ToTraceTailSamplingRulesRuleFilterSpanOutput() TraceTailSamplingRulesRuleFilterSpanOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanArgs) ToTraceTailSamplingRulesRuleFilterSpanOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanOutput)
}

// TraceTailSamplingRulesRuleFilterSpanArrayInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanArray and TraceTailSamplingRulesRuleFilterSpanArrayOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanArrayInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanArray{ TraceTailSamplingRulesRuleFilterSpanArgs{...} }
type TraceTailSamplingRulesRuleFilterSpanArrayInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanArrayOutput() TraceTailSamplingRulesRuleFilterSpanArrayOutput
	ToTraceTailSamplingRulesRuleFilterSpanArrayOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanArrayOutput
}

type TraceTailSamplingRulesRuleFilterSpanArray []TraceTailSamplingRulesRuleFilterSpanInput

func (TraceTailSamplingRulesRuleFilterSpanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceTailSamplingRulesRuleFilterSpan)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanArray) ToTraceTailSamplingRulesRuleFilterSpanArrayOutput() TraceTailSamplingRulesRuleFilterSpanArrayOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanArrayOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanArray) ToTraceTailSamplingRulesRuleFilterSpanArrayOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanArrayOutput)
}

type TraceTailSamplingRulesRuleFilterSpanOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpan)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) ToTraceTailSamplingRulesRuleFilterSpanOutput() TraceTailSamplingRulesRuleFilterSpanOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) ToTraceTailSamplingRulesRuleFilterSpanOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) Duration() TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpan) *TraceTailSamplingRulesRuleFilterSpanDuration {
		return v.Duration
	}).(TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) Error() TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpan) *TraceTailSamplingRulesRuleFilterSpanError {
		return v.Error
	}).(TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) MatchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpan) *string { return v.MatchType }).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) Operation() TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpan) *TraceTailSamplingRulesRuleFilterSpanOperation {
		return v.Operation
	}).(TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) ParentOperation() TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpan) *TraceTailSamplingRulesRuleFilterSpanParentOperation {
		return v.ParentOperation
	}).(TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) ParentService() TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpan) *TraceTailSamplingRulesRuleFilterSpanParentService {
		return v.ParentService
	}).(TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) Service() TraceTailSamplingRulesRuleFilterSpanServicePtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpan) *TraceTailSamplingRulesRuleFilterSpanService {
		return v.Service
	}).(TraceTailSamplingRulesRuleFilterSpanServicePtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) SpanCount() TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpan) *TraceTailSamplingRulesRuleFilterSpanSpanCount {
		return v.SpanCount
	}).(TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOutput) Tags() TraceTailSamplingRulesRuleFilterSpanTagArrayOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpan) []TraceTailSamplingRulesRuleFilterSpanTag { return v.Tags }).(TraceTailSamplingRulesRuleFilterSpanTagArrayOutput)
}

type TraceTailSamplingRulesRuleFilterSpanArrayOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceTailSamplingRulesRuleFilterSpan)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanArrayOutput) ToTraceTailSamplingRulesRuleFilterSpanArrayOutput() TraceTailSamplingRulesRuleFilterSpanArrayOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanArrayOutput) ToTraceTailSamplingRulesRuleFilterSpanArrayOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanArrayOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanArrayOutput) Index(i pulumi.IntInput) TraceTailSamplingRulesRuleFilterSpanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TraceTailSamplingRulesRuleFilterSpan {
		return vs[0].([]TraceTailSamplingRulesRuleFilterSpan)[vs[1].(int)]
	}).(TraceTailSamplingRulesRuleFilterSpanOutput)
}

type TraceTailSamplingRulesRuleFilterSpanDuration struct {
	MaxSecs *float64 `pulumi:"maxSecs"`
	MinSecs *float64 `pulumi:"minSecs"`
}

// TraceTailSamplingRulesRuleFilterSpanDurationInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanDurationArgs and TraceTailSamplingRulesRuleFilterSpanDurationOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanDurationInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanDurationArgs{...}
type TraceTailSamplingRulesRuleFilterSpanDurationInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanDurationOutput() TraceTailSamplingRulesRuleFilterSpanDurationOutput
	ToTraceTailSamplingRulesRuleFilterSpanDurationOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanDurationOutput
}

type TraceTailSamplingRulesRuleFilterSpanDurationArgs struct {
	MaxSecs pulumi.Float64PtrInput `pulumi:"maxSecs"`
	MinSecs pulumi.Float64PtrInput `pulumi:"minSecs"`
}

func (TraceTailSamplingRulesRuleFilterSpanDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanDuration)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanDurationArgs) ToTraceTailSamplingRulesRuleFilterSpanDurationOutput() TraceTailSamplingRulesRuleFilterSpanDurationOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanDurationOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanDurationArgs) ToTraceTailSamplingRulesRuleFilterSpanDurationOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanDurationOutput)
}

func (i TraceTailSamplingRulesRuleFilterSpanDurationArgs) ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutput() TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanDurationArgs) ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanDurationOutput).ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterSpanDurationPtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanDurationArgs, TraceTailSamplingRulesRuleFilterSpanDurationPtr and TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanDurationPtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterSpanDurationArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterSpanDurationPtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutput() TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput
	ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput
}

type traceTailSamplingRulesRuleFilterSpanDurationPtrType TraceTailSamplingRulesRuleFilterSpanDurationArgs

func TraceTailSamplingRulesRuleFilterSpanDurationPtr(v *TraceTailSamplingRulesRuleFilterSpanDurationArgs) TraceTailSamplingRulesRuleFilterSpanDurationPtrInput {
	return (*traceTailSamplingRulesRuleFilterSpanDurationPtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterSpanDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanDuration)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterSpanDurationPtrType) ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutput() TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterSpanDurationPtrType) ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanDurationOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanDuration)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationOutput) ToTraceTailSamplingRulesRuleFilterSpanDurationOutput() TraceTailSamplingRulesRuleFilterSpanDurationOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationOutput) ToTraceTailSamplingRulesRuleFilterSpanDurationOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanDurationOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationOutput) ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutput() TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationOutput) ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterSpanDuration) *TraceTailSamplingRulesRuleFilterSpanDuration {
		return &v
	}).(TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationOutput) MaxSecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanDuration) *float64 { return v.MaxSecs }).(pulumi.Float64PtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationOutput) MinSecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanDuration) *float64 { return v.MinSecs }).(pulumi.Float64PtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanDuration)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutput() TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanDurationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput) Elem() TraceTailSamplingRulesRuleFilterSpanDurationOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanDuration) TraceTailSamplingRulesRuleFilterSpanDuration {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterSpanDuration
		return ret
	}).(TraceTailSamplingRulesRuleFilterSpanDurationOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput) MaxSecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanDuration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxSecs
	}).(pulumi.Float64PtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput) MinSecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanDuration) *float64 {
		if v == nil {
			return nil
		}
		return v.MinSecs
	}).(pulumi.Float64PtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanError struct {
	Value bool `pulumi:"value"`
}

// TraceTailSamplingRulesRuleFilterSpanErrorInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanErrorArgs and TraceTailSamplingRulesRuleFilterSpanErrorOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanErrorInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanErrorArgs{...}
type TraceTailSamplingRulesRuleFilterSpanErrorInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanErrorOutput() TraceTailSamplingRulesRuleFilterSpanErrorOutput
	ToTraceTailSamplingRulesRuleFilterSpanErrorOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanErrorOutput
}

type TraceTailSamplingRulesRuleFilterSpanErrorArgs struct {
	Value pulumi.BoolInput `pulumi:"value"`
}

func (TraceTailSamplingRulesRuleFilterSpanErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanError)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanErrorArgs) ToTraceTailSamplingRulesRuleFilterSpanErrorOutput() TraceTailSamplingRulesRuleFilterSpanErrorOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanErrorOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanErrorArgs) ToTraceTailSamplingRulesRuleFilterSpanErrorOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanErrorOutput)
}

func (i TraceTailSamplingRulesRuleFilterSpanErrorArgs) ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutput() TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanErrorArgs) ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanErrorOutput).ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterSpanErrorPtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanErrorArgs, TraceTailSamplingRulesRuleFilterSpanErrorPtr and TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanErrorPtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterSpanErrorArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterSpanErrorPtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutput() TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput
	ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput
}

type traceTailSamplingRulesRuleFilterSpanErrorPtrType TraceTailSamplingRulesRuleFilterSpanErrorArgs

func TraceTailSamplingRulesRuleFilterSpanErrorPtr(v *TraceTailSamplingRulesRuleFilterSpanErrorArgs) TraceTailSamplingRulesRuleFilterSpanErrorPtrInput {
	return (*traceTailSamplingRulesRuleFilterSpanErrorPtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterSpanErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanError)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterSpanErrorPtrType) ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutput() TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterSpanErrorPtrType) ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanErrorOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanError)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanErrorOutput) ToTraceTailSamplingRulesRuleFilterSpanErrorOutput() TraceTailSamplingRulesRuleFilterSpanErrorOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanErrorOutput) ToTraceTailSamplingRulesRuleFilterSpanErrorOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanErrorOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanErrorOutput) ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutput() TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterSpanErrorOutput) ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterSpanError) *TraceTailSamplingRulesRuleFilterSpanError {
		return &v
	}).(TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanErrorOutput) Value() pulumi.BoolOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanError) bool { return v.Value }).(pulumi.BoolOutput)
}

type TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanError)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutput() TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanErrorPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput) Elem() TraceTailSamplingRulesRuleFilterSpanErrorOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanError) TraceTailSamplingRulesRuleFilterSpanError {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterSpanError
		return ret
	}).(TraceTailSamplingRulesRuleFilterSpanErrorOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput) Value() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanError) *bool {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.BoolPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanOperation struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceTailSamplingRulesRuleFilterSpanOperationInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanOperationArgs and TraceTailSamplingRulesRuleFilterSpanOperationOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanOperationInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanOperationArgs{...}
type TraceTailSamplingRulesRuleFilterSpanOperationInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanOperationOutput() TraceTailSamplingRulesRuleFilterSpanOperationOutput
	ToTraceTailSamplingRulesRuleFilterSpanOperationOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanOperationOutput
}

type TraceTailSamplingRulesRuleFilterSpanOperationArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceTailSamplingRulesRuleFilterSpanOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanOperation)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanOperationArgs) ToTraceTailSamplingRulesRuleFilterSpanOperationOutput() TraceTailSamplingRulesRuleFilterSpanOperationOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanOperationOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanOperationArgs) ToTraceTailSamplingRulesRuleFilterSpanOperationOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanOperationOutput)
}

func (i TraceTailSamplingRulesRuleFilterSpanOperationArgs) ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanOperationArgs) ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanOperationOutput).ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterSpanOperationPtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanOperationArgs, TraceTailSamplingRulesRuleFilterSpanOperationPtr and TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanOperationPtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterSpanOperationArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterSpanOperationPtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput
	ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput
}

type traceTailSamplingRulesRuleFilterSpanOperationPtrType TraceTailSamplingRulesRuleFilterSpanOperationArgs

func TraceTailSamplingRulesRuleFilterSpanOperationPtr(v *TraceTailSamplingRulesRuleFilterSpanOperationArgs) TraceTailSamplingRulesRuleFilterSpanOperationPtrInput {
	return (*traceTailSamplingRulesRuleFilterSpanOperationPtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterSpanOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanOperation)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterSpanOperationPtrType) ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterSpanOperationPtrType) ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanOperationOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanOperation)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationOutput) ToTraceTailSamplingRulesRuleFilterSpanOperationOutput() TraceTailSamplingRulesRuleFilterSpanOperationOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationOutput) ToTraceTailSamplingRulesRuleFilterSpanOperationOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanOperationOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationOutput) ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationOutput) ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterSpanOperation) *TraceTailSamplingRulesRuleFilterSpanOperation {
		return &v
	}).(TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanOperation) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanOperation) string { return v.Value }).(pulumi.StringOutput)
}

type TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanOperation)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanOperationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput) Elem() TraceTailSamplingRulesRuleFilterSpanOperationOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanOperation) TraceTailSamplingRulesRuleFilterSpanOperation {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterSpanOperation
		return ret
	}).(TraceTailSamplingRulesRuleFilterSpanOperationOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanOperation) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanOperation) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanParentOperation struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceTailSamplingRulesRuleFilterSpanParentOperationInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanParentOperationArgs and TraceTailSamplingRulesRuleFilterSpanParentOperationOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanParentOperationInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanParentOperationArgs{...}
type TraceTailSamplingRulesRuleFilterSpanParentOperationInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanParentOperationOutput() TraceTailSamplingRulesRuleFilterSpanParentOperationOutput
	ToTraceTailSamplingRulesRuleFilterSpanParentOperationOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanParentOperationOutput
}

type TraceTailSamplingRulesRuleFilterSpanParentOperationArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceTailSamplingRulesRuleFilterSpanParentOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanParentOperation)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanParentOperationArgs) ToTraceTailSamplingRulesRuleFilterSpanParentOperationOutput() TraceTailSamplingRulesRuleFilterSpanParentOperationOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanParentOperationOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanParentOperationArgs) ToTraceTailSamplingRulesRuleFilterSpanParentOperationOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanParentOperationOutput)
}

func (i TraceTailSamplingRulesRuleFilterSpanParentOperationArgs) ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanParentOperationArgs) ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanParentOperationOutput).ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterSpanParentOperationPtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanParentOperationArgs, TraceTailSamplingRulesRuleFilterSpanParentOperationPtr and TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanParentOperationPtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterSpanParentOperationArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterSpanParentOperationPtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput
	ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput
}

type traceTailSamplingRulesRuleFilterSpanParentOperationPtrType TraceTailSamplingRulesRuleFilterSpanParentOperationArgs

func TraceTailSamplingRulesRuleFilterSpanParentOperationPtr(v *TraceTailSamplingRulesRuleFilterSpanParentOperationArgs) TraceTailSamplingRulesRuleFilterSpanParentOperationPtrInput {
	return (*traceTailSamplingRulesRuleFilterSpanParentOperationPtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterSpanParentOperationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanParentOperation)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterSpanParentOperationPtrType) ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterSpanParentOperationPtrType) ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanParentOperationOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanParentOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanParentOperation)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationOutput) ToTraceTailSamplingRulesRuleFilterSpanParentOperationOutput() TraceTailSamplingRulesRuleFilterSpanParentOperationOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationOutput) ToTraceTailSamplingRulesRuleFilterSpanParentOperationOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentOperationOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationOutput) ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationOutput) ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterSpanParentOperation) *TraceTailSamplingRulesRuleFilterSpanParentOperation {
		return &v
	}).(TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanParentOperation) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanParentOperation) string { return v.Value }).(pulumi.StringOutput)
}

type TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanParentOperation)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput() TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput) Elem() TraceTailSamplingRulesRuleFilterSpanParentOperationOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanParentOperation) TraceTailSamplingRulesRuleFilterSpanParentOperation {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterSpanParentOperation
		return ret
	}).(TraceTailSamplingRulesRuleFilterSpanParentOperationOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanParentOperation) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanParentOperation) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanParentService struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceTailSamplingRulesRuleFilterSpanParentServiceInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanParentServiceArgs and TraceTailSamplingRulesRuleFilterSpanParentServiceOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanParentServiceInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanParentServiceArgs{...}
type TraceTailSamplingRulesRuleFilterSpanParentServiceInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanParentServiceOutput() TraceTailSamplingRulesRuleFilterSpanParentServiceOutput
	ToTraceTailSamplingRulesRuleFilterSpanParentServiceOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanParentServiceOutput
}

type TraceTailSamplingRulesRuleFilterSpanParentServiceArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceTailSamplingRulesRuleFilterSpanParentServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanParentService)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanParentServiceArgs) ToTraceTailSamplingRulesRuleFilterSpanParentServiceOutput() TraceTailSamplingRulesRuleFilterSpanParentServiceOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanParentServiceOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanParentServiceArgs) ToTraceTailSamplingRulesRuleFilterSpanParentServiceOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanParentServiceOutput)
}

func (i TraceTailSamplingRulesRuleFilterSpanParentServiceArgs) ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanParentServiceArgs) ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanParentServiceOutput).ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterSpanParentServicePtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanParentServiceArgs, TraceTailSamplingRulesRuleFilterSpanParentServicePtr and TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanParentServicePtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterSpanParentServiceArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterSpanParentServicePtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput
	ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput
}

type traceTailSamplingRulesRuleFilterSpanParentServicePtrType TraceTailSamplingRulesRuleFilterSpanParentServiceArgs

func TraceTailSamplingRulesRuleFilterSpanParentServicePtr(v *TraceTailSamplingRulesRuleFilterSpanParentServiceArgs) TraceTailSamplingRulesRuleFilterSpanParentServicePtrInput {
	return (*traceTailSamplingRulesRuleFilterSpanParentServicePtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterSpanParentServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanParentService)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterSpanParentServicePtrType) ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterSpanParentServicePtrType) ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanParentServiceOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanParentServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanParentService)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServiceOutput) ToTraceTailSamplingRulesRuleFilterSpanParentServiceOutput() TraceTailSamplingRulesRuleFilterSpanParentServiceOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServiceOutput) ToTraceTailSamplingRulesRuleFilterSpanParentServiceOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentServiceOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServiceOutput) ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServiceOutput) ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterSpanParentService) *TraceTailSamplingRulesRuleFilterSpanParentService {
		return &v
	}).(TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServiceOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanParentService) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServiceOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanParentService) string { return v.Value }).(pulumi.StringOutput)
}

type TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanParentService)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput) ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput) ToTraceTailSamplingRulesRuleFilterSpanParentServicePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput) Elem() TraceTailSamplingRulesRuleFilterSpanParentServiceOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanParentService) TraceTailSamplingRulesRuleFilterSpanParentService {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterSpanParentService
		return ret
	}).(TraceTailSamplingRulesRuleFilterSpanParentServiceOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanParentService) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanParentService) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanService struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceTailSamplingRulesRuleFilterSpanServiceInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanServiceArgs and TraceTailSamplingRulesRuleFilterSpanServiceOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanServiceInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanServiceArgs{...}
type TraceTailSamplingRulesRuleFilterSpanServiceInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanServiceOutput() TraceTailSamplingRulesRuleFilterSpanServiceOutput
	ToTraceTailSamplingRulesRuleFilterSpanServiceOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanServiceOutput
}

type TraceTailSamplingRulesRuleFilterSpanServiceArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceTailSamplingRulesRuleFilterSpanServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanService)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanServiceArgs) ToTraceTailSamplingRulesRuleFilterSpanServiceOutput() TraceTailSamplingRulesRuleFilterSpanServiceOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanServiceOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanServiceArgs) ToTraceTailSamplingRulesRuleFilterSpanServiceOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanServiceOutput)
}

func (i TraceTailSamplingRulesRuleFilterSpanServiceArgs) ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanServicePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanServiceArgs) ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanServiceOutput).ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterSpanServicePtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanServiceArgs, TraceTailSamplingRulesRuleFilterSpanServicePtr and TraceTailSamplingRulesRuleFilterSpanServicePtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanServicePtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterSpanServiceArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterSpanServicePtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanServicePtrOutput
	ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanServicePtrOutput
}

type traceTailSamplingRulesRuleFilterSpanServicePtrType TraceTailSamplingRulesRuleFilterSpanServiceArgs

func TraceTailSamplingRulesRuleFilterSpanServicePtr(v *TraceTailSamplingRulesRuleFilterSpanServiceArgs) TraceTailSamplingRulesRuleFilterSpanServicePtrInput {
	return (*traceTailSamplingRulesRuleFilterSpanServicePtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterSpanServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanService)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterSpanServicePtrType) ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanServicePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterSpanServicePtrType) ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanServicePtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanServiceOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanService)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanServiceOutput) ToTraceTailSamplingRulesRuleFilterSpanServiceOutput() TraceTailSamplingRulesRuleFilterSpanServiceOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanServiceOutput) ToTraceTailSamplingRulesRuleFilterSpanServiceOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanServiceOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanServiceOutput) ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanServicePtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterSpanServiceOutput) ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanServicePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterSpanService) *TraceTailSamplingRulesRuleFilterSpanService {
		return &v
	}).(TraceTailSamplingRulesRuleFilterSpanServicePtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanServiceOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanService) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanServiceOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanService) string { return v.Value }).(pulumi.StringOutput)
}

type TraceTailSamplingRulesRuleFilterSpanServicePtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanService)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanServicePtrOutput) ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutput() TraceTailSamplingRulesRuleFilterSpanServicePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanServicePtrOutput) ToTraceTailSamplingRulesRuleFilterSpanServicePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanServicePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanServicePtrOutput) Elem() TraceTailSamplingRulesRuleFilterSpanServiceOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanService) TraceTailSamplingRulesRuleFilterSpanService {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterSpanService
		return ret
	}).(TraceTailSamplingRulesRuleFilterSpanServiceOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanServicePtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanService) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanServicePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanService) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanSpanCount struct {
	Max *int `pulumi:"max"`
	Min *int `pulumi:"min"`
}

// TraceTailSamplingRulesRuleFilterSpanSpanCountInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanSpanCountArgs and TraceTailSamplingRulesRuleFilterSpanSpanCountOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanSpanCountInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanSpanCountArgs{...}
type TraceTailSamplingRulesRuleFilterSpanSpanCountInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanSpanCountOutput() TraceTailSamplingRulesRuleFilterSpanSpanCountOutput
	ToTraceTailSamplingRulesRuleFilterSpanSpanCountOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanSpanCountOutput
}

type TraceTailSamplingRulesRuleFilterSpanSpanCountArgs struct {
	Max pulumi.IntPtrInput `pulumi:"max"`
	Min pulumi.IntPtrInput `pulumi:"min"`
}

func (TraceTailSamplingRulesRuleFilterSpanSpanCountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanSpanCount)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanSpanCountArgs) ToTraceTailSamplingRulesRuleFilterSpanSpanCountOutput() TraceTailSamplingRulesRuleFilterSpanSpanCountOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanSpanCountOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanSpanCountArgs) ToTraceTailSamplingRulesRuleFilterSpanSpanCountOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanSpanCountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanSpanCountOutput)
}

func (i TraceTailSamplingRulesRuleFilterSpanSpanCountArgs) ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput() TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanSpanCountArgs) ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanSpanCountOutput).ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterSpanSpanCountPtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanSpanCountArgs, TraceTailSamplingRulesRuleFilterSpanSpanCountPtr and TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanSpanCountPtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterSpanSpanCountArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterSpanSpanCountPtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput() TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput
	ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput
}

type traceTailSamplingRulesRuleFilterSpanSpanCountPtrType TraceTailSamplingRulesRuleFilterSpanSpanCountArgs

func TraceTailSamplingRulesRuleFilterSpanSpanCountPtr(v *TraceTailSamplingRulesRuleFilterSpanSpanCountArgs) TraceTailSamplingRulesRuleFilterSpanSpanCountPtrInput {
	return (*traceTailSamplingRulesRuleFilterSpanSpanCountPtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterSpanSpanCountPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanSpanCount)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterSpanSpanCountPtrType) ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput() TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterSpanSpanCountPtrType) ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanSpanCountOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanSpanCountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanSpanCount)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountOutput) ToTraceTailSamplingRulesRuleFilterSpanSpanCountOutput() TraceTailSamplingRulesRuleFilterSpanSpanCountOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountOutput) ToTraceTailSamplingRulesRuleFilterSpanSpanCountOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanSpanCountOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountOutput) ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput() TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountOutput) ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterSpanSpanCount) *TraceTailSamplingRulesRuleFilterSpanSpanCount {
		return &v
	}).(TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanSpanCount) *int { return v.Max }).(pulumi.IntPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanSpanCount) *int { return v.Min }).(pulumi.IntPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanSpanCount)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput() TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput) ToTraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput) Elem() TraceTailSamplingRulesRuleFilterSpanSpanCountOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanSpanCount) TraceTailSamplingRulesRuleFilterSpanSpanCount {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterSpanSpanCount
		return ret
	}).(TraceTailSamplingRulesRuleFilterSpanSpanCountOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanSpanCount) *int {
		if v == nil {
			return nil
		}
		return v.Max
	}).(pulumi.IntPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanSpanCount) *int {
		if v == nil {
			return nil
		}
		return v.Min
	}).(pulumi.IntPtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanTag struct {
	Key          *string                                              `pulumi:"key"`
	NumericValue *TraceTailSamplingRulesRuleFilterSpanTagNumericValue `pulumi:"numericValue"`
	Value        *TraceTailSamplingRulesRuleFilterSpanTagValue        `pulumi:"value"`
}

// TraceTailSamplingRulesRuleFilterSpanTagInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanTagArgs and TraceTailSamplingRulesRuleFilterSpanTagOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanTagInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanTagArgs{...}
type TraceTailSamplingRulesRuleFilterSpanTagInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanTagOutput() TraceTailSamplingRulesRuleFilterSpanTagOutput
	ToTraceTailSamplingRulesRuleFilterSpanTagOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanTagOutput
}

type TraceTailSamplingRulesRuleFilterSpanTagArgs struct {
	Key          pulumi.StringPtrInput                                       `pulumi:"key"`
	NumericValue TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrInput `pulumi:"numericValue"`
	Value        TraceTailSamplingRulesRuleFilterSpanTagValuePtrInput        `pulumi:"value"`
}

func (TraceTailSamplingRulesRuleFilterSpanTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTag)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanTagArgs) ToTraceTailSamplingRulesRuleFilterSpanTagOutput() TraceTailSamplingRulesRuleFilterSpanTagOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanTagOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanTagArgs) ToTraceTailSamplingRulesRuleFilterSpanTagOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanTagOutput)
}

// TraceTailSamplingRulesRuleFilterSpanTagArrayInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanTagArray and TraceTailSamplingRulesRuleFilterSpanTagArrayOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanTagArrayInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanTagArray{ TraceTailSamplingRulesRuleFilterSpanTagArgs{...} }
type TraceTailSamplingRulesRuleFilterSpanTagArrayInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanTagArrayOutput() TraceTailSamplingRulesRuleFilterSpanTagArrayOutput
	ToTraceTailSamplingRulesRuleFilterSpanTagArrayOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanTagArrayOutput
}

type TraceTailSamplingRulesRuleFilterSpanTagArray []TraceTailSamplingRulesRuleFilterSpanTagInput

func (TraceTailSamplingRulesRuleFilterSpanTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceTailSamplingRulesRuleFilterSpanTag)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanTagArray) ToTraceTailSamplingRulesRuleFilterSpanTagArrayOutput() TraceTailSamplingRulesRuleFilterSpanTagArrayOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanTagArrayOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanTagArray) ToTraceTailSamplingRulesRuleFilterSpanTagArrayOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanTagArrayOutput)
}

type TraceTailSamplingRulesRuleFilterSpanTagOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTag)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanTagOutput) ToTraceTailSamplingRulesRuleFilterSpanTagOutput() TraceTailSamplingRulesRuleFilterSpanTagOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagOutput) ToTraceTailSamplingRulesRuleFilterSpanTagOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagOutput) NumericValue() TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanTag) *TraceTailSamplingRulesRuleFilterSpanTagNumericValue {
		return v.NumericValue
	}).(TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagOutput) Value() TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanTag) *TraceTailSamplingRulesRuleFilterSpanTagValue {
		return v.Value
	}).(TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanTagArrayOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TraceTailSamplingRulesRuleFilterSpanTag)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanTagArrayOutput) ToTraceTailSamplingRulesRuleFilterSpanTagArrayOutput() TraceTailSamplingRulesRuleFilterSpanTagArrayOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagArrayOutput) ToTraceTailSamplingRulesRuleFilterSpanTagArrayOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagArrayOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagArrayOutput) Index(i pulumi.IntInput) TraceTailSamplingRulesRuleFilterSpanTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TraceTailSamplingRulesRuleFilterSpanTag {
		return vs[0].([]TraceTailSamplingRulesRuleFilterSpanTag)[vs[1].(int)]
	}).(TraceTailSamplingRulesRuleFilterSpanTagOutput)
}

type TraceTailSamplingRulesRuleFilterSpanTagNumericValue struct {
	Comparison string  `pulumi:"comparison"`
	Value      float64 `pulumi:"value"`
}

// TraceTailSamplingRulesRuleFilterSpanTagNumericValueInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs and TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanTagNumericValueInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs{...}
type TraceTailSamplingRulesRuleFilterSpanTagNumericValueInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput() TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput
	ToTraceTailSamplingRulesRuleFilterSpanTagNumericValueOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput
}

type TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs struct {
	Comparison pulumi.StringInput  `pulumi:"comparison"`
	Value      pulumi.Float64Input `pulumi:"value"`
}

func (TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagNumericValue)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput() TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanTagNumericValueOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValueOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput)
}

func (i TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput).ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs, TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtr and TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput
	ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput
}

type traceTailSamplingRulesRuleFilterSpanTagNumericValuePtrType TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs

func TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtr(v *TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs) TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrInput {
	return (*traceTailSamplingRulesRuleFilterSpanTagNumericValuePtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterSpanTagNumericValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanTagNumericValue)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterSpanTagNumericValuePtrType) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterSpanTagNumericValuePtrType) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagNumericValue)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput() TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValueOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterSpanTagNumericValue) *TraceTailSamplingRulesRuleFilterSpanTagNumericValue {
		return &v
	}).(TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanTagNumericValue) string { return v.Comparison }).(pulumi.StringOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanTagNumericValue) float64 { return v.Value }).(pulumi.Float64Output)
}

type TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanTagNumericValue)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput) ToTraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput) Elem() TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanTagNumericValue) TraceTailSamplingRulesRuleFilterSpanTagNumericValue {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterSpanTagNumericValue
		return ret
	}).(TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanTagNumericValue) *string {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanTagNumericValue) *float64 {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.Float64PtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanTagValue struct {
	Match *string `pulumi:"match"`
	Value string  `pulumi:"value"`
}

// TraceTailSamplingRulesRuleFilterSpanTagValueInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanTagValueArgs and TraceTailSamplingRulesRuleFilterSpanTagValueOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanTagValueInput` via:
//
//	TraceTailSamplingRulesRuleFilterSpanTagValueArgs{...}
type TraceTailSamplingRulesRuleFilterSpanTagValueInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanTagValueOutput() TraceTailSamplingRulesRuleFilterSpanTagValueOutput
	ToTraceTailSamplingRulesRuleFilterSpanTagValueOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanTagValueOutput
}

type TraceTailSamplingRulesRuleFilterSpanTagValueArgs struct {
	Match pulumi.StringPtrInput `pulumi:"match"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (TraceTailSamplingRulesRuleFilterSpanTagValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagValue)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterSpanTagValueArgs) ToTraceTailSamplingRulesRuleFilterSpanTagValueOutput() TraceTailSamplingRulesRuleFilterSpanTagValueOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanTagValueOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanTagValueArgs) ToTraceTailSamplingRulesRuleFilterSpanTagValueOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanTagValueOutput)
}

func (i TraceTailSamplingRulesRuleFilterSpanTagValueArgs) ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterSpanTagValueArgs) ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanTagValueOutput).ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterSpanTagValuePtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterSpanTagValueArgs, TraceTailSamplingRulesRuleFilterSpanTagValuePtr and TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterSpanTagValuePtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterSpanTagValueArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterSpanTagValuePtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput
	ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput
}

type traceTailSamplingRulesRuleFilterSpanTagValuePtrType TraceTailSamplingRulesRuleFilterSpanTagValueArgs

func TraceTailSamplingRulesRuleFilterSpanTagValuePtr(v *TraceTailSamplingRulesRuleFilterSpanTagValueArgs) TraceTailSamplingRulesRuleFilterSpanTagValuePtrInput {
	return (*traceTailSamplingRulesRuleFilterSpanTagValuePtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterSpanTagValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanTagValue)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterSpanTagValuePtrType) ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterSpanTagValuePtrType) ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput)
}

type TraceTailSamplingRulesRuleFilterSpanTagValueOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanTagValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagValue)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValueOutput) ToTraceTailSamplingRulesRuleFilterSpanTagValueOutput() TraceTailSamplingRulesRuleFilterSpanTagValueOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValueOutput) ToTraceTailSamplingRulesRuleFilterSpanTagValueOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagValueOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValueOutput) ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValueOutput) ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterSpanTagValue) *TraceTailSamplingRulesRuleFilterSpanTagValue {
		return &v
	}).(TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValueOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanTagValue) *string { return v.Match }).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValueOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterSpanTagValue) string { return v.Value }).(pulumi.StringOutput)
}

type TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterSpanTagValue)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput) ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput() TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput) ToTraceTailSamplingRulesRuleFilterSpanTagValuePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput) Elem() TraceTailSamplingRulesRuleFilterSpanTagValueOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanTagValue) TraceTailSamplingRulesRuleFilterSpanTagValue {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterSpanTagValue
		return ret
	}).(TraceTailSamplingRulesRuleFilterSpanTagValueOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput) Match() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanTagValue) *string {
		if v == nil {
			return nil
		}
		return v.Match
	}).(pulumi.StringPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterSpanTagValue) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type TraceTailSamplingRulesRuleFilterTrace struct {
	Duration *TraceTailSamplingRulesRuleFilterTraceDuration `pulumi:"duration"`
	Error    *TraceTailSamplingRulesRuleFilterTraceError    `pulumi:"error"`
}

// TraceTailSamplingRulesRuleFilterTraceInput is an input type that accepts TraceTailSamplingRulesRuleFilterTraceArgs and TraceTailSamplingRulesRuleFilterTraceOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterTraceInput` via:
//
//	TraceTailSamplingRulesRuleFilterTraceArgs{...}
type TraceTailSamplingRulesRuleFilterTraceInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterTraceOutput() TraceTailSamplingRulesRuleFilterTraceOutput
	ToTraceTailSamplingRulesRuleFilterTraceOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterTraceOutput
}

type TraceTailSamplingRulesRuleFilterTraceArgs struct {
	Duration TraceTailSamplingRulesRuleFilterTraceDurationPtrInput `pulumi:"duration"`
	Error    TraceTailSamplingRulesRuleFilterTraceErrorPtrInput    `pulumi:"error"`
}

func (TraceTailSamplingRulesRuleFilterTraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTrace)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterTraceArgs) ToTraceTailSamplingRulesRuleFilterTraceOutput() TraceTailSamplingRulesRuleFilterTraceOutput {
	return i.ToTraceTailSamplingRulesRuleFilterTraceOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterTraceArgs) ToTraceTailSamplingRulesRuleFilterTraceOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterTraceOutput)
}

func (i TraceTailSamplingRulesRuleFilterTraceArgs) ToTraceTailSamplingRulesRuleFilterTracePtrOutput() TraceTailSamplingRulesRuleFilterTracePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterTracePtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterTraceArgs) ToTraceTailSamplingRulesRuleFilterTracePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterTraceOutput).ToTraceTailSamplingRulesRuleFilterTracePtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterTracePtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterTraceArgs, TraceTailSamplingRulesRuleFilterTracePtr and TraceTailSamplingRulesRuleFilterTracePtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterTracePtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterTraceArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterTracePtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterTracePtrOutput() TraceTailSamplingRulesRuleFilterTracePtrOutput
	ToTraceTailSamplingRulesRuleFilterTracePtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterTracePtrOutput
}

type traceTailSamplingRulesRuleFilterTracePtrType TraceTailSamplingRulesRuleFilterTraceArgs

func TraceTailSamplingRulesRuleFilterTracePtr(v *TraceTailSamplingRulesRuleFilterTraceArgs) TraceTailSamplingRulesRuleFilterTracePtrInput {
	return (*traceTailSamplingRulesRuleFilterTracePtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterTracePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterTrace)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterTracePtrType) ToTraceTailSamplingRulesRuleFilterTracePtrOutput() TraceTailSamplingRulesRuleFilterTracePtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterTracePtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterTracePtrType) ToTraceTailSamplingRulesRuleFilterTracePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTracePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterTracePtrOutput)
}

type TraceTailSamplingRulesRuleFilterTraceOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterTraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTrace)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterTraceOutput) ToTraceTailSamplingRulesRuleFilterTraceOutput() TraceTailSamplingRulesRuleFilterTraceOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceOutput) ToTraceTailSamplingRulesRuleFilterTraceOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceOutput) ToTraceTailSamplingRulesRuleFilterTracePtrOutput() TraceTailSamplingRulesRuleFilterTracePtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterTracePtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterTraceOutput) ToTraceTailSamplingRulesRuleFilterTracePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTracePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterTrace) *TraceTailSamplingRulesRuleFilterTrace {
		return &v
	}).(TraceTailSamplingRulesRuleFilterTracePtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterTraceOutput) Duration() TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterTrace) *TraceTailSamplingRulesRuleFilterTraceDuration {
		return v.Duration
	}).(TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterTraceOutput) Error() TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterTrace) *TraceTailSamplingRulesRuleFilterTraceError {
		return v.Error
	}).(TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput)
}

type TraceTailSamplingRulesRuleFilterTracePtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterTracePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterTrace)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterTracePtrOutput) ToTraceTailSamplingRulesRuleFilterTracePtrOutput() TraceTailSamplingRulesRuleFilterTracePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTracePtrOutput) ToTraceTailSamplingRulesRuleFilterTracePtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTracePtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTracePtrOutput) Elem() TraceTailSamplingRulesRuleFilterTraceOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterTrace) TraceTailSamplingRulesRuleFilterTrace {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterTrace
		return ret
	}).(TraceTailSamplingRulesRuleFilterTraceOutput)
}

func (o TraceTailSamplingRulesRuleFilterTracePtrOutput) Duration() TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterTrace) *TraceTailSamplingRulesRuleFilterTraceDuration {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterTracePtrOutput) Error() TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterTrace) *TraceTailSamplingRulesRuleFilterTraceError {
		if v == nil {
			return nil
		}
		return v.Error
	}).(TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput)
}

type TraceTailSamplingRulesRuleFilterTraceDuration struct {
	MaxSecs *float64 `pulumi:"maxSecs"`
	MinSecs *float64 `pulumi:"minSecs"`
}

// TraceTailSamplingRulesRuleFilterTraceDurationInput is an input type that accepts TraceTailSamplingRulesRuleFilterTraceDurationArgs and TraceTailSamplingRulesRuleFilterTraceDurationOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterTraceDurationInput` via:
//
//	TraceTailSamplingRulesRuleFilterTraceDurationArgs{...}
type TraceTailSamplingRulesRuleFilterTraceDurationInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterTraceDurationOutput() TraceTailSamplingRulesRuleFilterTraceDurationOutput
	ToTraceTailSamplingRulesRuleFilterTraceDurationOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterTraceDurationOutput
}

type TraceTailSamplingRulesRuleFilterTraceDurationArgs struct {
	MaxSecs pulumi.Float64PtrInput `pulumi:"maxSecs"`
	MinSecs pulumi.Float64PtrInput `pulumi:"minSecs"`
}

func (TraceTailSamplingRulesRuleFilterTraceDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTraceDuration)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterTraceDurationArgs) ToTraceTailSamplingRulesRuleFilterTraceDurationOutput() TraceTailSamplingRulesRuleFilterTraceDurationOutput {
	return i.ToTraceTailSamplingRulesRuleFilterTraceDurationOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterTraceDurationArgs) ToTraceTailSamplingRulesRuleFilterTraceDurationOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterTraceDurationOutput)
}

func (i TraceTailSamplingRulesRuleFilterTraceDurationArgs) ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutput() TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterTraceDurationArgs) ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterTraceDurationOutput).ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterTraceDurationPtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterTraceDurationArgs, TraceTailSamplingRulesRuleFilterTraceDurationPtr and TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterTraceDurationPtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterTraceDurationArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterTraceDurationPtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutput() TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput
	ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput
}

type traceTailSamplingRulesRuleFilterTraceDurationPtrType TraceTailSamplingRulesRuleFilterTraceDurationArgs

func TraceTailSamplingRulesRuleFilterTraceDurationPtr(v *TraceTailSamplingRulesRuleFilterTraceDurationArgs) TraceTailSamplingRulesRuleFilterTraceDurationPtrInput {
	return (*traceTailSamplingRulesRuleFilterTraceDurationPtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterTraceDurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterTraceDuration)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterTraceDurationPtrType) ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutput() TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterTraceDurationPtrType) ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput)
}

type TraceTailSamplingRulesRuleFilterTraceDurationOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterTraceDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTraceDuration)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationOutput) ToTraceTailSamplingRulesRuleFilterTraceDurationOutput() TraceTailSamplingRulesRuleFilterTraceDurationOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationOutput) ToTraceTailSamplingRulesRuleFilterTraceDurationOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceDurationOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationOutput) ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutput() TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationOutput) ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterTraceDuration) *TraceTailSamplingRulesRuleFilterTraceDuration {
		return &v
	}).(TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationOutput) MaxSecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterTraceDuration) *float64 { return v.MaxSecs }).(pulumi.Float64PtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationOutput) MinSecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterTraceDuration) *float64 { return v.MinSecs }).(pulumi.Float64PtrOutput)
}

type TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterTraceDuration)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput) ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutput() TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput) ToTraceTailSamplingRulesRuleFilterTraceDurationPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput) Elem() TraceTailSamplingRulesRuleFilterTraceDurationOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterTraceDuration) TraceTailSamplingRulesRuleFilterTraceDuration {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterTraceDuration
		return ret
	}).(TraceTailSamplingRulesRuleFilterTraceDurationOutput)
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput) MaxSecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterTraceDuration) *float64 {
		if v == nil {
			return nil
		}
		return v.MaxSecs
	}).(pulumi.Float64PtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput) MinSecs() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterTraceDuration) *float64 {
		if v == nil {
			return nil
		}
		return v.MinSecs
	}).(pulumi.Float64PtrOutput)
}

type TraceTailSamplingRulesRuleFilterTraceError struct {
	Value bool `pulumi:"value"`
}

// TraceTailSamplingRulesRuleFilterTraceErrorInput is an input type that accepts TraceTailSamplingRulesRuleFilterTraceErrorArgs and TraceTailSamplingRulesRuleFilterTraceErrorOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterTraceErrorInput` via:
//
//	TraceTailSamplingRulesRuleFilterTraceErrorArgs{...}
type TraceTailSamplingRulesRuleFilterTraceErrorInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterTraceErrorOutput() TraceTailSamplingRulesRuleFilterTraceErrorOutput
	ToTraceTailSamplingRulesRuleFilterTraceErrorOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterTraceErrorOutput
}

type TraceTailSamplingRulesRuleFilterTraceErrorArgs struct {
	Value pulumi.BoolInput `pulumi:"value"`
}

func (TraceTailSamplingRulesRuleFilterTraceErrorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTraceError)(nil)).Elem()
}

func (i TraceTailSamplingRulesRuleFilterTraceErrorArgs) ToTraceTailSamplingRulesRuleFilterTraceErrorOutput() TraceTailSamplingRulesRuleFilterTraceErrorOutput {
	return i.ToTraceTailSamplingRulesRuleFilterTraceErrorOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterTraceErrorArgs) ToTraceTailSamplingRulesRuleFilterTraceErrorOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceErrorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterTraceErrorOutput)
}

func (i TraceTailSamplingRulesRuleFilterTraceErrorArgs) ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutput() TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutputWithContext(context.Background())
}

func (i TraceTailSamplingRulesRuleFilterTraceErrorArgs) ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterTraceErrorOutput).ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutputWithContext(ctx)
}

// TraceTailSamplingRulesRuleFilterTraceErrorPtrInput is an input type that accepts TraceTailSamplingRulesRuleFilterTraceErrorArgs, TraceTailSamplingRulesRuleFilterTraceErrorPtr and TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput values.
// You can construct a concrete instance of `TraceTailSamplingRulesRuleFilterTraceErrorPtrInput` via:
//
//	        TraceTailSamplingRulesRuleFilterTraceErrorArgs{...}
//
//	or:
//
//	        nil
type TraceTailSamplingRulesRuleFilterTraceErrorPtrInput interface {
	pulumi.Input

	ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutput() TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput
	ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutputWithContext(context.Context) TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput
}

type traceTailSamplingRulesRuleFilterTraceErrorPtrType TraceTailSamplingRulesRuleFilterTraceErrorArgs

func TraceTailSamplingRulesRuleFilterTraceErrorPtr(v *TraceTailSamplingRulesRuleFilterTraceErrorArgs) TraceTailSamplingRulesRuleFilterTraceErrorPtrInput {
	return (*traceTailSamplingRulesRuleFilterTraceErrorPtrType)(v)
}

func (*traceTailSamplingRulesRuleFilterTraceErrorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterTraceError)(nil)).Elem()
}

func (i *traceTailSamplingRulesRuleFilterTraceErrorPtrType) ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutput() TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return i.ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutputWithContext(context.Background())
}

func (i *traceTailSamplingRulesRuleFilterTraceErrorPtrType) ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput)
}

type TraceTailSamplingRulesRuleFilterTraceErrorOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterTraceErrorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTraceError)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterTraceErrorOutput) ToTraceTailSamplingRulesRuleFilterTraceErrorOutput() TraceTailSamplingRulesRuleFilterTraceErrorOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceErrorOutput) ToTraceTailSamplingRulesRuleFilterTraceErrorOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceErrorOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceErrorOutput) ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutput() TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return o.ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutputWithContext(context.Background())
}

func (o TraceTailSamplingRulesRuleFilterTraceErrorOutput) ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v TraceTailSamplingRulesRuleFilterTraceError) *TraceTailSamplingRulesRuleFilterTraceError {
		return &v
	}).(TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput)
}

func (o TraceTailSamplingRulesRuleFilterTraceErrorOutput) Value() pulumi.BoolOutput {
	return o.ApplyT(func(v TraceTailSamplingRulesRuleFilterTraceError) bool { return v.Value }).(pulumi.BoolOutput)
}

type TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput struct{ *pulumi.OutputState }

func (TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TraceTailSamplingRulesRuleFilterTraceError)(nil)).Elem()
}

func (o TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput) ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutput() TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput) ToTraceTailSamplingRulesRuleFilterTraceErrorPtrOutputWithContext(ctx context.Context) TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput {
	return o
}

func (o TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput) Elem() TraceTailSamplingRulesRuleFilterTraceErrorOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterTraceError) TraceTailSamplingRulesRuleFilterTraceError {
		if v != nil {
			return *v
		}
		var ret TraceTailSamplingRulesRuleFilterTraceError
		return ret
	}).(TraceTailSamplingRulesRuleFilterTraceErrorOutput)
}

func (o TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput) Value() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TraceTailSamplingRulesRuleFilterTraceError) *bool {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelInput)(nil)).Elem(), DerivedLabelMetricLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelPtrInput)(nil)).Elem(), DerivedLabelMetricLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelInput)(nil)).Elem(), DerivedLabelMetricLabelConstructedLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelPtrInput)(nil)).Elem(), DerivedLabelMetricLabelConstructedLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelValueDefinitionInput)(nil)).Elem(), DerivedLabelMetricLabelConstructedLabelValueDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayInput)(nil)).Elem(), DerivedLabelMetricLabelConstructedLabelValueDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterInput)(nil)).Elem(), DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayInput)(nil)).Elem(), DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelPtrInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelNameMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingArrayInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelNameMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingFilterInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelNameMappingFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelNameMappingFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingValueMappingInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelValueMappingInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelValueMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedLabelMetricLabelMappingLabelValueMappingArrayInput)(nil)).Elem(), DerivedLabelMetricLabelMappingLabelValueMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedMetricQueryInput)(nil)).Elem(), DerivedMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedMetricQueryArrayInput)(nil)).Elem(), DerivedMetricQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedMetricQueryQueryInput)(nil)).Elem(), DerivedMetricQueryQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedMetricQueryQueryVariableInput)(nil)).Elem(), DerivedMetricQueryQueryVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedMetricQueryQueryVariableArrayInput)(nil)).Elem(), DerivedMetricQueryQueryVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedMetricQuerySelectorInput)(nil)).Elem(), DerivedMetricQuerySelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DerivedMetricQuerySelectorPtrInput)(nil)).Elem(), DerivedMetricQuerySelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DropRuleValueBasedDropInput)(nil)).Elem(), DropRuleValueBasedDropArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DropRuleValueBasedDropPtrInput)(nil)).Elem(), DropRuleValueBasedDropArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MappingRuleStoragePolicyInput)(nil)).Elem(), MappingRuleStoragePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MappingRuleStoragePolicyPtrInput)(nil)).Elem(), MappingRuleStoragePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorQueryInput)(nil)).Elem(), MonitorQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorQueryPtrInput)(nil)).Elem(), MonitorQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorScheduleInput)(nil)).Elem(), MonitorScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSchedulePtrInput)(nil)).Elem(), MonitorScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorScheduleRangeInput)(nil)).Elem(), MonitorScheduleRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorScheduleRangeArrayInput)(nil)).Elem(), MonitorScheduleRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsInput)(nil)).Elem(), MonitorSeriesConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsPtrInput)(nil)).Elem(), MonitorSeriesConditionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsConditionInput)(nil)).Elem(), MonitorSeriesConditionsConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsConditionArrayInput)(nil)).Elem(), MonitorSeriesConditionsConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsOverrideInput)(nil)).Elem(), MonitorSeriesConditionsOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsOverrideArrayInput)(nil)).Elem(), MonitorSeriesConditionsOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsOverrideConditionInput)(nil)).Elem(), MonitorSeriesConditionsOverrideConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsOverrideConditionArrayInput)(nil)).Elem(), MonitorSeriesConditionsOverrideConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsOverrideLabelMatcherInput)(nil)).Elem(), MonitorSeriesConditionsOverrideLabelMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSeriesConditionsOverrideLabelMatcherArrayInput)(nil)).Elem(), MonitorSeriesConditionsOverrideLabelMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSignalGroupingInput)(nil)).Elem(), MonitorSignalGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorSignalGroupingPtrInput)(nil)).Elem(), MonitorSignalGroupingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceOverrideInput)(nil)).Elem(), NotificationPolicyDataSourceOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceOverrideArrayInput)(nil)).Elem(), NotificationPolicyDataSourceOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceOverrideAlertLabelMatcherInput)(nil)).Elem(), NotificationPolicyDataSourceOverrideAlertLabelMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayInput)(nil)).Elem(), NotificationPolicyDataSourceOverrideAlertLabelMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceOverrideRouteInput)(nil)).Elem(), NotificationPolicyDataSourceOverrideRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceOverrideRouteArrayInput)(nil)).Elem(), NotificationPolicyDataSourceOverrideRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceRouteInput)(nil)).Elem(), NotificationPolicyDataSourceRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceRouteArrayInput)(nil)).Elem(), NotificationPolicyDataSourceRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceRuleInput)(nil)).Elem(), NotificationPolicyDataSourceRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyDataSourceRuleArrayInput)(nil)).Elem(), NotificationPolicyDataSourceRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyOverrideInput)(nil)).Elem(), NotificationPolicyOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyOverrideArrayInput)(nil)).Elem(), NotificationPolicyOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyOverrideAlertLabelMatcherInput)(nil)).Elem(), NotificationPolicyOverrideAlertLabelMatcherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyOverrideAlertLabelMatcherArrayInput)(nil)).Elem(), NotificationPolicyOverrideAlertLabelMatcherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyOverrideRouteInput)(nil)).Elem(), NotificationPolicyOverrideRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyOverrideRouteArrayInput)(nil)).Elem(), NotificationPolicyOverrideRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyRouteInput)(nil)).Elem(), NotificationPolicyRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyRouteArrayInput)(nil)).Elem(), NotificationPolicyRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyRuleInput)(nil)).Elem(), NotificationPolicyRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationPolicyRuleArrayInput)(nil)).Elem(), NotificationPolicyRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpsgenieAlertNotifierResponderInput)(nil)).Elem(), OpsgenieAlertNotifierResponderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpsgenieAlertNotifierResponderArrayInput)(nil)).Elem(), OpsgenieAlertNotifierResponderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagerdutyAlertNotifierImageInput)(nil)).Elem(), PagerdutyAlertNotifierImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagerdutyAlertNotifierImageArrayInput)(nil)).Elem(), PagerdutyAlertNotifierImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagerdutyAlertNotifierLinkInput)(nil)).Elem(), PagerdutyAlertNotifierLinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PagerdutyAlertNotifierLinkArrayInput)(nil)).Elem(), PagerdutyAlertNotifierLinkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigDefaultPoolInput)(nil)).Elem(), ResourcePoolsConfigDefaultPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigDefaultPoolPtrInput)(nil)).Elem(), ResourcePoolsConfigDefaultPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigDefaultPoolAllocationInput)(nil)).Elem(), ResourcePoolsConfigDefaultPoolAllocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigDefaultPoolAllocationPtrInput)(nil)).Elem(), ResourcePoolsConfigDefaultPoolAllocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigDefaultPoolPrioritiesInput)(nil)).Elem(), ResourcePoolsConfigDefaultPoolPrioritiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigDefaultPoolPrioritiesPtrInput)(nil)).Elem(), ResourcePoolsConfigDefaultPoolPrioritiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigPoolInput)(nil)).Elem(), ResourcePoolsConfigPoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigPoolArrayInput)(nil)).Elem(), ResourcePoolsConfigPoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigPoolAllocationInput)(nil)).Elem(), ResourcePoolsConfigPoolAllocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigPoolPrioritiesInput)(nil)).Elem(), ResourcePoolsConfigPoolPrioritiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigPoolPrioritiesPtrInput)(nil)).Elem(), ResourcePoolsConfigPoolPrioritiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollupRuleStoragePoliciesInput)(nil)).Elem(), RollupRuleStoragePoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollupRuleStoragePoliciesPtrInput)(nil)).Elem(), RollupRuleStoragePoliciesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountRestrictionInput)(nil)).Elem(), ServiceAccountRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceAccountRestrictionPtrInput)(nil)).Elem(), ServiceAccountRestrictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlackAlertNotifierActionInput)(nil)).Elem(), SlackAlertNotifierActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlackAlertNotifierActionArrayInput)(nil)).Elem(), SlackAlertNotifierActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlackAlertNotifierFieldInput)(nil)).Elem(), SlackAlertNotifierFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlackAlertNotifierFieldArrayInput)(nil)).Elem(), SlackAlertNotifierFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrInput)(nil)).Elem(), TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleGroupByInput)(nil)).Elem(), TraceMetricsRuleGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleGroupByArrayInput)(nil)).Elem(), TraceMetricsRuleGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleGroupByKeyInput)(nil)).Elem(), TraceMetricsRuleGroupByKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterInput)(nil)).Elem(), TraceMetricsRuleTraceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterPtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanArrayInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanDurationInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanDurationPtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanErrorInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanErrorPtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanOperationInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanOperationPtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanParentOperationInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanParentOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanParentOperationPtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanParentOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanParentServiceInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanParentServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanParentServicePtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanParentServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanServiceInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanServicePtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanSpanCountInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanSpanCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanSpanCountPtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanSpanCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagArrayInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagNumericValueInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanTagNumericValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagNumericValuePtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanTagNumericValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagValueInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterSpanTagValuePtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterSpanTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterTraceInput)(nil)).Elem(), TraceMetricsRuleTraceFilterTraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterTracePtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterTraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterTraceDurationInput)(nil)).Elem(), TraceMetricsRuleTraceFilterTraceDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterTraceDurationPtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterTraceDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterTraceErrorInput)(nil)).Elem(), TraceMetricsRuleTraceFilterTraceErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceMetricsRuleTraceFilterTraceErrorPtrInput)(nil)).Elem(), TraceMetricsRuleTraceFilterTraceErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesDefaultSampleRateInput)(nil)).Elem(), TraceTailSamplingRulesDefaultSampleRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesDefaultSampleRatePtrInput)(nil)).Elem(), TraceTailSamplingRulesDefaultSampleRateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleInput)(nil)).Elem(), TraceTailSamplingRulesRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleArrayInput)(nil)).Elem(), TraceTailSamplingRulesRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanArrayInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanDurationInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanDurationPtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanErrorInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanErrorPtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanOperationInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanOperationPtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanParentOperationInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanParentOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanParentOperationPtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanParentOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanParentServiceInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanParentServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanParentServicePtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanParentServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanServiceInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanServicePtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanSpanCountInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanSpanCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanSpanCountPtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanSpanCountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagArrayInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagNumericValueInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanTagNumericValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagValueInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterSpanTagValuePtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterSpanTagValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTraceInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterTraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTracePtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterTraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTraceDurationInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterTraceDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTraceDurationPtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterTraceDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTraceErrorInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterTraceErrorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*TraceTailSamplingRulesRuleFilterTraceErrorPtrInput)(nil)).Elem(), TraceTailSamplingRulesRuleFilterTraceErrorArgs{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelPtrOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelConstructedLabelOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelConstructedLabelPtrOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelConstructedLabelValueDefinitionOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelConstructedLabelValueDefinitionArrayOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelConstructedLabelValueDefinitionFilterArrayOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelPtrOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelNameMappingOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelNameMappingArrayOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelNameMappingFilterOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelNameMappingFilterArrayOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelNameMappingValueMappingOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelNameMappingValueMappingArrayOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelValueMappingOutput{})
	pulumi.RegisterOutputType(DerivedLabelMetricLabelMappingLabelValueMappingArrayOutput{})
	pulumi.RegisterOutputType(DerivedMetricQueryOutput{})
	pulumi.RegisterOutputType(DerivedMetricQueryArrayOutput{})
	pulumi.RegisterOutputType(DerivedMetricQueryQueryOutput{})
	pulumi.RegisterOutputType(DerivedMetricQueryQueryVariableOutput{})
	pulumi.RegisterOutputType(DerivedMetricQueryQueryVariableArrayOutput{})
	pulumi.RegisterOutputType(DerivedMetricQuerySelectorOutput{})
	pulumi.RegisterOutputType(DerivedMetricQuerySelectorPtrOutput{})
	pulumi.RegisterOutputType(DropRuleValueBasedDropOutput{})
	pulumi.RegisterOutputType(DropRuleValueBasedDropPtrOutput{})
	pulumi.RegisterOutputType(MappingRuleStoragePolicyOutput{})
	pulumi.RegisterOutputType(MappingRuleStoragePolicyPtrOutput{})
	pulumi.RegisterOutputType(MonitorQueryOutput{})
	pulumi.RegisterOutputType(MonitorQueryPtrOutput{})
	pulumi.RegisterOutputType(MonitorScheduleOutput{})
	pulumi.RegisterOutputType(MonitorSchedulePtrOutput{})
	pulumi.RegisterOutputType(MonitorScheduleRangeOutput{})
	pulumi.RegisterOutputType(MonitorScheduleRangeArrayOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsPtrOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsConditionOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsConditionArrayOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsOverrideOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsOverrideArrayOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsOverrideConditionOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsOverrideConditionArrayOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsOverrideLabelMatcherOutput{})
	pulumi.RegisterOutputType(MonitorSeriesConditionsOverrideLabelMatcherArrayOutput{})
	pulumi.RegisterOutputType(MonitorSignalGroupingOutput{})
	pulumi.RegisterOutputType(MonitorSignalGroupingPtrOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceOverrideOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceOverrideArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceOverrideAlertLabelMatcherOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceOverrideAlertLabelMatcherArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceOverrideRouteOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceOverrideRouteArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceRouteOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceRouteArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceRuleOutput{})
	pulumi.RegisterOutputType(NotificationPolicyDataSourceRuleArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyOverrideOutput{})
	pulumi.RegisterOutputType(NotificationPolicyOverrideArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyOverrideAlertLabelMatcherOutput{})
	pulumi.RegisterOutputType(NotificationPolicyOverrideAlertLabelMatcherArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyOverrideRouteOutput{})
	pulumi.RegisterOutputType(NotificationPolicyOverrideRouteArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyRouteOutput{})
	pulumi.RegisterOutputType(NotificationPolicyRouteArrayOutput{})
	pulumi.RegisterOutputType(NotificationPolicyRuleOutput{})
	pulumi.RegisterOutputType(NotificationPolicyRuleArrayOutput{})
	pulumi.RegisterOutputType(OpsgenieAlertNotifierResponderOutput{})
	pulumi.RegisterOutputType(OpsgenieAlertNotifierResponderArrayOutput{})
	pulumi.RegisterOutputType(PagerdutyAlertNotifierImageOutput{})
	pulumi.RegisterOutputType(PagerdutyAlertNotifierImageArrayOutput{})
	pulumi.RegisterOutputType(PagerdutyAlertNotifierLinkOutput{})
	pulumi.RegisterOutputType(PagerdutyAlertNotifierLinkArrayOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigDefaultPoolOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigDefaultPoolPtrOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigDefaultPoolAllocationOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigDefaultPoolAllocationPtrOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigDefaultPoolPrioritiesOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigDefaultPoolPrioritiesPtrOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigPoolOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigPoolArrayOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigPoolAllocationOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigPoolPrioritiesOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigPoolPrioritiesPtrOutput{})
	pulumi.RegisterOutputType(RollupRuleStoragePoliciesOutput{})
	pulumi.RegisterOutputType(RollupRuleStoragePoliciesPtrOutput{})
	pulumi.RegisterOutputType(ServiceAccountRestrictionOutput{})
	pulumi.RegisterOutputType(ServiceAccountRestrictionPtrOutput{})
	pulumi.RegisterOutputType(SlackAlertNotifierActionOutput{})
	pulumi.RegisterOutputType(SlackAlertNotifierActionArrayOutput{})
	pulumi.RegisterOutputType(SlackAlertNotifierFieldOutput{})
	pulumi.RegisterOutputType(SlackAlertNotifierFieldArrayOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyPtrOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPtrOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArrayOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyPtrOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyOutput{})
	pulumi.RegisterOutputType(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyPtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleGroupByOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleGroupByArrayOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleGroupByKeyOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterPtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanArrayOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanDurationOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanDurationPtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanErrorOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanErrorPtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanOperationOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanOperationPtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanParentOperationOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanParentOperationPtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanParentServiceOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanParentServicePtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanServiceOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanServicePtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanSpanCountOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanSpanCountPtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanTagOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanTagArrayOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanTagNumericValueOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanTagNumericValuePtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanTagValueOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterSpanTagValuePtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterTraceOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterTracePtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterTraceDurationOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterTraceDurationPtrOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterTraceErrorOutput{})
	pulumi.RegisterOutputType(TraceMetricsRuleTraceFilterTraceErrorPtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesDefaultSampleRateOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesDefaultSampleRatePtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleArrayOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanArrayOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanDurationOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanDurationPtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanErrorOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanErrorPtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanOperationOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanOperationPtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanParentOperationOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanParentOperationPtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanParentServiceOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanParentServicePtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanServiceOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanServicePtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanSpanCountOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanSpanCountPtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanTagOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanTagArrayOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanTagNumericValueOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanTagNumericValuePtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanTagValueOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterSpanTagValuePtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterTraceOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterTracePtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterTraceDurationOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterTraceDurationPtrOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterTraceErrorOutput{})
	pulumi.RegisterOutputType(TraceTailSamplingRulesRuleFilterTraceErrorPtrOutput{})
}
