// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"errors"
	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WebhookAlertNotifier struct {
	pulumi.CustomResourceState

	BasicAuthPassword pulumi.StringPtrOutput `pulumi:"basicAuthPassword"`
	BasicAuthUsername pulumi.StringPtrOutput `pulumi:"basicAuthUsername"`
	BearerToken       pulumi.StringPtrOutput `pulumi:"bearerToken"`
	Name              pulumi.StringOutput    `pulumi:"name"`
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              pulumi.StringPtrOutput `pulumi:"proxyUrl"`
	SendResolved          pulumi.BoolPtrOutput   `pulumi:"sendResolved"`
	Slug                  pulumi.StringOutput    `pulumi:"slug"`
	TlsInsecureSkipVerify pulumi.BoolPtrOutput   `pulumi:"tlsInsecureSkipVerify"`
	Url                   pulumi.StringOutput    `pulumi:"url"`
}

// NewWebhookAlertNotifier registers a new resource with the given unique name, arguments, and options.
func NewWebhookAlertNotifier(ctx *pulumi.Context,
	name string, args *WebhookAlertNotifierArgs, opts ...pulumi.ResourceOption) (*WebhookAlertNotifier, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.BasicAuthPassword != nil {
		args.BasicAuthPassword = pulumi.ToSecret(args.BasicAuthPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"basicAuthPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebhookAlertNotifier
	err := ctx.RegisterResource("chronosphere:index/webhookAlertNotifier:WebhookAlertNotifier", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebhookAlertNotifier gets an existing WebhookAlertNotifier resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebhookAlertNotifier(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebhookAlertNotifierState, opts ...pulumi.ResourceOption) (*WebhookAlertNotifier, error) {
	var resource WebhookAlertNotifier
	err := ctx.ReadResource("chronosphere:index/webhookAlertNotifier:WebhookAlertNotifier", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebhookAlertNotifier resources.
type webhookAlertNotifierState struct {
	BasicAuthPassword *string `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string `pulumi:"basicAuthUsername"`
	BearerToken       *string `pulumi:"bearerToken"`
	Name              *string `pulumi:"name"`
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              *string `pulumi:"proxyUrl"`
	SendResolved          *bool   `pulumi:"sendResolved"`
	Slug                  *string `pulumi:"slug"`
	TlsInsecureSkipVerify *bool   `pulumi:"tlsInsecureSkipVerify"`
	Url                   *string `pulumi:"url"`
}

type WebhookAlertNotifierState struct {
	BasicAuthPassword pulumi.StringPtrInput
	BasicAuthUsername pulumi.StringPtrInput
	BearerToken       pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              pulumi.StringPtrInput
	SendResolved          pulumi.BoolPtrInput
	Slug                  pulumi.StringPtrInput
	TlsInsecureSkipVerify pulumi.BoolPtrInput
	Url                   pulumi.StringPtrInput
}

func (WebhookAlertNotifierState) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookAlertNotifierState)(nil)).Elem()
}

type webhookAlertNotifierArgs struct {
	BasicAuthPassword *string `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string `pulumi:"basicAuthUsername"`
	BearerToken       *string `pulumi:"bearerToken"`
	Name              string  `pulumi:"name"`
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              *string `pulumi:"proxyUrl"`
	SendResolved          *bool   `pulumi:"sendResolved"`
	Slug                  *string `pulumi:"slug"`
	TlsInsecureSkipVerify *bool   `pulumi:"tlsInsecureSkipVerify"`
	Url                   string  `pulumi:"url"`
}

// The set of arguments for constructing a WebhookAlertNotifier resource.
type WebhookAlertNotifierArgs struct {
	BasicAuthPassword pulumi.StringPtrInput
	BasicAuthUsername pulumi.StringPtrInput
	BearerToken       pulumi.StringPtrInput
	Name              pulumi.StringInput
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              pulumi.StringPtrInput
	SendResolved          pulumi.BoolPtrInput
	Slug                  pulumi.StringPtrInput
	TlsInsecureSkipVerify pulumi.BoolPtrInput
	Url                   pulumi.StringInput
}

func (WebhookAlertNotifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webhookAlertNotifierArgs)(nil)).Elem()
}

type WebhookAlertNotifierInput interface {
	pulumi.Input

	ToWebhookAlertNotifierOutput() WebhookAlertNotifierOutput
	ToWebhookAlertNotifierOutputWithContext(ctx context.Context) WebhookAlertNotifierOutput
}

func (*WebhookAlertNotifier) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookAlertNotifier)(nil)).Elem()
}

func (i *WebhookAlertNotifier) ToWebhookAlertNotifierOutput() WebhookAlertNotifierOutput {
	return i.ToWebhookAlertNotifierOutputWithContext(context.Background())
}

func (i *WebhookAlertNotifier) ToWebhookAlertNotifierOutputWithContext(ctx context.Context) WebhookAlertNotifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAlertNotifierOutput)
}

// WebhookAlertNotifierArrayInput is an input type that accepts WebhookAlertNotifierArray and WebhookAlertNotifierArrayOutput values.
// You can construct a concrete instance of `WebhookAlertNotifierArrayInput` via:
//
//	WebhookAlertNotifierArray{ WebhookAlertNotifierArgs{...} }
type WebhookAlertNotifierArrayInput interface {
	pulumi.Input

	ToWebhookAlertNotifierArrayOutput() WebhookAlertNotifierArrayOutput
	ToWebhookAlertNotifierArrayOutputWithContext(context.Context) WebhookAlertNotifierArrayOutput
}

type WebhookAlertNotifierArray []WebhookAlertNotifierInput

func (WebhookAlertNotifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhookAlertNotifier)(nil)).Elem()
}

func (i WebhookAlertNotifierArray) ToWebhookAlertNotifierArrayOutput() WebhookAlertNotifierArrayOutput {
	return i.ToWebhookAlertNotifierArrayOutputWithContext(context.Background())
}

func (i WebhookAlertNotifierArray) ToWebhookAlertNotifierArrayOutputWithContext(ctx context.Context) WebhookAlertNotifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAlertNotifierArrayOutput)
}

// WebhookAlertNotifierMapInput is an input type that accepts WebhookAlertNotifierMap and WebhookAlertNotifierMapOutput values.
// You can construct a concrete instance of `WebhookAlertNotifierMapInput` via:
//
//	WebhookAlertNotifierMap{ "key": WebhookAlertNotifierArgs{...} }
type WebhookAlertNotifierMapInput interface {
	pulumi.Input

	ToWebhookAlertNotifierMapOutput() WebhookAlertNotifierMapOutput
	ToWebhookAlertNotifierMapOutputWithContext(context.Context) WebhookAlertNotifierMapOutput
}

type WebhookAlertNotifierMap map[string]WebhookAlertNotifierInput

func (WebhookAlertNotifierMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhookAlertNotifier)(nil)).Elem()
}

func (i WebhookAlertNotifierMap) ToWebhookAlertNotifierMapOutput() WebhookAlertNotifierMapOutput {
	return i.ToWebhookAlertNotifierMapOutputWithContext(context.Background())
}

func (i WebhookAlertNotifierMap) ToWebhookAlertNotifierMapOutputWithContext(ctx context.Context) WebhookAlertNotifierMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookAlertNotifierMapOutput)
}

type WebhookAlertNotifierOutput struct{ *pulumi.OutputState }

func (WebhookAlertNotifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookAlertNotifier)(nil)).Elem()
}

func (o WebhookAlertNotifierOutput) ToWebhookAlertNotifierOutput() WebhookAlertNotifierOutput {
	return o
}

func (o WebhookAlertNotifierOutput) ToWebhookAlertNotifierOutputWithContext(ctx context.Context) WebhookAlertNotifierOutput {
	return o
}

func (o WebhookAlertNotifierOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAlertNotifier) pulumi.StringPtrOutput { return v.BasicAuthPassword }).(pulumi.StringPtrOutput)
}

func (o WebhookAlertNotifierOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAlertNotifier) pulumi.StringPtrOutput { return v.BasicAuthUsername }).(pulumi.StringPtrOutput)
}

func (o WebhookAlertNotifierOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAlertNotifier) pulumi.StringPtrOutput { return v.BearerToken }).(pulumi.StringPtrOutput)
}

func (o WebhookAlertNotifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhookAlertNotifier) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: custom proxy URLs are not supported
func (o WebhookAlertNotifierOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookAlertNotifier) pulumi.StringPtrOutput { return v.ProxyUrl }).(pulumi.StringPtrOutput)
}

func (o WebhookAlertNotifierOutput) SendResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhookAlertNotifier) pulumi.BoolPtrOutput { return v.SendResolved }).(pulumi.BoolPtrOutput)
}

func (o WebhookAlertNotifierOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhookAlertNotifier) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

func (o WebhookAlertNotifierOutput) TlsInsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WebhookAlertNotifier) pulumi.BoolPtrOutput { return v.TlsInsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

func (o WebhookAlertNotifierOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *WebhookAlertNotifier) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type WebhookAlertNotifierArrayOutput struct{ *pulumi.OutputState }

func (WebhookAlertNotifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebhookAlertNotifier)(nil)).Elem()
}

func (o WebhookAlertNotifierArrayOutput) ToWebhookAlertNotifierArrayOutput() WebhookAlertNotifierArrayOutput {
	return o
}

func (o WebhookAlertNotifierArrayOutput) ToWebhookAlertNotifierArrayOutputWithContext(ctx context.Context) WebhookAlertNotifierArrayOutput {
	return o
}

func (o WebhookAlertNotifierArrayOutput) Index(i pulumi.IntInput) WebhookAlertNotifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebhookAlertNotifier {
		return vs[0].([]*WebhookAlertNotifier)[vs[1].(int)]
	}).(WebhookAlertNotifierOutput)
}

type WebhookAlertNotifierMapOutput struct{ *pulumi.OutputState }

func (WebhookAlertNotifierMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebhookAlertNotifier)(nil)).Elem()
}

func (o WebhookAlertNotifierMapOutput) ToWebhookAlertNotifierMapOutput() WebhookAlertNotifierMapOutput {
	return o
}

func (o WebhookAlertNotifierMapOutput) ToWebhookAlertNotifierMapOutputWithContext(ctx context.Context) WebhookAlertNotifierMapOutput {
	return o
}

func (o WebhookAlertNotifierMapOutput) MapIndex(k pulumi.StringInput) WebhookAlertNotifierOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebhookAlertNotifier {
		return vs[0].(map[string]*WebhookAlertNotifier)[vs[1].(string)]
	}).(WebhookAlertNotifierOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookAlertNotifierInput)(nil)).Elem(), &WebhookAlertNotifier{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookAlertNotifierArrayInput)(nil)).Elem(), WebhookAlertNotifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookAlertNotifierMapInput)(nil)).Elem(), WebhookAlertNotifierMap{})
	pulumi.RegisterOutputType(WebhookAlertNotifierOutput{})
	pulumi.RegisterOutputType(WebhookAlertNotifierArrayOutput{})
	pulumi.RegisterOutputType(WebhookAlertNotifierMapOutput{})
}
