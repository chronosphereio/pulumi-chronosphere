// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ResourcePoolsConfig struct {
	pulumi.CustomResourceState

	DefaultPool ResourcePoolsConfigDefaultPoolPtrOutput `pulumi:"defaultPool"`
	Pool        ResourcePoolsConfigPoolArrayOutput      `pulumi:"pool"`
	// Deprecated: Use pool instead of pools
	Pools ResourcePoolsConfigPoolArrayOutput `pulumi:"pools"`
}

// NewResourcePoolsConfig registers a new resource with the given unique name, arguments, and options.
func NewResourcePoolsConfig(ctx *pulumi.Context,
	name string, args *ResourcePoolsConfigArgs, opts ...pulumi.ResourceOption) (*ResourcePoolsConfig, error) {
	if args == nil {
		args = &ResourcePoolsConfigArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ResourcePoolsConfig
	err := ctx.RegisterResource("chronosphere:index/resourcePoolsConfig:ResourcePoolsConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourcePoolsConfig gets an existing ResourcePoolsConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourcePoolsConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourcePoolsConfigState, opts ...pulumi.ResourceOption) (*ResourcePoolsConfig, error) {
	var resource ResourcePoolsConfig
	err := ctx.ReadResource("chronosphere:index/resourcePoolsConfig:ResourcePoolsConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourcePoolsConfig resources.
type resourcePoolsConfigState struct {
	DefaultPool *ResourcePoolsConfigDefaultPool `pulumi:"defaultPool"`
	Pool        []ResourcePoolsConfigPool       `pulumi:"pool"`
	// Deprecated: Use pool instead of pools
	Pools []ResourcePoolsConfigPool `pulumi:"pools"`
}

type ResourcePoolsConfigState struct {
	DefaultPool ResourcePoolsConfigDefaultPoolPtrInput
	Pool        ResourcePoolsConfigPoolArrayInput
	// Deprecated: Use pool instead of pools
	Pools ResourcePoolsConfigPoolArrayInput
}

func (ResourcePoolsConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcePoolsConfigState)(nil)).Elem()
}

type resourcePoolsConfigArgs struct {
	DefaultPool *ResourcePoolsConfigDefaultPool `pulumi:"defaultPool"`
	Pool        []ResourcePoolsConfigPool       `pulumi:"pool"`
	// Deprecated: Use pool instead of pools
	Pools []ResourcePoolsConfigPool `pulumi:"pools"`
}

// The set of arguments for constructing a ResourcePoolsConfig resource.
type ResourcePoolsConfigArgs struct {
	DefaultPool ResourcePoolsConfigDefaultPoolPtrInput
	Pool        ResourcePoolsConfigPoolArrayInput
	// Deprecated: Use pool instead of pools
	Pools ResourcePoolsConfigPoolArrayInput
}

func (ResourcePoolsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourcePoolsConfigArgs)(nil)).Elem()
}

type ResourcePoolsConfigInput interface {
	pulumi.Input

	ToResourcePoolsConfigOutput() ResourcePoolsConfigOutput
	ToResourcePoolsConfigOutputWithContext(ctx context.Context) ResourcePoolsConfigOutput
}

func (*ResourcePoolsConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfig)(nil)).Elem()
}

func (i *ResourcePoolsConfig) ToResourcePoolsConfigOutput() ResourcePoolsConfigOutput {
	return i.ToResourcePoolsConfigOutputWithContext(context.Background())
}

func (i *ResourcePoolsConfig) ToResourcePoolsConfigOutputWithContext(ctx context.Context) ResourcePoolsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigOutput)
}

// ResourcePoolsConfigArrayInput is an input type that accepts ResourcePoolsConfigArray and ResourcePoolsConfigArrayOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigArrayInput` via:
//
//	ResourcePoolsConfigArray{ ResourcePoolsConfigArgs{...} }
type ResourcePoolsConfigArrayInput interface {
	pulumi.Input

	ToResourcePoolsConfigArrayOutput() ResourcePoolsConfigArrayOutput
	ToResourcePoolsConfigArrayOutputWithContext(context.Context) ResourcePoolsConfigArrayOutput
}

type ResourcePoolsConfigArray []ResourcePoolsConfigInput

func (ResourcePoolsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourcePoolsConfig)(nil)).Elem()
}

func (i ResourcePoolsConfigArray) ToResourcePoolsConfigArrayOutput() ResourcePoolsConfigArrayOutput {
	return i.ToResourcePoolsConfigArrayOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigArray) ToResourcePoolsConfigArrayOutputWithContext(ctx context.Context) ResourcePoolsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigArrayOutput)
}

// ResourcePoolsConfigMapInput is an input type that accepts ResourcePoolsConfigMap and ResourcePoolsConfigMapOutput values.
// You can construct a concrete instance of `ResourcePoolsConfigMapInput` via:
//
//	ResourcePoolsConfigMap{ "key": ResourcePoolsConfigArgs{...} }
type ResourcePoolsConfigMapInput interface {
	pulumi.Input

	ToResourcePoolsConfigMapOutput() ResourcePoolsConfigMapOutput
	ToResourcePoolsConfigMapOutputWithContext(context.Context) ResourcePoolsConfigMapOutput
}

type ResourcePoolsConfigMap map[string]ResourcePoolsConfigInput

func (ResourcePoolsConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourcePoolsConfig)(nil)).Elem()
}

func (i ResourcePoolsConfigMap) ToResourcePoolsConfigMapOutput() ResourcePoolsConfigMapOutput {
	return i.ToResourcePoolsConfigMapOutputWithContext(context.Background())
}

func (i ResourcePoolsConfigMap) ToResourcePoolsConfigMapOutputWithContext(ctx context.Context) ResourcePoolsConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourcePoolsConfigMapOutput)
}

type ResourcePoolsConfigOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourcePoolsConfig)(nil)).Elem()
}

func (o ResourcePoolsConfigOutput) ToResourcePoolsConfigOutput() ResourcePoolsConfigOutput {
	return o
}

func (o ResourcePoolsConfigOutput) ToResourcePoolsConfigOutputWithContext(ctx context.Context) ResourcePoolsConfigOutput {
	return o
}

func (o ResourcePoolsConfigOutput) DefaultPool() ResourcePoolsConfigDefaultPoolPtrOutput {
	return o.ApplyT(func(v *ResourcePoolsConfig) ResourcePoolsConfigDefaultPoolPtrOutput { return v.DefaultPool }).(ResourcePoolsConfigDefaultPoolPtrOutput)
}

func (o ResourcePoolsConfigOutput) Pool() ResourcePoolsConfigPoolArrayOutput {
	return o.ApplyT(func(v *ResourcePoolsConfig) ResourcePoolsConfigPoolArrayOutput { return v.Pool }).(ResourcePoolsConfigPoolArrayOutput)
}

// Deprecated: Use pool instead of pools
func (o ResourcePoolsConfigOutput) Pools() ResourcePoolsConfigPoolArrayOutput {
	return o.ApplyT(func(v *ResourcePoolsConfig) ResourcePoolsConfigPoolArrayOutput { return v.Pools }).(ResourcePoolsConfigPoolArrayOutput)
}

type ResourcePoolsConfigArrayOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourcePoolsConfig)(nil)).Elem()
}

func (o ResourcePoolsConfigArrayOutput) ToResourcePoolsConfigArrayOutput() ResourcePoolsConfigArrayOutput {
	return o
}

func (o ResourcePoolsConfigArrayOutput) ToResourcePoolsConfigArrayOutputWithContext(ctx context.Context) ResourcePoolsConfigArrayOutput {
	return o
}

func (o ResourcePoolsConfigArrayOutput) Index(i pulumi.IntInput) ResourcePoolsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourcePoolsConfig {
		return vs[0].([]*ResourcePoolsConfig)[vs[1].(int)]
	}).(ResourcePoolsConfigOutput)
}

type ResourcePoolsConfigMapOutput struct{ *pulumi.OutputState }

func (ResourcePoolsConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourcePoolsConfig)(nil)).Elem()
}

func (o ResourcePoolsConfigMapOutput) ToResourcePoolsConfigMapOutput() ResourcePoolsConfigMapOutput {
	return o
}

func (o ResourcePoolsConfigMapOutput) ToResourcePoolsConfigMapOutputWithContext(ctx context.Context) ResourcePoolsConfigMapOutput {
	return o
}

func (o ResourcePoolsConfigMapOutput) MapIndex(k pulumi.StringInput) ResourcePoolsConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourcePoolsConfig {
		return vs[0].(map[string]*ResourcePoolsConfig)[vs[1].(string)]
	}).(ResourcePoolsConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigInput)(nil)).Elem(), &ResourcePoolsConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigArrayInput)(nil)).Elem(), ResourcePoolsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourcePoolsConfigMapInput)(nil)).Elem(), ResourcePoolsConfigMap{})
	pulumi.RegisterOutputType(ResourcePoolsConfigOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigArrayOutput{})
	pulumi.RegisterOutputType(ResourcePoolsConfigMapOutput{})
}
