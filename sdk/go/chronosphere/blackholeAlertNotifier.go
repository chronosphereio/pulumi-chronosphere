// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"errors"
	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type BlackholeAlertNotifier struct {
	pulumi.CustomResourceState

	Name pulumi.StringOutput `pulumi:"name"`
	Slug pulumi.StringOutput `pulumi:"slug"`
}

// NewBlackholeAlertNotifier registers a new resource with the given unique name, arguments, and options.
func NewBlackholeAlertNotifier(ctx *pulumi.Context,
	name string, args *BlackholeAlertNotifierArgs, opts ...pulumi.ResourceOption) (*BlackholeAlertNotifier, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BlackholeAlertNotifier
	err := ctx.RegisterResource("chronosphere:index/blackholeAlertNotifier:BlackholeAlertNotifier", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBlackholeAlertNotifier gets an existing BlackholeAlertNotifier resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBlackholeAlertNotifier(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BlackholeAlertNotifierState, opts ...pulumi.ResourceOption) (*BlackholeAlertNotifier, error) {
	var resource BlackholeAlertNotifier
	err := ctx.ReadResource("chronosphere:index/blackholeAlertNotifier:BlackholeAlertNotifier", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BlackholeAlertNotifier resources.
type blackholeAlertNotifierState struct {
	Name *string `pulumi:"name"`
	Slug *string `pulumi:"slug"`
}

type BlackholeAlertNotifierState struct {
	Name pulumi.StringPtrInput
	Slug pulumi.StringPtrInput
}

func (BlackholeAlertNotifierState) ElementType() reflect.Type {
	return reflect.TypeOf((*blackholeAlertNotifierState)(nil)).Elem()
}

type blackholeAlertNotifierArgs struct {
	Name string  `pulumi:"name"`
	Slug *string `pulumi:"slug"`
}

// The set of arguments for constructing a BlackholeAlertNotifier resource.
type BlackholeAlertNotifierArgs struct {
	Name pulumi.StringInput
	Slug pulumi.StringPtrInput
}

func (BlackholeAlertNotifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*blackholeAlertNotifierArgs)(nil)).Elem()
}

type BlackholeAlertNotifierInput interface {
	pulumi.Input

	ToBlackholeAlertNotifierOutput() BlackholeAlertNotifierOutput
	ToBlackholeAlertNotifierOutputWithContext(ctx context.Context) BlackholeAlertNotifierOutput
}

func (*BlackholeAlertNotifier) ElementType() reflect.Type {
	return reflect.TypeOf((**BlackholeAlertNotifier)(nil)).Elem()
}

func (i *BlackholeAlertNotifier) ToBlackholeAlertNotifierOutput() BlackholeAlertNotifierOutput {
	return i.ToBlackholeAlertNotifierOutputWithContext(context.Background())
}

func (i *BlackholeAlertNotifier) ToBlackholeAlertNotifierOutputWithContext(ctx context.Context) BlackholeAlertNotifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlackholeAlertNotifierOutput)
}

// BlackholeAlertNotifierArrayInput is an input type that accepts BlackholeAlertNotifierArray and BlackholeAlertNotifierArrayOutput values.
// You can construct a concrete instance of `BlackholeAlertNotifierArrayInput` via:
//
//	BlackholeAlertNotifierArray{ BlackholeAlertNotifierArgs{...} }
type BlackholeAlertNotifierArrayInput interface {
	pulumi.Input

	ToBlackholeAlertNotifierArrayOutput() BlackholeAlertNotifierArrayOutput
	ToBlackholeAlertNotifierArrayOutputWithContext(context.Context) BlackholeAlertNotifierArrayOutput
}

type BlackholeAlertNotifierArray []BlackholeAlertNotifierInput

func (BlackholeAlertNotifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BlackholeAlertNotifier)(nil)).Elem()
}

func (i BlackholeAlertNotifierArray) ToBlackholeAlertNotifierArrayOutput() BlackholeAlertNotifierArrayOutput {
	return i.ToBlackholeAlertNotifierArrayOutputWithContext(context.Background())
}

func (i BlackholeAlertNotifierArray) ToBlackholeAlertNotifierArrayOutputWithContext(ctx context.Context) BlackholeAlertNotifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlackholeAlertNotifierArrayOutput)
}

// BlackholeAlertNotifierMapInput is an input type that accepts BlackholeAlertNotifierMap and BlackholeAlertNotifierMapOutput values.
// You can construct a concrete instance of `BlackholeAlertNotifierMapInput` via:
//
//	BlackholeAlertNotifierMap{ "key": BlackholeAlertNotifierArgs{...} }
type BlackholeAlertNotifierMapInput interface {
	pulumi.Input

	ToBlackholeAlertNotifierMapOutput() BlackholeAlertNotifierMapOutput
	ToBlackholeAlertNotifierMapOutputWithContext(context.Context) BlackholeAlertNotifierMapOutput
}

type BlackholeAlertNotifierMap map[string]BlackholeAlertNotifierInput

func (BlackholeAlertNotifierMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BlackholeAlertNotifier)(nil)).Elem()
}

func (i BlackholeAlertNotifierMap) ToBlackholeAlertNotifierMapOutput() BlackholeAlertNotifierMapOutput {
	return i.ToBlackholeAlertNotifierMapOutputWithContext(context.Background())
}

func (i BlackholeAlertNotifierMap) ToBlackholeAlertNotifierMapOutputWithContext(ctx context.Context) BlackholeAlertNotifierMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlackholeAlertNotifierMapOutput)
}

type BlackholeAlertNotifierOutput struct{ *pulumi.OutputState }

func (BlackholeAlertNotifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlackholeAlertNotifier)(nil)).Elem()
}

func (o BlackholeAlertNotifierOutput) ToBlackholeAlertNotifierOutput() BlackholeAlertNotifierOutput {
	return o
}

func (o BlackholeAlertNotifierOutput) ToBlackholeAlertNotifierOutputWithContext(ctx context.Context) BlackholeAlertNotifierOutput {
	return o
}

func (o BlackholeAlertNotifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BlackholeAlertNotifier) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BlackholeAlertNotifierOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *BlackholeAlertNotifier) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

type BlackholeAlertNotifierArrayOutput struct{ *pulumi.OutputState }

func (BlackholeAlertNotifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BlackholeAlertNotifier)(nil)).Elem()
}

func (o BlackholeAlertNotifierArrayOutput) ToBlackholeAlertNotifierArrayOutput() BlackholeAlertNotifierArrayOutput {
	return o
}

func (o BlackholeAlertNotifierArrayOutput) ToBlackholeAlertNotifierArrayOutputWithContext(ctx context.Context) BlackholeAlertNotifierArrayOutput {
	return o
}

func (o BlackholeAlertNotifierArrayOutput) Index(i pulumi.IntInput) BlackholeAlertNotifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BlackholeAlertNotifier {
		return vs[0].([]*BlackholeAlertNotifier)[vs[1].(int)]
	}).(BlackholeAlertNotifierOutput)
}

type BlackholeAlertNotifierMapOutput struct{ *pulumi.OutputState }

func (BlackholeAlertNotifierMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BlackholeAlertNotifier)(nil)).Elem()
}

func (o BlackholeAlertNotifierMapOutput) ToBlackholeAlertNotifierMapOutput() BlackholeAlertNotifierMapOutput {
	return o
}

func (o BlackholeAlertNotifierMapOutput) ToBlackholeAlertNotifierMapOutputWithContext(ctx context.Context) BlackholeAlertNotifierMapOutput {
	return o
}

func (o BlackholeAlertNotifierMapOutput) MapIndex(k pulumi.StringInput) BlackholeAlertNotifierOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BlackholeAlertNotifier {
		return vs[0].(map[string]*BlackholeAlertNotifier)[vs[1].(string)]
	}).(BlackholeAlertNotifierOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BlackholeAlertNotifierInput)(nil)).Elem(), &BlackholeAlertNotifier{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlackholeAlertNotifierArrayInput)(nil)).Elem(), BlackholeAlertNotifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlackholeAlertNotifierMapInput)(nil)).Elem(), BlackholeAlertNotifierMap{})
	pulumi.RegisterOutputType(BlackholeAlertNotifierOutput{})
	pulumi.RegisterOutputType(BlackholeAlertNotifierArrayOutput{})
	pulumi.RegisterOutputType(BlackholeAlertNotifierMapOutput{})
}
