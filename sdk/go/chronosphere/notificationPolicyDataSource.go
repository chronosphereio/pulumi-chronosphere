// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func NotificationPolicyDataSource(ctx *pulumi.Context, args *NotificationPolicyDataSourceArgs, opts ...pulumi.InvokeOption) (*NotificationPolicyDataSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv NotificationPolicyDataSourceResult
	err := ctx.Invoke("chronosphere:index/notificationPolicyDataSource:NotificationPolicyDataSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking NotificationPolicyDataSource.
type NotificationPolicyDataSourceArgs struct {
	Name                   *string                                `pulumi:"name"`
	NotificationPolicyData *string                                `pulumi:"notificationPolicyData"`
	Overrides              []NotificationPolicyDataSourceOverride `pulumi:"overrides"`
	Routes                 []NotificationPolicyDataSourceRoute    `pulumi:"routes"`
	// Deprecated: `rule` is deprecated, use `route` instead.
	Rules  []NotificationPolicyDataSourceRule `pulumi:"rules"`
	Slug   *string                            `pulumi:"slug"`
	TeamId *string                            `pulumi:"teamId"`
}

// A collection of values returned by NotificationPolicyDataSource.
type NotificationPolicyDataSourceResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                     string                                 `pulumi:"id"`
	IsIndependent          bool                                   `pulumi:"isIndependent"`
	Name                   *string                                `pulumi:"name"`
	NotificationPolicyData string                                 `pulumi:"notificationPolicyData"`
	Overrides              []NotificationPolicyDataSourceOverride `pulumi:"overrides"`
	Routes                 []NotificationPolicyDataSourceRoute    `pulumi:"routes"`
	// Deprecated: `rule` is deprecated, use `route` instead.
	Rules  []NotificationPolicyDataSourceRule `pulumi:"rules"`
	Slug   string                             `pulumi:"slug"`
	TeamId *string                            `pulumi:"teamId"`
}

func NotificationPolicyDataSourceOutput(ctx *pulumi.Context, args NotificationPolicyDataSourceOutputArgs, opts ...pulumi.InvokeOption) NotificationPolicyDataSourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (NotificationPolicyDataSourceResult, error) {
			args := v.(NotificationPolicyDataSourceArgs)
			r, err := NotificationPolicyDataSource(ctx, &args, opts...)
			var s NotificationPolicyDataSourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(NotificationPolicyDataSourceResultOutput)
}

// A collection of arguments for invoking NotificationPolicyDataSource.
type NotificationPolicyDataSourceOutputArgs struct {
	Name                   pulumi.StringPtrInput                          `pulumi:"name"`
	NotificationPolicyData pulumi.StringPtrInput                          `pulumi:"notificationPolicyData"`
	Overrides              NotificationPolicyDataSourceOverrideArrayInput `pulumi:"overrides"`
	Routes                 NotificationPolicyDataSourceRouteArrayInput    `pulumi:"routes"`
	// Deprecated: `rule` is deprecated, use `route` instead.
	Rules  NotificationPolicyDataSourceRuleArrayInput `pulumi:"rules"`
	Slug   pulumi.StringPtrInput                      `pulumi:"slug"`
	TeamId pulumi.StringPtrInput                      `pulumi:"teamId"`
}

func (NotificationPolicyDataSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceArgs)(nil)).Elem()
}

// A collection of values returned by NotificationPolicyDataSource.
type NotificationPolicyDataSourceResultOutput struct{ *pulumi.OutputState }

func (NotificationPolicyDataSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationPolicyDataSourceResult)(nil)).Elem()
}

func (o NotificationPolicyDataSourceResultOutput) ToNotificationPolicyDataSourceResultOutput() NotificationPolicyDataSourceResultOutput {
	return o
}

func (o NotificationPolicyDataSourceResultOutput) ToNotificationPolicyDataSourceResultOutputWithContext(ctx context.Context) NotificationPolicyDataSourceResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o NotificationPolicyDataSourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o NotificationPolicyDataSourceResultOutput) IsIndependent() pulumi.BoolOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceResult) bool { return v.IsIndependent }).(pulumi.BoolOutput)
}

func (o NotificationPolicyDataSourceResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o NotificationPolicyDataSourceResultOutput) NotificationPolicyData() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceResult) string { return v.NotificationPolicyData }).(pulumi.StringOutput)
}

func (o NotificationPolicyDataSourceResultOutput) Overrides() NotificationPolicyDataSourceOverrideArrayOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceResult) []NotificationPolicyDataSourceOverride { return v.Overrides }).(NotificationPolicyDataSourceOverrideArrayOutput)
}

func (o NotificationPolicyDataSourceResultOutput) Routes() NotificationPolicyDataSourceRouteArrayOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceResult) []NotificationPolicyDataSourceRoute { return v.Routes }).(NotificationPolicyDataSourceRouteArrayOutput)
}

// Deprecated: `rule` is deprecated, use `route` instead.
func (o NotificationPolicyDataSourceResultOutput) Rules() NotificationPolicyDataSourceRuleArrayOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceResult) []NotificationPolicyDataSourceRule { return v.Rules }).(NotificationPolicyDataSourceRuleArrayOutput)
}

func (o NotificationPolicyDataSourceResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceResult) string { return v.Slug }).(pulumi.StringOutput)
}

func (o NotificationPolicyDataSourceResultOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationPolicyDataSourceResult) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(NotificationPolicyDataSourceResultOutput{})
}
