// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"errors"
	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SlackAlertNotifier struct {
	pulumi.CustomResourceState

	Actions           SlackAlertNotifierActionArrayOutput `pulumi:"actions"`
	ApiUrl            pulumi.StringOutput                 `pulumi:"apiUrl"`
	BasicAuthPassword pulumi.StringPtrOutput              `pulumi:"basicAuthPassword"`
	BasicAuthUsername pulumi.StringPtrOutput              `pulumi:"basicAuthUsername"`
	BearerToken       pulumi.StringPtrOutput              `pulumi:"bearerToken"`
	CallbackId        pulumi.StringPtrOutput              `pulumi:"callbackId"`
	Channel           pulumi.StringOutput                 `pulumi:"channel"`
	Color             pulumi.StringPtrOutput              `pulumi:"color"`
	Fallback          pulumi.StringPtrOutput              `pulumi:"fallback"`
	Fields            SlackAlertNotifierFieldArrayOutput  `pulumi:"fields"`
	Footer            pulumi.StringPtrOutput              `pulumi:"footer"`
	IconEmoji         pulumi.StringPtrOutput              `pulumi:"iconEmoji"`
	IconUrl           pulumi.StringPtrOutput              `pulumi:"iconUrl"`
	ImageUrl          pulumi.StringPtrOutput              `pulumi:"imageUrl"`
	LinkNames         pulumi.BoolPtrOutput                `pulumi:"linkNames"`
	MrkdwnIns         pulumi.StringArrayOutput            `pulumi:"mrkdwnIns"`
	Name              pulumi.StringOutput                 `pulumi:"name"`
	Pretext           pulumi.StringPtrOutput              `pulumi:"pretext"`
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              pulumi.StringPtrOutput `pulumi:"proxyUrl"`
	SendResolved          pulumi.BoolPtrOutput   `pulumi:"sendResolved"`
	ShortFields           pulumi.BoolPtrOutput   `pulumi:"shortFields"`
	Slug                  pulumi.StringOutput    `pulumi:"slug"`
	Text                  pulumi.StringPtrOutput `pulumi:"text"`
	ThumbUrl              pulumi.StringPtrOutput `pulumi:"thumbUrl"`
	Title                 pulumi.StringPtrOutput `pulumi:"title"`
	TitleLink             pulumi.StringPtrOutput `pulumi:"titleLink"`
	TlsInsecureSkipVerify pulumi.BoolPtrOutput   `pulumi:"tlsInsecureSkipVerify"`
	Username              pulumi.StringPtrOutput `pulumi:"username"`
}

// NewSlackAlertNotifier registers a new resource with the given unique name, arguments, and options.
func NewSlackAlertNotifier(ctx *pulumi.Context,
	name string, args *SlackAlertNotifierArgs, opts ...pulumi.ResourceOption) (*SlackAlertNotifier, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiUrl == nil {
		return nil, errors.New("invalid value for required argument 'ApiUrl'")
	}
	if args.Channel == nil {
		return nil, errors.New("invalid value for required argument 'Channel'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.ApiUrl != nil {
		args.ApiUrl = pulumi.ToSecret(args.ApiUrl).(pulumi.StringInput)
	}
	if args.BasicAuthPassword != nil {
		args.BasicAuthPassword = pulumi.ToSecret(args.BasicAuthPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"apiUrl",
		"basicAuthPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SlackAlertNotifier
	err := ctx.RegisterResource("chronosphere:index/slackAlertNotifier:SlackAlertNotifier", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSlackAlertNotifier gets an existing SlackAlertNotifier resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSlackAlertNotifier(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SlackAlertNotifierState, opts ...pulumi.ResourceOption) (*SlackAlertNotifier, error) {
	var resource SlackAlertNotifier
	err := ctx.ReadResource("chronosphere:index/slackAlertNotifier:SlackAlertNotifier", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SlackAlertNotifier resources.
type slackAlertNotifierState struct {
	Actions           []SlackAlertNotifierAction `pulumi:"actions"`
	ApiUrl            *string                    `pulumi:"apiUrl"`
	BasicAuthPassword *string                    `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string                    `pulumi:"basicAuthUsername"`
	BearerToken       *string                    `pulumi:"bearerToken"`
	CallbackId        *string                    `pulumi:"callbackId"`
	Channel           *string                    `pulumi:"channel"`
	Color             *string                    `pulumi:"color"`
	Fallback          *string                    `pulumi:"fallback"`
	Fields            []SlackAlertNotifierField  `pulumi:"fields"`
	Footer            *string                    `pulumi:"footer"`
	IconEmoji         *string                    `pulumi:"iconEmoji"`
	IconUrl           *string                    `pulumi:"iconUrl"`
	ImageUrl          *string                    `pulumi:"imageUrl"`
	LinkNames         *bool                      `pulumi:"linkNames"`
	MrkdwnIns         []string                   `pulumi:"mrkdwnIns"`
	Name              *string                    `pulumi:"name"`
	Pretext           *string                    `pulumi:"pretext"`
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              *string `pulumi:"proxyUrl"`
	SendResolved          *bool   `pulumi:"sendResolved"`
	ShortFields           *bool   `pulumi:"shortFields"`
	Slug                  *string `pulumi:"slug"`
	Text                  *string `pulumi:"text"`
	ThumbUrl              *string `pulumi:"thumbUrl"`
	Title                 *string `pulumi:"title"`
	TitleLink             *string `pulumi:"titleLink"`
	TlsInsecureSkipVerify *bool   `pulumi:"tlsInsecureSkipVerify"`
	Username              *string `pulumi:"username"`
}

type SlackAlertNotifierState struct {
	Actions           SlackAlertNotifierActionArrayInput
	ApiUrl            pulumi.StringPtrInput
	BasicAuthPassword pulumi.StringPtrInput
	BasicAuthUsername pulumi.StringPtrInput
	BearerToken       pulumi.StringPtrInput
	CallbackId        pulumi.StringPtrInput
	Channel           pulumi.StringPtrInput
	Color             pulumi.StringPtrInput
	Fallback          pulumi.StringPtrInput
	Fields            SlackAlertNotifierFieldArrayInput
	Footer            pulumi.StringPtrInput
	IconEmoji         pulumi.StringPtrInput
	IconUrl           pulumi.StringPtrInput
	ImageUrl          pulumi.StringPtrInput
	LinkNames         pulumi.BoolPtrInput
	MrkdwnIns         pulumi.StringArrayInput
	Name              pulumi.StringPtrInput
	Pretext           pulumi.StringPtrInput
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              pulumi.StringPtrInput
	SendResolved          pulumi.BoolPtrInput
	ShortFields           pulumi.BoolPtrInput
	Slug                  pulumi.StringPtrInput
	Text                  pulumi.StringPtrInput
	ThumbUrl              pulumi.StringPtrInput
	Title                 pulumi.StringPtrInput
	TitleLink             pulumi.StringPtrInput
	TlsInsecureSkipVerify pulumi.BoolPtrInput
	Username              pulumi.StringPtrInput
}

func (SlackAlertNotifierState) ElementType() reflect.Type {
	return reflect.TypeOf((*slackAlertNotifierState)(nil)).Elem()
}

type slackAlertNotifierArgs struct {
	Actions           []SlackAlertNotifierAction `pulumi:"actions"`
	ApiUrl            string                     `pulumi:"apiUrl"`
	BasicAuthPassword *string                    `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string                    `pulumi:"basicAuthUsername"`
	BearerToken       *string                    `pulumi:"bearerToken"`
	CallbackId        *string                    `pulumi:"callbackId"`
	Channel           string                     `pulumi:"channel"`
	Color             *string                    `pulumi:"color"`
	Fallback          *string                    `pulumi:"fallback"`
	Fields            []SlackAlertNotifierField  `pulumi:"fields"`
	Footer            *string                    `pulumi:"footer"`
	IconEmoji         *string                    `pulumi:"iconEmoji"`
	IconUrl           *string                    `pulumi:"iconUrl"`
	ImageUrl          *string                    `pulumi:"imageUrl"`
	LinkNames         *bool                      `pulumi:"linkNames"`
	MrkdwnIns         []string                   `pulumi:"mrkdwnIns"`
	Name              string                     `pulumi:"name"`
	Pretext           *string                    `pulumi:"pretext"`
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              *string `pulumi:"proxyUrl"`
	SendResolved          *bool   `pulumi:"sendResolved"`
	ShortFields           *bool   `pulumi:"shortFields"`
	Slug                  *string `pulumi:"slug"`
	Text                  *string `pulumi:"text"`
	ThumbUrl              *string `pulumi:"thumbUrl"`
	Title                 *string `pulumi:"title"`
	TitleLink             *string `pulumi:"titleLink"`
	TlsInsecureSkipVerify *bool   `pulumi:"tlsInsecureSkipVerify"`
	Username              *string `pulumi:"username"`
}

// The set of arguments for constructing a SlackAlertNotifier resource.
type SlackAlertNotifierArgs struct {
	Actions           SlackAlertNotifierActionArrayInput
	ApiUrl            pulumi.StringInput
	BasicAuthPassword pulumi.StringPtrInput
	BasicAuthUsername pulumi.StringPtrInput
	BearerToken       pulumi.StringPtrInput
	CallbackId        pulumi.StringPtrInput
	Channel           pulumi.StringInput
	Color             pulumi.StringPtrInput
	Fallback          pulumi.StringPtrInput
	Fields            SlackAlertNotifierFieldArrayInput
	Footer            pulumi.StringPtrInput
	IconEmoji         pulumi.StringPtrInput
	IconUrl           pulumi.StringPtrInput
	ImageUrl          pulumi.StringPtrInput
	LinkNames         pulumi.BoolPtrInput
	MrkdwnIns         pulumi.StringArrayInput
	Name              pulumi.StringInput
	Pretext           pulumi.StringPtrInput
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              pulumi.StringPtrInput
	SendResolved          pulumi.BoolPtrInput
	ShortFields           pulumi.BoolPtrInput
	Slug                  pulumi.StringPtrInput
	Text                  pulumi.StringPtrInput
	ThumbUrl              pulumi.StringPtrInput
	Title                 pulumi.StringPtrInput
	TitleLink             pulumi.StringPtrInput
	TlsInsecureSkipVerify pulumi.BoolPtrInput
	Username              pulumi.StringPtrInput
}

func (SlackAlertNotifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*slackAlertNotifierArgs)(nil)).Elem()
}

type SlackAlertNotifierInput interface {
	pulumi.Input

	ToSlackAlertNotifierOutput() SlackAlertNotifierOutput
	ToSlackAlertNotifierOutputWithContext(ctx context.Context) SlackAlertNotifierOutput
}

func (*SlackAlertNotifier) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackAlertNotifier)(nil)).Elem()
}

func (i *SlackAlertNotifier) ToSlackAlertNotifierOutput() SlackAlertNotifierOutput {
	return i.ToSlackAlertNotifierOutputWithContext(context.Background())
}

func (i *SlackAlertNotifier) ToSlackAlertNotifierOutputWithContext(ctx context.Context) SlackAlertNotifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackAlertNotifierOutput)
}

// SlackAlertNotifierArrayInput is an input type that accepts SlackAlertNotifierArray and SlackAlertNotifierArrayOutput values.
// You can construct a concrete instance of `SlackAlertNotifierArrayInput` via:
//
//	SlackAlertNotifierArray{ SlackAlertNotifierArgs{...} }
type SlackAlertNotifierArrayInput interface {
	pulumi.Input

	ToSlackAlertNotifierArrayOutput() SlackAlertNotifierArrayOutput
	ToSlackAlertNotifierArrayOutputWithContext(context.Context) SlackAlertNotifierArrayOutput
}

type SlackAlertNotifierArray []SlackAlertNotifierInput

func (SlackAlertNotifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SlackAlertNotifier)(nil)).Elem()
}

func (i SlackAlertNotifierArray) ToSlackAlertNotifierArrayOutput() SlackAlertNotifierArrayOutput {
	return i.ToSlackAlertNotifierArrayOutputWithContext(context.Background())
}

func (i SlackAlertNotifierArray) ToSlackAlertNotifierArrayOutputWithContext(ctx context.Context) SlackAlertNotifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackAlertNotifierArrayOutput)
}

// SlackAlertNotifierMapInput is an input type that accepts SlackAlertNotifierMap and SlackAlertNotifierMapOutput values.
// You can construct a concrete instance of `SlackAlertNotifierMapInput` via:
//
//	SlackAlertNotifierMap{ "key": SlackAlertNotifierArgs{...} }
type SlackAlertNotifierMapInput interface {
	pulumi.Input

	ToSlackAlertNotifierMapOutput() SlackAlertNotifierMapOutput
	ToSlackAlertNotifierMapOutputWithContext(context.Context) SlackAlertNotifierMapOutput
}

type SlackAlertNotifierMap map[string]SlackAlertNotifierInput

func (SlackAlertNotifierMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SlackAlertNotifier)(nil)).Elem()
}

func (i SlackAlertNotifierMap) ToSlackAlertNotifierMapOutput() SlackAlertNotifierMapOutput {
	return i.ToSlackAlertNotifierMapOutputWithContext(context.Background())
}

func (i SlackAlertNotifierMap) ToSlackAlertNotifierMapOutputWithContext(ctx context.Context) SlackAlertNotifierMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlackAlertNotifierMapOutput)
}

type SlackAlertNotifierOutput struct{ *pulumi.OutputState }

func (SlackAlertNotifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SlackAlertNotifier)(nil)).Elem()
}

func (o SlackAlertNotifierOutput) ToSlackAlertNotifierOutput() SlackAlertNotifierOutput {
	return o
}

func (o SlackAlertNotifierOutput) ToSlackAlertNotifierOutputWithContext(ctx context.Context) SlackAlertNotifierOutput {
	return o
}

func (o SlackAlertNotifierOutput) Actions() SlackAlertNotifierActionArrayOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) SlackAlertNotifierActionArrayOutput { return v.Actions }).(SlackAlertNotifierActionArrayOutput)
}

func (o SlackAlertNotifierOutput) ApiUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringOutput { return v.ApiUrl }).(pulumi.StringOutput)
}

func (o SlackAlertNotifierOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.BasicAuthPassword }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.BasicAuthUsername }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.BearerToken }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) CallbackId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.CallbackId }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringOutput { return v.Channel }).(pulumi.StringOutput)
}

func (o SlackAlertNotifierOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.Color }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) Fallback() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.Fallback }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) Fields() SlackAlertNotifierFieldArrayOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) SlackAlertNotifierFieldArrayOutput { return v.Fields }).(SlackAlertNotifierFieldArrayOutput)
}

func (o SlackAlertNotifierOutput) Footer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.Footer }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) IconEmoji() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.IconEmoji }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) IconUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.IconUrl }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) ImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.ImageUrl }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) LinkNames() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.BoolPtrOutput { return v.LinkNames }).(pulumi.BoolPtrOutput)
}

func (o SlackAlertNotifierOutput) MrkdwnIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringArrayOutput { return v.MrkdwnIns }).(pulumi.StringArrayOutput)
}

func (o SlackAlertNotifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SlackAlertNotifierOutput) Pretext() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.Pretext }).(pulumi.StringPtrOutput)
}

// Deprecated: custom proxy URLs are not supported
func (o SlackAlertNotifierOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.ProxyUrl }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) SendResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.BoolPtrOutput { return v.SendResolved }).(pulumi.BoolPtrOutput)
}

func (o SlackAlertNotifierOutput) ShortFields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.BoolPtrOutput { return v.ShortFields }).(pulumi.BoolPtrOutput)
}

func (o SlackAlertNotifierOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

func (o SlackAlertNotifierOutput) Text() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.Text }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) ThumbUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.ThumbUrl }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.Title }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) TitleLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.TitleLink }).(pulumi.StringPtrOutput)
}

func (o SlackAlertNotifierOutput) TlsInsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.BoolPtrOutput { return v.TlsInsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

func (o SlackAlertNotifierOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SlackAlertNotifier) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

type SlackAlertNotifierArrayOutput struct{ *pulumi.OutputState }

func (SlackAlertNotifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SlackAlertNotifier)(nil)).Elem()
}

func (o SlackAlertNotifierArrayOutput) ToSlackAlertNotifierArrayOutput() SlackAlertNotifierArrayOutput {
	return o
}

func (o SlackAlertNotifierArrayOutput) ToSlackAlertNotifierArrayOutputWithContext(ctx context.Context) SlackAlertNotifierArrayOutput {
	return o
}

func (o SlackAlertNotifierArrayOutput) Index(i pulumi.IntInput) SlackAlertNotifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SlackAlertNotifier {
		return vs[0].([]*SlackAlertNotifier)[vs[1].(int)]
	}).(SlackAlertNotifierOutput)
}

type SlackAlertNotifierMapOutput struct{ *pulumi.OutputState }

func (SlackAlertNotifierMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SlackAlertNotifier)(nil)).Elem()
}

func (o SlackAlertNotifierMapOutput) ToSlackAlertNotifierMapOutput() SlackAlertNotifierMapOutput {
	return o
}

func (o SlackAlertNotifierMapOutput) ToSlackAlertNotifierMapOutputWithContext(ctx context.Context) SlackAlertNotifierMapOutput {
	return o
}

func (o SlackAlertNotifierMapOutput) MapIndex(k pulumi.StringInput) SlackAlertNotifierOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SlackAlertNotifier {
		return vs[0].(map[string]*SlackAlertNotifier)[vs[1].(string)]
	}).(SlackAlertNotifierOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SlackAlertNotifierInput)(nil)).Elem(), &SlackAlertNotifier{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlackAlertNotifierArrayInput)(nil)).Elem(), SlackAlertNotifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SlackAlertNotifierMapInput)(nil)).Elem(), SlackAlertNotifierMap{})
	pulumi.RegisterOutputType(SlackAlertNotifierOutput{})
	pulumi.RegisterOutputType(SlackAlertNotifierArrayOutput{})
	pulumi.RegisterOutputType(SlackAlertNotifierMapOutput{})
}
