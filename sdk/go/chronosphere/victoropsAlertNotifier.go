// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"errors"
	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VictoropsAlertNotifier struct {
	pulumi.CustomResourceState

	ApiKey            pulumi.StringOutput    `pulumi:"apiKey"`
	ApiUrl            pulumi.StringPtrOutput `pulumi:"apiUrl"`
	BasicAuthPassword pulumi.StringPtrOutput `pulumi:"basicAuthPassword"`
	BasicAuthUsername pulumi.StringPtrOutput `pulumi:"basicAuthUsername"`
	BearerToken       pulumi.StringPtrOutput `pulumi:"bearerToken"`
	CustomFields      pulumi.StringMapOutput `pulumi:"customFields"`
	EntityDisplayName pulumi.StringPtrOutput `pulumi:"entityDisplayName"`
	MessageType       pulumi.StringPtrOutput `pulumi:"messageType"`
	MonitoringTool    pulumi.StringPtrOutput `pulumi:"monitoringTool"`
	Name              pulumi.StringOutput    `pulumi:"name"`
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              pulumi.StringPtrOutput `pulumi:"proxyUrl"`
	RoutingKey            pulumi.StringOutput    `pulumi:"routingKey"`
	SendResolved          pulumi.BoolPtrOutput   `pulumi:"sendResolved"`
	Slug                  pulumi.StringOutput    `pulumi:"slug"`
	StateMessage          pulumi.StringPtrOutput `pulumi:"stateMessage"`
	TlsInsecureSkipVerify pulumi.BoolPtrOutput   `pulumi:"tlsInsecureSkipVerify"`
}

// NewVictoropsAlertNotifier registers a new resource with the given unique name, arguments, and options.
func NewVictoropsAlertNotifier(ctx *pulumi.Context,
	name string, args *VictoropsAlertNotifierArgs, opts ...pulumi.ResourceOption) (*VictoropsAlertNotifier, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiKey == nil {
		return nil, errors.New("invalid value for required argument 'ApiKey'")
	}
	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	if args.RoutingKey == nil {
		return nil, errors.New("invalid value for required argument 'RoutingKey'")
	}
	if args.ApiKey != nil {
		args.ApiKey = pulumi.ToSecret(args.ApiKey).(pulumi.StringInput)
	}
	if args.BasicAuthPassword != nil {
		args.BasicAuthPassword = pulumi.ToSecret(args.BasicAuthPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"apiKey",
		"basicAuthPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VictoropsAlertNotifier
	err := ctx.RegisterResource("chronosphere:index/victoropsAlertNotifier:VictoropsAlertNotifier", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVictoropsAlertNotifier gets an existing VictoropsAlertNotifier resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVictoropsAlertNotifier(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VictoropsAlertNotifierState, opts ...pulumi.ResourceOption) (*VictoropsAlertNotifier, error) {
	var resource VictoropsAlertNotifier
	err := ctx.ReadResource("chronosphere:index/victoropsAlertNotifier:VictoropsAlertNotifier", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VictoropsAlertNotifier resources.
type victoropsAlertNotifierState struct {
	ApiKey            *string           `pulumi:"apiKey"`
	ApiUrl            *string           `pulumi:"apiUrl"`
	BasicAuthPassword *string           `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string           `pulumi:"basicAuthUsername"`
	BearerToken       *string           `pulumi:"bearerToken"`
	CustomFields      map[string]string `pulumi:"customFields"`
	EntityDisplayName *string           `pulumi:"entityDisplayName"`
	MessageType       *string           `pulumi:"messageType"`
	MonitoringTool    *string           `pulumi:"monitoringTool"`
	Name              *string           `pulumi:"name"`
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              *string `pulumi:"proxyUrl"`
	RoutingKey            *string `pulumi:"routingKey"`
	SendResolved          *bool   `pulumi:"sendResolved"`
	Slug                  *string `pulumi:"slug"`
	StateMessage          *string `pulumi:"stateMessage"`
	TlsInsecureSkipVerify *bool   `pulumi:"tlsInsecureSkipVerify"`
}

type VictoropsAlertNotifierState struct {
	ApiKey            pulumi.StringPtrInput
	ApiUrl            pulumi.StringPtrInput
	BasicAuthPassword pulumi.StringPtrInput
	BasicAuthUsername pulumi.StringPtrInput
	BearerToken       pulumi.StringPtrInput
	CustomFields      pulumi.StringMapInput
	EntityDisplayName pulumi.StringPtrInput
	MessageType       pulumi.StringPtrInput
	MonitoringTool    pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              pulumi.StringPtrInput
	RoutingKey            pulumi.StringPtrInput
	SendResolved          pulumi.BoolPtrInput
	Slug                  pulumi.StringPtrInput
	StateMessage          pulumi.StringPtrInput
	TlsInsecureSkipVerify pulumi.BoolPtrInput
}

func (VictoropsAlertNotifierState) ElementType() reflect.Type {
	return reflect.TypeOf((*victoropsAlertNotifierState)(nil)).Elem()
}

type victoropsAlertNotifierArgs struct {
	ApiKey            string            `pulumi:"apiKey"`
	ApiUrl            *string           `pulumi:"apiUrl"`
	BasicAuthPassword *string           `pulumi:"basicAuthPassword"`
	BasicAuthUsername *string           `pulumi:"basicAuthUsername"`
	BearerToken       *string           `pulumi:"bearerToken"`
	CustomFields      map[string]string `pulumi:"customFields"`
	EntityDisplayName *string           `pulumi:"entityDisplayName"`
	MessageType       *string           `pulumi:"messageType"`
	MonitoringTool    *string           `pulumi:"monitoringTool"`
	Name              string            `pulumi:"name"`
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              *string `pulumi:"proxyUrl"`
	RoutingKey            string  `pulumi:"routingKey"`
	SendResolved          *bool   `pulumi:"sendResolved"`
	Slug                  *string `pulumi:"slug"`
	StateMessage          *string `pulumi:"stateMessage"`
	TlsInsecureSkipVerify *bool   `pulumi:"tlsInsecureSkipVerify"`
}

// The set of arguments for constructing a VictoropsAlertNotifier resource.
type VictoropsAlertNotifierArgs struct {
	ApiKey            pulumi.StringInput
	ApiUrl            pulumi.StringPtrInput
	BasicAuthPassword pulumi.StringPtrInput
	BasicAuthUsername pulumi.StringPtrInput
	BearerToken       pulumi.StringPtrInput
	CustomFields      pulumi.StringMapInput
	EntityDisplayName pulumi.StringPtrInput
	MessageType       pulumi.StringPtrInput
	MonitoringTool    pulumi.StringPtrInput
	Name              pulumi.StringInput
	// Deprecated: custom proxy URLs are not supported
	ProxyUrl              pulumi.StringPtrInput
	RoutingKey            pulumi.StringInput
	SendResolved          pulumi.BoolPtrInput
	Slug                  pulumi.StringPtrInput
	StateMessage          pulumi.StringPtrInput
	TlsInsecureSkipVerify pulumi.BoolPtrInput
}

func (VictoropsAlertNotifierArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*victoropsAlertNotifierArgs)(nil)).Elem()
}

type VictoropsAlertNotifierInput interface {
	pulumi.Input

	ToVictoropsAlertNotifierOutput() VictoropsAlertNotifierOutput
	ToVictoropsAlertNotifierOutputWithContext(ctx context.Context) VictoropsAlertNotifierOutput
}

func (*VictoropsAlertNotifier) ElementType() reflect.Type {
	return reflect.TypeOf((**VictoropsAlertNotifier)(nil)).Elem()
}

func (i *VictoropsAlertNotifier) ToVictoropsAlertNotifierOutput() VictoropsAlertNotifierOutput {
	return i.ToVictoropsAlertNotifierOutputWithContext(context.Background())
}

func (i *VictoropsAlertNotifier) ToVictoropsAlertNotifierOutputWithContext(ctx context.Context) VictoropsAlertNotifierOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VictoropsAlertNotifierOutput)
}

// VictoropsAlertNotifierArrayInput is an input type that accepts VictoropsAlertNotifierArray and VictoropsAlertNotifierArrayOutput values.
// You can construct a concrete instance of `VictoropsAlertNotifierArrayInput` via:
//
//	VictoropsAlertNotifierArray{ VictoropsAlertNotifierArgs{...} }
type VictoropsAlertNotifierArrayInput interface {
	pulumi.Input

	ToVictoropsAlertNotifierArrayOutput() VictoropsAlertNotifierArrayOutput
	ToVictoropsAlertNotifierArrayOutputWithContext(context.Context) VictoropsAlertNotifierArrayOutput
}

type VictoropsAlertNotifierArray []VictoropsAlertNotifierInput

func (VictoropsAlertNotifierArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VictoropsAlertNotifier)(nil)).Elem()
}

func (i VictoropsAlertNotifierArray) ToVictoropsAlertNotifierArrayOutput() VictoropsAlertNotifierArrayOutput {
	return i.ToVictoropsAlertNotifierArrayOutputWithContext(context.Background())
}

func (i VictoropsAlertNotifierArray) ToVictoropsAlertNotifierArrayOutputWithContext(ctx context.Context) VictoropsAlertNotifierArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VictoropsAlertNotifierArrayOutput)
}

// VictoropsAlertNotifierMapInput is an input type that accepts VictoropsAlertNotifierMap and VictoropsAlertNotifierMapOutput values.
// You can construct a concrete instance of `VictoropsAlertNotifierMapInput` via:
//
//	VictoropsAlertNotifierMap{ "key": VictoropsAlertNotifierArgs{...} }
type VictoropsAlertNotifierMapInput interface {
	pulumi.Input

	ToVictoropsAlertNotifierMapOutput() VictoropsAlertNotifierMapOutput
	ToVictoropsAlertNotifierMapOutputWithContext(context.Context) VictoropsAlertNotifierMapOutput
}

type VictoropsAlertNotifierMap map[string]VictoropsAlertNotifierInput

func (VictoropsAlertNotifierMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VictoropsAlertNotifier)(nil)).Elem()
}

func (i VictoropsAlertNotifierMap) ToVictoropsAlertNotifierMapOutput() VictoropsAlertNotifierMapOutput {
	return i.ToVictoropsAlertNotifierMapOutputWithContext(context.Background())
}

func (i VictoropsAlertNotifierMap) ToVictoropsAlertNotifierMapOutputWithContext(ctx context.Context) VictoropsAlertNotifierMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VictoropsAlertNotifierMapOutput)
}

type VictoropsAlertNotifierOutput struct{ *pulumi.OutputState }

func (VictoropsAlertNotifierOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VictoropsAlertNotifier)(nil)).Elem()
}

func (o VictoropsAlertNotifierOutput) ToVictoropsAlertNotifierOutput() VictoropsAlertNotifierOutput {
	return o
}

func (o VictoropsAlertNotifierOutput) ToVictoropsAlertNotifierOutputWithContext(ctx context.Context) VictoropsAlertNotifierOutput {
	return o
}

func (o VictoropsAlertNotifierOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringOutput { return v.ApiKey }).(pulumi.StringOutput)
}

func (o VictoropsAlertNotifierOutput) ApiUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringPtrOutput { return v.ApiUrl }).(pulumi.StringPtrOutput)
}

func (o VictoropsAlertNotifierOutput) BasicAuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringPtrOutput { return v.BasicAuthPassword }).(pulumi.StringPtrOutput)
}

func (o VictoropsAlertNotifierOutput) BasicAuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringPtrOutput { return v.BasicAuthUsername }).(pulumi.StringPtrOutput)
}

func (o VictoropsAlertNotifierOutput) BearerToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringPtrOutput { return v.BearerToken }).(pulumi.StringPtrOutput)
}

func (o VictoropsAlertNotifierOutput) CustomFields() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringMapOutput { return v.CustomFields }).(pulumi.StringMapOutput)
}

func (o VictoropsAlertNotifierOutput) EntityDisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringPtrOutput { return v.EntityDisplayName }).(pulumi.StringPtrOutput)
}

func (o VictoropsAlertNotifierOutput) MessageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringPtrOutput { return v.MessageType }).(pulumi.StringPtrOutput)
}

func (o VictoropsAlertNotifierOutput) MonitoringTool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringPtrOutput { return v.MonitoringTool }).(pulumi.StringPtrOutput)
}

func (o VictoropsAlertNotifierOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Deprecated: custom proxy URLs are not supported
func (o VictoropsAlertNotifierOutput) ProxyUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringPtrOutput { return v.ProxyUrl }).(pulumi.StringPtrOutput)
}

func (o VictoropsAlertNotifierOutput) RoutingKey() pulumi.StringOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringOutput { return v.RoutingKey }).(pulumi.StringOutput)
}

func (o VictoropsAlertNotifierOutput) SendResolved() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.BoolPtrOutput { return v.SendResolved }).(pulumi.BoolPtrOutput)
}

func (o VictoropsAlertNotifierOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringOutput { return v.Slug }).(pulumi.StringOutput)
}

func (o VictoropsAlertNotifierOutput) StateMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.StringPtrOutput { return v.StateMessage }).(pulumi.StringPtrOutput)
}

func (o VictoropsAlertNotifierOutput) TlsInsecureSkipVerify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *VictoropsAlertNotifier) pulumi.BoolPtrOutput { return v.TlsInsecureSkipVerify }).(pulumi.BoolPtrOutput)
}

type VictoropsAlertNotifierArrayOutput struct{ *pulumi.OutputState }

func (VictoropsAlertNotifierArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VictoropsAlertNotifier)(nil)).Elem()
}

func (o VictoropsAlertNotifierArrayOutput) ToVictoropsAlertNotifierArrayOutput() VictoropsAlertNotifierArrayOutput {
	return o
}

func (o VictoropsAlertNotifierArrayOutput) ToVictoropsAlertNotifierArrayOutputWithContext(ctx context.Context) VictoropsAlertNotifierArrayOutput {
	return o
}

func (o VictoropsAlertNotifierArrayOutput) Index(i pulumi.IntInput) VictoropsAlertNotifierOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VictoropsAlertNotifier {
		return vs[0].([]*VictoropsAlertNotifier)[vs[1].(int)]
	}).(VictoropsAlertNotifierOutput)
}

type VictoropsAlertNotifierMapOutput struct{ *pulumi.OutputState }

func (VictoropsAlertNotifierMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VictoropsAlertNotifier)(nil)).Elem()
}

func (o VictoropsAlertNotifierMapOutput) ToVictoropsAlertNotifierMapOutput() VictoropsAlertNotifierMapOutput {
	return o
}

func (o VictoropsAlertNotifierMapOutput) ToVictoropsAlertNotifierMapOutputWithContext(ctx context.Context) VictoropsAlertNotifierMapOutput {
	return o
}

func (o VictoropsAlertNotifierMapOutput) MapIndex(k pulumi.StringInput) VictoropsAlertNotifierOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VictoropsAlertNotifier {
		return vs[0].(map[string]*VictoropsAlertNotifier)[vs[1].(string)]
	}).(VictoropsAlertNotifierOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VictoropsAlertNotifierInput)(nil)).Elem(), &VictoropsAlertNotifier{})
	pulumi.RegisterInputType(reflect.TypeOf((*VictoropsAlertNotifierArrayInput)(nil)).Elem(), VictoropsAlertNotifierArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VictoropsAlertNotifierMapInput)(nil)).Elem(), VictoropsAlertNotifierMap{})
	pulumi.RegisterOutputType(VictoropsAlertNotifierOutput{})
	pulumi.RegisterOutputType(VictoropsAlertNotifierArrayOutput{})
	pulumi.RegisterOutputType(VictoropsAlertNotifierMapOutput{})
}
