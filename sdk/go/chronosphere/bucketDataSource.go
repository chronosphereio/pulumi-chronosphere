// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func BucketDataSource(ctx *pulumi.Context, args *BucketDataSourceArgs, opts ...pulumi.InvokeOption) (*BucketDataSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv BucketDataSourceResult
	err := ctx.Invoke("chronosphere:index/bucketDataSource:BucketDataSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking BucketDataSource.
type BucketDataSourceArgs struct {
	Labels map[string]string `pulumi:"labels"`
	Name   *string           `pulumi:"name"`
	Slug   *string           `pulumi:"slug"`
}

// A collection of values returned by BucketDataSource.
type BucketDataSourceResult struct {
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id     string            `pulumi:"id"`
	Labels map[string]string `pulumi:"labels"`
	Name   *string           `pulumi:"name"`
	Slug   *string           `pulumi:"slug"`
}

func BucketDataSourceOutput(ctx *pulumi.Context, args BucketDataSourceOutputArgs, opts ...pulumi.InvokeOption) BucketDataSourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (BucketDataSourceResult, error) {
			args := v.(BucketDataSourceArgs)
			r, err := BucketDataSource(ctx, &args, opts...)
			var s BucketDataSourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(BucketDataSourceResultOutput)
}

// A collection of arguments for invoking BucketDataSource.
type BucketDataSourceOutputArgs struct {
	Labels pulumi.StringMapInput `pulumi:"labels"`
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Slug   pulumi.StringPtrInput `pulumi:"slug"`
}

func (BucketDataSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDataSourceArgs)(nil)).Elem()
}

// A collection of values returned by BucketDataSource.
type BucketDataSourceResultOutput struct{ *pulumi.OutputState }

func (BucketDataSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketDataSourceResult)(nil)).Elem()
}

func (o BucketDataSourceResultOutput) ToBucketDataSourceResultOutput() BucketDataSourceResultOutput {
	return o
}

func (o BucketDataSourceResultOutput) ToBucketDataSourceResultOutputWithContext(ctx context.Context) BucketDataSourceResultOutput {
	return o
}

func (o BucketDataSourceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v BucketDataSourceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o BucketDataSourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v BucketDataSourceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o BucketDataSourceResultOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v BucketDataSourceResult) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o BucketDataSourceResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDataSourceResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o BucketDataSourceResultOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BucketDataSourceResult) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketDataSourceResultOutput{})
}
