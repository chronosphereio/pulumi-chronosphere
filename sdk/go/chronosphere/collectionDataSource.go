// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package chronosphere

import (
	"context"
	"reflect"

	"github.com/chronosphereio/pulumi-chronosphere/sdk/go/chronosphere/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func CollectionDataSource(ctx *pulumi.Context, args *CollectionDataSourceArgs, opts ...pulumi.InvokeOption) (*CollectionDataSourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv CollectionDataSourceResult
	err := ctx.Invoke("chronosphere:index/collectionDataSource:CollectionDataSource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking CollectionDataSource.
type CollectionDataSourceArgs struct {
	Slug *string `pulumi:"slug"`
}

// A collection of values returned by CollectionDataSource.
type CollectionDataSourceResult struct {
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id   string  `pulumi:"id"`
	Name string  `pulumi:"name"`
	Slug *string `pulumi:"slug"`
}

func CollectionDataSourceOutput(ctx *pulumi.Context, args CollectionDataSourceOutputArgs, opts ...pulumi.InvokeOption) CollectionDataSourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (CollectionDataSourceResult, error) {
			args := v.(CollectionDataSourceArgs)
			r, err := CollectionDataSource(ctx, &args, opts...)
			var s CollectionDataSourceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(CollectionDataSourceResultOutput)
}

// A collection of arguments for invoking CollectionDataSource.
type CollectionDataSourceOutputArgs struct {
	Slug pulumi.StringPtrInput `pulumi:"slug"`
}

func (CollectionDataSourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionDataSourceArgs)(nil)).Elem()
}

// A collection of values returned by CollectionDataSource.
type CollectionDataSourceResultOutput struct{ *pulumi.OutputState }

func (CollectionDataSourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CollectionDataSourceResult)(nil)).Elem()
}

func (o CollectionDataSourceResultOutput) ToCollectionDataSourceResultOutput() CollectionDataSourceResultOutput {
	return o
}

func (o CollectionDataSourceResultOutput) ToCollectionDataSourceResultOutputWithContext(ctx context.Context) CollectionDataSourceResultOutput {
	return o
}

func (o CollectionDataSourceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v CollectionDataSourceResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o CollectionDataSourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v CollectionDataSourceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o CollectionDataSourceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CollectionDataSourceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o CollectionDataSourceResultOutput) Slug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CollectionDataSourceResult) *string { return v.Slug }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(CollectionDataSourceResultOutput{})
}
