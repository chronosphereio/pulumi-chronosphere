// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.LogAllocationConfigDefaultDatasetAllocation;
import io.chronosphere.chronosphere.outputs.LogAllocationConfigDefaultDatasetPriorities;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogAllocationConfigDefaultDataset {
    private LogAllocationConfigDefaultDatasetAllocation allocation;
    private @Nullable LogAllocationConfigDefaultDatasetPriorities priorities;

    private LogAllocationConfigDefaultDataset() {}
    public LogAllocationConfigDefaultDatasetAllocation allocation() {
        return this.allocation;
    }
    public Optional<LogAllocationConfigDefaultDatasetPriorities> priorities() {
        return Optional.ofNullable(this.priorities);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogAllocationConfigDefaultDataset defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private LogAllocationConfigDefaultDatasetAllocation allocation;
        private @Nullable LogAllocationConfigDefaultDatasetPriorities priorities;
        public Builder() {}
        public Builder(LogAllocationConfigDefaultDataset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocation = defaults.allocation;
    	      this.priorities = defaults.priorities;
        }

        @CustomType.Setter
        public Builder allocation(LogAllocationConfigDefaultDatasetAllocation allocation) {
            this.allocation = Objects.requireNonNull(allocation);
            return this;
        }
        @CustomType.Setter
        public Builder priorities(@Nullable LogAllocationConfigDefaultDatasetPriorities priorities) {
            this.priorities = priorities;
            return this;
        }
        public LogAllocationConfigDefaultDataset build() {
            final var o = new LogAllocationConfigDefaultDataset();
            o.allocation = allocation;
            o.priorities = priorities;
            return o;
        }
    }
}
