// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.ConsumptionBudgetThresholdInstantRateArgs;
import io.chronosphere.chronosphere.inputs.ConsumptionBudgetThresholdVolumeArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConsumptionBudgetThresholdArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsumptionBudgetThresholdArgs Empty = new ConsumptionBudgetThresholdArgs();

    @Import(name="action")
    private @Nullable Output<String> action;

    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    @Import(name="instantRate")
    private @Nullable Output<ConsumptionBudgetThresholdInstantRateArgs> instantRate;

    public Optional<Output<ConsumptionBudgetThresholdInstantRateArgs>> instantRate() {
        return Optional.ofNullable(this.instantRate);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="volume")
    private @Nullable Output<ConsumptionBudgetThresholdVolumeArgs> volume;

    public Optional<Output<ConsumptionBudgetThresholdVolumeArgs>> volume() {
        return Optional.ofNullable(this.volume);
    }

    private ConsumptionBudgetThresholdArgs() {}

    private ConsumptionBudgetThresholdArgs(ConsumptionBudgetThresholdArgs $) {
        this.action = $.action;
        this.instantRate = $.instantRate;
        this.type = $.type;
        this.volume = $.volume;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumptionBudgetThresholdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumptionBudgetThresholdArgs $;

        public Builder() {
            $ = new ConsumptionBudgetThresholdArgs();
        }

        public Builder(ConsumptionBudgetThresholdArgs defaults) {
            $ = new ConsumptionBudgetThresholdArgs(Objects.requireNonNull(defaults));
        }

        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        public Builder action(String action) {
            return action(Output.of(action));
        }

        public Builder instantRate(@Nullable Output<ConsumptionBudgetThresholdInstantRateArgs> instantRate) {
            $.instantRate = instantRate;
            return this;
        }

        public Builder instantRate(ConsumptionBudgetThresholdInstantRateArgs instantRate) {
            return instantRate(Output.of(instantRate));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder volume(@Nullable Output<ConsumptionBudgetThresholdVolumeArgs> volume) {
            $.volume = volume;
            return this;
        }

        public Builder volume(ConsumptionBudgetThresholdVolumeArgs volume) {
            return volume(Output.of(volume));
        }

        public ConsumptionBudgetThresholdArgs build() {
            return $;
        }
    }

}
