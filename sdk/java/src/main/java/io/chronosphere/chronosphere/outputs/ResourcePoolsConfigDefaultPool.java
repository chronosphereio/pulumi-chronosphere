// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.ResourcePoolsConfigDefaultPoolAllocation;
import io.chronosphere.chronosphere.outputs.ResourcePoolsConfigDefaultPoolPriorities;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ResourcePoolsConfigDefaultPool {
    private ResourcePoolsConfigDefaultPoolAllocation allocation;
    private @Nullable ResourcePoolsConfigDefaultPoolPriorities priorities;

    private ResourcePoolsConfigDefaultPool() {}
    public ResourcePoolsConfigDefaultPoolAllocation allocation() {
        return this.allocation;
    }
    public Optional<ResourcePoolsConfigDefaultPoolPriorities> priorities() {
        return Optional.ofNullable(this.priorities);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePoolsConfigDefaultPool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private ResourcePoolsConfigDefaultPoolAllocation allocation;
        private @Nullable ResourcePoolsConfigDefaultPoolPriorities priorities;
        public Builder() {}
        public Builder(ResourcePoolsConfigDefaultPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allocation = defaults.allocation;
    	      this.priorities = defaults.priorities;
        }

        @CustomType.Setter
        public Builder allocation(ResourcePoolsConfigDefaultPoolAllocation allocation) {
            this.allocation = Objects.requireNonNull(allocation);
            return this;
        }
        @CustomType.Setter
        public Builder priorities(@Nullable ResourcePoolsConfigDefaultPoolPriorities priorities) {
            this.priorities = priorities;
            return this;
        }
        public ResourcePoolsConfigDefaultPool build() {
            final var o = new ResourcePoolsConfigDefaultPool();
            o.allocation = allocation;
            o.priorities = priorities;
            return o;
        }
    }
}
