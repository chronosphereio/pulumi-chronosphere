// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.TraceMetricsRuleTraceFilterSpanArgs;
import io.chronosphere.chronosphere.inputs.TraceMetricsRuleTraceFilterTraceArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TraceMetricsRuleTraceFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final TraceMetricsRuleTraceFilterArgs Empty = new TraceMetricsRuleTraceFilterArgs();

    @Import(name="spans")
    private @Nullable Output<List<TraceMetricsRuleTraceFilterSpanArgs>> spans;

    public Optional<Output<List<TraceMetricsRuleTraceFilterSpanArgs>>> spans() {
        return Optional.ofNullable(this.spans);
    }

    @Import(name="trace")
    private @Nullable Output<TraceMetricsRuleTraceFilterTraceArgs> trace;

    public Optional<Output<TraceMetricsRuleTraceFilterTraceArgs>> trace() {
        return Optional.ofNullable(this.trace);
    }

    private TraceMetricsRuleTraceFilterArgs() {}

    private TraceMetricsRuleTraceFilterArgs(TraceMetricsRuleTraceFilterArgs $) {
        this.spans = $.spans;
        this.trace = $.trace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TraceMetricsRuleTraceFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TraceMetricsRuleTraceFilterArgs $;

        public Builder() {
            $ = new TraceMetricsRuleTraceFilterArgs();
        }

        public Builder(TraceMetricsRuleTraceFilterArgs defaults) {
            $ = new TraceMetricsRuleTraceFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder spans(@Nullable Output<List<TraceMetricsRuleTraceFilterSpanArgs>> spans) {
            $.spans = spans;
            return this;
        }

        public Builder spans(List<TraceMetricsRuleTraceFilterSpanArgs> spans) {
            return spans(Output.of(spans));
        }

        public Builder spans(TraceMetricsRuleTraceFilterSpanArgs... spans) {
            return spans(List.of(spans));
        }

        public Builder trace(@Nullable Output<TraceMetricsRuleTraceFilterTraceArgs> trace) {
            $.trace = trace;
            return this;
        }

        public Builder trace(TraceMetricsRuleTraceFilterTraceArgs trace) {
            return trace(Output.of(trace));
        }

        public TraceMetricsRuleTraceFilterArgs build() {
            return $;
        }
    }

}
