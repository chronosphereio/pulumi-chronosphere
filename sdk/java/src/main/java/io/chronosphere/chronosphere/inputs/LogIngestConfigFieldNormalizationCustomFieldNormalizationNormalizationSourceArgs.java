// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs Empty = new LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs();

    @Import(name="selector", required=true)
    private Output<String> selector;

    public Output<String> selector() {
        return this.selector;
    }

    private LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs() {}

    private LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs(LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs $) {
        this.selector = $.selector;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs $;

        public Builder() {
            $ = new LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs();
        }

        public Builder(LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs defaults) {
            $ = new LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs(Objects.requireNonNull(defaults));
        }

        public Builder selector(Output<String> selector) {
            $.selector = selector;
            return this;
        }

        public Builder selector(String selector) {
            return selector(Output.of(selector));
        }

        public LogIngestConfigFieldNormalizationCustomFieldNormalizationNormalizationSourceArgs build() {
            $.selector = Objects.requireNonNull($.selector, "expected parameter 'selector' to be non-null");
            return $;
        }
    }

}
