// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.TraceTailSamplingRulesDefaultSampleRateArgs;
import io.chronosphere.chronosphere.inputs.TraceTailSamplingRulesRuleArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TraceTailSamplingRulesState extends com.pulumi.resources.ResourceArgs {

    public static final TraceTailSamplingRulesState Empty = new TraceTailSamplingRulesState();

    @Import(name="defaultSampleRate")
    private @Nullable Output<TraceTailSamplingRulesDefaultSampleRateArgs> defaultSampleRate;

    public Optional<Output<TraceTailSamplingRulesDefaultSampleRateArgs>> defaultSampleRate() {
        return Optional.ofNullable(this.defaultSampleRate);
    }

    @Import(name="rules")
    private @Nullable Output<List<TraceTailSamplingRulesRuleArgs>> rules;

    public Optional<Output<List<TraceTailSamplingRulesRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private TraceTailSamplingRulesState() {}

    private TraceTailSamplingRulesState(TraceTailSamplingRulesState $) {
        this.defaultSampleRate = $.defaultSampleRate;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TraceTailSamplingRulesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TraceTailSamplingRulesState $;

        public Builder() {
            $ = new TraceTailSamplingRulesState();
        }

        public Builder(TraceTailSamplingRulesState defaults) {
            $ = new TraceTailSamplingRulesState(Objects.requireNonNull(defaults));
        }

        public Builder defaultSampleRate(@Nullable Output<TraceTailSamplingRulesDefaultSampleRateArgs> defaultSampleRate) {
            $.defaultSampleRate = defaultSampleRate;
            return this;
        }

        public Builder defaultSampleRate(TraceTailSamplingRulesDefaultSampleRateArgs defaultSampleRate) {
            return defaultSampleRate(Output.of(defaultSampleRate));
        }

        public Builder rules(@Nullable Output<List<TraceTailSamplingRulesRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        public Builder rules(List<TraceTailSamplingRulesRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        public Builder rules(TraceTailSamplingRulesRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public TraceTailSamplingRulesState build() {
            return $;
        }
    }

}
