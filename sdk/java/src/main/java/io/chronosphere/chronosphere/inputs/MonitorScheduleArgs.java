// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.MonitorScheduleRangeArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorScheduleArgs Empty = new MonitorScheduleArgs();

    @Import(name="ranges")
    private @Nullable Output<List<MonitorScheduleRangeArgs>> ranges;

    public Optional<Output<List<MonitorScheduleRangeArgs>>> ranges() {
        return Optional.ofNullable(this.ranges);
    }

    @Import(name="timezone", required=true)
    private Output<String> timezone;

    public Output<String> timezone() {
        return this.timezone;
    }

    private MonitorScheduleArgs() {}

    private MonitorScheduleArgs(MonitorScheduleArgs $) {
        this.ranges = $.ranges;
        this.timezone = $.timezone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorScheduleArgs $;

        public Builder() {
            $ = new MonitorScheduleArgs();
        }

        public Builder(MonitorScheduleArgs defaults) {
            $ = new MonitorScheduleArgs(Objects.requireNonNull(defaults));
        }

        public Builder ranges(@Nullable Output<List<MonitorScheduleRangeArgs>> ranges) {
            $.ranges = ranges;
            return this;
        }

        public Builder ranges(List<MonitorScheduleRangeArgs> ranges) {
            return ranges(Output.of(ranges));
        }

        public Builder ranges(MonitorScheduleRangeArgs... ranges) {
            return ranges(List.of(ranges));
        }

        public Builder timezone(Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        public MonitorScheduleArgs build() {
            $.timezone = Objects.requireNonNull($.timezone, "expected parameter 'timezone' to be non-null");
            return $;
        }
    }

}
