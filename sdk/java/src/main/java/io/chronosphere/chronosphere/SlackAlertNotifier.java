// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.chronosphere.chronosphere.SlackAlertNotifierArgs;
import io.chronosphere.chronosphere.Utilities;
import io.chronosphere.chronosphere.inputs.SlackAlertNotifierState;
import io.chronosphere.chronosphere.outputs.SlackAlertNotifierAction;
import io.chronosphere.chronosphere.outputs.SlackAlertNotifierField;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="chronosphere:index/slackAlertNotifier:SlackAlertNotifier")
public class SlackAlertNotifier extends com.pulumi.resources.CustomResource {
    @Export(name="actions", refs={List.class,SlackAlertNotifierAction.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SlackAlertNotifierAction>> actions;

    public Output<Optional<List<SlackAlertNotifierAction>>> actions() {
        return Codegen.optional(this.actions);
    }
    @Export(name="apiUrl", refs={String.class}, tree="[0]")
    private Output<String> apiUrl;

    public Output<String> apiUrl() {
        return this.apiUrl;
    }
    @Export(name="basicAuthPassword", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> basicAuthPassword;

    public Output<Optional<String>> basicAuthPassword() {
        return Codegen.optional(this.basicAuthPassword);
    }
    @Export(name="basicAuthUsername", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> basicAuthUsername;

    public Output<Optional<String>> basicAuthUsername() {
        return Codegen.optional(this.basicAuthUsername);
    }
    @Export(name="bearerToken", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bearerToken;

    public Output<Optional<String>> bearerToken() {
        return Codegen.optional(this.bearerToken);
    }
    @Export(name="callbackId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> callbackId;

    public Output<Optional<String>> callbackId() {
        return Codegen.optional(this.callbackId);
    }
    @Export(name="channel", refs={String.class}, tree="[0]")
    private Output<String> channel;

    public Output<String> channel() {
        return this.channel;
    }
    @Export(name="color", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> color;

    public Output<Optional<String>> color() {
        return Codegen.optional(this.color);
    }
    @Export(name="fallback", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> fallback;

    public Output<Optional<String>> fallback() {
        return Codegen.optional(this.fallback);
    }
    @Export(name="fields", refs={List.class,SlackAlertNotifierField.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SlackAlertNotifierField>> fields;

    public Output<Optional<List<SlackAlertNotifierField>>> fields() {
        return Codegen.optional(this.fields);
    }
    @Export(name="footer", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> footer;

    public Output<Optional<String>> footer() {
        return Codegen.optional(this.footer);
    }
    @Export(name="iconEmoji", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> iconEmoji;

    public Output<Optional<String>> iconEmoji() {
        return Codegen.optional(this.iconEmoji);
    }
    @Export(name="iconUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> iconUrl;

    public Output<Optional<String>> iconUrl() {
        return Codegen.optional(this.iconUrl);
    }
    @Export(name="imageUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> imageUrl;

    public Output<Optional<String>> imageUrl() {
        return Codegen.optional(this.imageUrl);
    }
    @Export(name="linkNames", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> linkNames;

    public Output<Optional<Boolean>> linkNames() {
        return Codegen.optional(this.linkNames);
    }
    @Export(name="mrkdwnIns", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> mrkdwnIns;

    public Output<Optional<List<String>>> mrkdwnIns() {
        return Codegen.optional(this.mrkdwnIns);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="pretext", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> pretext;

    public Output<Optional<String>> pretext() {
        return Codegen.optional(this.pretext);
    }
    @Export(name="proxyUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> proxyUrl;

    public Output<Optional<String>> proxyUrl() {
        return Codegen.optional(this.proxyUrl);
    }
    @Export(name="sendResolved", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> sendResolved;

    public Output<Optional<Boolean>> sendResolved() {
        return Codegen.optional(this.sendResolved);
    }
    @Export(name="shortFields", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> shortFields;

    public Output<Optional<Boolean>> shortFields() {
        return Codegen.optional(this.shortFields);
    }
    @Export(name="slug", refs={String.class}, tree="[0]")
    private Output<String> slug;

    public Output<String> slug() {
        return this.slug;
    }
    @Export(name="text", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> text;

    public Output<Optional<String>> text() {
        return Codegen.optional(this.text);
    }
    @Export(name="thumbUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> thumbUrl;

    public Output<Optional<String>> thumbUrl() {
        return Codegen.optional(this.thumbUrl);
    }
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> title;

    public Output<Optional<String>> title() {
        return Codegen.optional(this.title);
    }
    @Export(name="titleLink", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> titleLink;

    public Output<Optional<String>> titleLink() {
        return Codegen.optional(this.titleLink);
    }
    @Export(name="tlsInsecureSkipVerify", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tlsInsecureSkipVerify;

    public Output<Optional<Boolean>> tlsInsecureSkipVerify() {
        return Codegen.optional(this.tlsInsecureSkipVerify);
    }
    @Export(name="username", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> username;

    public Output<Optional<String>> username() {
        return Codegen.optional(this.username);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SlackAlertNotifier(String name) {
        this(name, SlackAlertNotifierArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SlackAlertNotifier(String name, SlackAlertNotifierArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SlackAlertNotifier(String name, SlackAlertNotifierArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("chronosphere:index/slackAlertNotifier:SlackAlertNotifier", name, args == null ? SlackAlertNotifierArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SlackAlertNotifier(String name, Output<String> id, @Nullable SlackAlertNotifierState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("chronosphere:index/slackAlertNotifier:SlackAlertNotifier", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "apiUrl",
                "basicAuthPassword"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SlackAlertNotifier get(String name, Output<String> id, @Nullable SlackAlertNotifierState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SlackAlertNotifier(name, id, state, options);
    }
}
