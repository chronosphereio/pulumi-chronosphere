// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.chronosphere.chronosphere.RollupRuleArgs;
import io.chronosphere.chronosphere.Utilities;
import io.chronosphere.chronosphere.inputs.RollupRuleState;
import io.chronosphere.chronosphere.outputs.RollupRuleGraphiteLabelPolicy;
import io.chronosphere.chronosphere.outputs.RollupRuleStoragePolicies;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="chronosphere:index/rollupRule:RollupRule")
public class RollupRule extends com.pulumi.resources.CustomResource {
    @Export(name="aggregation", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> aggregation;

    public Output<Optional<String>> aggregation() {
        return Codegen.optional(this.aggregation);
    }
    @Export(name="bucketId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> bucketId;

    public Output<Optional<String>> bucketId() {
        return Codegen.optional(this.bucketId);
    }
    @Export(name="dropRaw", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> dropRaw;

    public Output<Optional<Boolean>> dropRaw() {
        return Codegen.optional(this.dropRaw);
    }
    @Export(name="excludeBies", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> excludeBies;

    public Output<Optional<List<String>>> excludeBies() {
        return Codegen.optional(this.excludeBies);
    }
    @Export(name="filter", refs={String.class}, tree="[0]")
    private Output<String> filter;

    public Output<String> filter() {
        return this.filter;
    }
    @Export(name="graphiteLabelPolicy", refs={RollupRuleGraphiteLabelPolicy.class}, tree="[0]")
    private Output</* @Nullable */ RollupRuleGraphiteLabelPolicy> graphiteLabelPolicy;

    public Output<Optional<RollupRuleGraphiteLabelPolicy>> graphiteLabelPolicy() {
        return Codegen.optional(this.graphiteLabelPolicy);
    }
    @Export(name="groupBies", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> groupBies;

    public Output<Optional<List<String>>> groupBies() {
        return Codegen.optional(this.groupBies);
    }
    @Export(name="interval", refs={String.class}, tree="[0]")
    private Output<String> interval;

    public Output<String> interval() {
        return this.interval;
    }
    @Export(name="metricType", refs={String.class}, tree="[0]")
    private Output<String> metricType;

    public Output<String> metricType() {
        return this.metricType;
    }
    @Export(name="metricTypeTag", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> metricTypeTag;

    public Output<Optional<Boolean>> metricTypeTag() {
        return Codegen.optional(this.metricTypeTag);
    }
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mode;

    public Output<Optional<String>> mode() {
        return Codegen.optional(this.mode);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="newMetric", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> newMetric;

    public Output<Optional<String>> newMetric() {
        return Codegen.optional(this.newMetric);
    }
    /**
     * @deprecated
     * permissive is no longer supported
     * 
     */
    @Deprecated /* permissive is no longer supported */
    @Export(name="permissive", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> permissive;

    public Output<Optional<Boolean>> permissive() {
        return Codegen.optional(this.permissive);
    }
    @Export(name="slug", refs={String.class}, tree="[0]")
    private Output<String> slug;

    public Output<String> slug() {
        return this.slug;
    }
    /**
     * @deprecated
     * use `interval` instead
     * 
     */
    @Deprecated /* use `interval` instead */
    @Export(name="storagePolicies", refs={RollupRuleStoragePolicies.class}, tree="[0]")
    private Output</* @Nullable */ RollupRuleStoragePolicies> storagePolicies;

    public Output<Optional<RollupRuleStoragePolicies>> storagePolicies() {
        return Codegen.optional(this.storagePolicies);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RollupRule(String name) {
        this(name, RollupRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RollupRule(String name, RollupRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RollupRule(String name, RollupRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("chronosphere:index/rollupRule:RollupRule", name, args == null ? RollupRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RollupRule(String name, Output<String> id, @Nullable RollupRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("chronosphere:index/rollupRule:RollupRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RollupRule get(String name, Output<String> id, @Nullable RollupRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RollupRule(name, id, state, options);
    }
}
