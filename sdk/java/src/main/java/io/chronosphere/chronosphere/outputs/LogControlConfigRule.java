// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleDropField;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleEmitMetrics;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleReplaceField;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleSample;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogControlConfigRule {
    private @Nullable LogControlConfigRuleDropField dropField;
    private @Nullable LogControlConfigRuleEmitMetrics emitMetrics;
    private @Nullable String filter;
    private @Nullable String mode;
    private @Nullable String name;
    private @Nullable LogControlConfigRuleReplaceField replaceField;
    private @Nullable LogControlConfigRuleSample sample;
    private @Nullable String type;

    private LogControlConfigRule() {}
    public Optional<LogControlConfigRuleDropField> dropField() {
        return Optional.ofNullable(this.dropField);
    }
    public Optional<LogControlConfigRuleEmitMetrics> emitMetrics() {
        return Optional.ofNullable(this.emitMetrics);
    }
    public Optional<String> filter() {
        return Optional.ofNullable(this.filter);
    }
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<LogControlConfigRuleReplaceField> replaceField() {
        return Optional.ofNullable(this.replaceField);
    }
    public Optional<LogControlConfigRuleSample> sample() {
        return Optional.ofNullable(this.sample);
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogControlConfigRule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable LogControlConfigRuleDropField dropField;
        private @Nullable LogControlConfigRuleEmitMetrics emitMetrics;
        private @Nullable String filter;
        private @Nullable String mode;
        private @Nullable String name;
        private @Nullable LogControlConfigRuleReplaceField replaceField;
        private @Nullable LogControlConfigRuleSample sample;
        private @Nullable String type;
        public Builder() {}
        public Builder(LogControlConfigRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dropField = defaults.dropField;
    	      this.emitMetrics = defaults.emitMetrics;
    	      this.filter = defaults.filter;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.replaceField = defaults.replaceField;
    	      this.sample = defaults.sample;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder dropField(@Nullable LogControlConfigRuleDropField dropField) {
            this.dropField = dropField;
            return this;
        }
        @CustomType.Setter
        public Builder emitMetrics(@Nullable LogControlConfigRuleEmitMetrics emitMetrics) {
            this.emitMetrics = emitMetrics;
            return this;
        }
        @CustomType.Setter
        public Builder filter(@Nullable String filter) {
            this.filter = filter;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder replaceField(@Nullable LogControlConfigRuleReplaceField replaceField) {
            this.replaceField = replaceField;
            return this;
        }
        @CustomType.Setter
        public Builder sample(@Nullable LogControlConfigRuleSample sample) {
            this.sample = sample;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public LogControlConfigRule build() {
            final var o = new LogControlConfigRule();
            o.dropField = dropField;
            o.emitMetrics = emitMetrics;
            o.filter = filter;
            o.mode = mode;
            o.name = name;
            o.replaceField = replaceField;
            o.sample = sample;
            o.type = type;
            return o;
        }
    }
}
