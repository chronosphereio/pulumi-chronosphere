// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GrafanaDashboardArgs extends com.pulumi.resources.ResourceArgs {

    public static final GrafanaDashboardArgs Empty = new GrafanaDashboardArgs();

    @Import(name="bucketId")
    private @Nullable Output<String> bucketId;

    public Optional<Output<String>> bucketId() {
        return Optional.ofNullable(this.bucketId);
    }

    @Import(name="collectionId")
    private @Nullable Output<String> collectionId;

    public Optional<Output<String>> collectionId() {
        return Optional.ofNullable(this.collectionId);
    }

    @Import(name="dashboardJson", required=true)
    private Output<String> dashboardJson;

    public Output<String> dashboardJson() {
        return this.dashboardJson;
    }

    private GrafanaDashboardArgs() {}

    private GrafanaDashboardArgs(GrafanaDashboardArgs $) {
        this.bucketId = $.bucketId;
        this.collectionId = $.collectionId;
        this.dashboardJson = $.dashboardJson;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GrafanaDashboardArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GrafanaDashboardArgs $;

        public Builder() {
            $ = new GrafanaDashboardArgs();
        }

        public Builder(GrafanaDashboardArgs defaults) {
            $ = new GrafanaDashboardArgs(Objects.requireNonNull(defaults));
        }

        public Builder bucketId(@Nullable Output<String> bucketId) {
            $.bucketId = bucketId;
            return this;
        }

        public Builder bucketId(String bucketId) {
            return bucketId(Output.of(bucketId));
        }

        public Builder collectionId(@Nullable Output<String> collectionId) {
            $.collectionId = collectionId;
            return this;
        }

        public Builder collectionId(String collectionId) {
            return collectionId(Output.of(collectionId));
        }

        public Builder dashboardJson(Output<String> dashboardJson) {
            $.dashboardJson = dashboardJson;
            return this;
        }

        public Builder dashboardJson(String dashboardJson) {
            return dashboardJson(Output.of(dashboardJson));
        }

        public GrafanaDashboardArgs build() {
            $.dashboardJson = Objects.requireNonNull($.dashboardJson, "expected parameter 'dashboardJson' to be non-null");
            return $;
        }
    }

}
