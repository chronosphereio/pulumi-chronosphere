// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogIngestConfigFieldParserParserKeyValueParserArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogIngestConfigFieldParserParserKeyValueParserArgs Empty = new LogIngestConfigFieldParserParserKeyValueParserArgs();

    @Import(name="delimiter", required=true)
    private Output<String> delimiter;

    public Output<String> delimiter() {
        return this.delimiter;
    }

    @Import(name="pairSeparator", required=true)
    private Output<String> pairSeparator;

    public Output<String> pairSeparator() {
        return this.pairSeparator;
    }

    @Import(name="trimSet")
    private @Nullable Output<String> trimSet;

    public Optional<Output<String>> trimSet() {
        return Optional.ofNullable(this.trimSet);
    }

    private LogIngestConfigFieldParserParserKeyValueParserArgs() {}

    private LogIngestConfigFieldParserParserKeyValueParserArgs(LogIngestConfigFieldParserParserKeyValueParserArgs $) {
        this.delimiter = $.delimiter;
        this.pairSeparator = $.pairSeparator;
        this.trimSet = $.trimSet;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogIngestConfigFieldParserParserKeyValueParserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogIngestConfigFieldParserParserKeyValueParserArgs $;

        public Builder() {
            $ = new LogIngestConfigFieldParserParserKeyValueParserArgs();
        }

        public Builder(LogIngestConfigFieldParserParserKeyValueParserArgs defaults) {
            $ = new LogIngestConfigFieldParserParserKeyValueParserArgs(Objects.requireNonNull(defaults));
        }

        public Builder delimiter(Output<String> delimiter) {
            $.delimiter = delimiter;
            return this;
        }

        public Builder delimiter(String delimiter) {
            return delimiter(Output.of(delimiter));
        }

        public Builder pairSeparator(Output<String> pairSeparator) {
            $.pairSeparator = pairSeparator;
            return this;
        }

        public Builder pairSeparator(String pairSeparator) {
            return pairSeparator(Output.of(pairSeparator));
        }

        public Builder trimSet(@Nullable Output<String> trimSet) {
            $.trimSet = trimSet;
            return this;
        }

        public Builder trimSet(String trimSet) {
            return trimSet(Output.of(trimSet));
        }

        public LogIngestConfigFieldParserParserKeyValueParserArgs build() {
            $.delimiter = Objects.requireNonNull($.delimiter, "expected parameter 'delimiter' to be non-null");
            $.pairSeparator = Objects.requireNonNull($.pairSeparator, "expected parameter 'pairSeparator' to be non-null");
            return $;
        }
    }

}
