// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BucketState extends com.pulumi.resources.ResourceArgs {

    public static final BucketState Empty = new BucketState();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="notificationPolicyData")
    private @Nullable Output<String> notificationPolicyData;

    public Optional<Output<String>> notificationPolicyData() {
        return Optional.ofNullable(this.notificationPolicyData);
    }

    @Import(name="notificationPolicyId")
    private @Nullable Output<String> notificationPolicyId;

    public Optional<Output<String>> notificationPolicyId() {
        return Optional.ofNullable(this.notificationPolicyId);
    }

    @Import(name="notificationPolicySlug")
    private @Nullable Output<String> notificationPolicySlug;

    public Optional<Output<String>> notificationPolicySlug() {
        return Optional.ofNullable(this.notificationPolicySlug);
    }

    @Import(name="slug")
    private @Nullable Output<String> slug;

    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    @Import(name="teamId")
    private @Nullable Output<String> teamId;

    public Optional<Output<String>> teamId() {
        return Optional.ofNullable(this.teamId);
    }

    private BucketState() {}

    private BucketState(BucketState $) {
        this.description = $.description;
        this.labels = $.labels;
        this.name = $.name;
        this.notificationPolicyData = $.notificationPolicyData;
        this.notificationPolicyId = $.notificationPolicyId;
        this.notificationPolicySlug = $.notificationPolicySlug;
        this.slug = $.slug;
        this.teamId = $.teamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BucketState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketState $;

        public Builder() {
            $ = new BucketState();
        }

        public Builder(BucketState defaults) {
            $ = new BucketState(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notificationPolicyData(@Nullable Output<String> notificationPolicyData) {
            $.notificationPolicyData = notificationPolicyData;
            return this;
        }

        public Builder notificationPolicyData(String notificationPolicyData) {
            return notificationPolicyData(Output.of(notificationPolicyData));
        }

        public Builder notificationPolicyId(@Nullable Output<String> notificationPolicyId) {
            $.notificationPolicyId = notificationPolicyId;
            return this;
        }

        public Builder notificationPolicyId(String notificationPolicyId) {
            return notificationPolicyId(Output.of(notificationPolicyId));
        }

        public Builder notificationPolicySlug(@Nullable Output<String> notificationPolicySlug) {
            $.notificationPolicySlug = notificationPolicySlug;
            return this;
        }

        public Builder notificationPolicySlug(String notificationPolicySlug) {
            return notificationPolicySlug(Output.of(notificationPolicySlug));
        }

        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        public Builder teamId(@Nullable Output<String> teamId) {
            $.teamId = teamId;
            return this;
        }

        public Builder teamId(String teamId) {
            return teamId(Output.of(teamId));
        }

        public BucketState build() {
            return $;
        }
    }

}
