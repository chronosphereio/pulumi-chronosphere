// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.DatasetConfigurationTraceDatasetArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetConfigurationArgs Empty = new DatasetConfigurationArgs();

    @Import(name="traceDataset")
    private @Nullable Output<DatasetConfigurationTraceDatasetArgs> traceDataset;

    public Optional<Output<DatasetConfigurationTraceDatasetArgs>> traceDataset() {
        return Optional.ofNullable(this.traceDataset);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private DatasetConfigurationArgs() {}

    private DatasetConfigurationArgs(DatasetConfigurationArgs $) {
        this.traceDataset = $.traceDataset;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetConfigurationArgs $;

        public Builder() {
            $ = new DatasetConfigurationArgs();
        }

        public Builder(DatasetConfigurationArgs defaults) {
            $ = new DatasetConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder traceDataset(@Nullable Output<DatasetConfigurationTraceDatasetArgs> traceDataset) {
            $.traceDataset = traceDataset;
            return this;
        }

        public Builder traceDataset(DatasetConfigurationTraceDatasetArgs traceDataset) {
            return traceDataset(Output.of(traceDataset));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DatasetConfigurationArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
