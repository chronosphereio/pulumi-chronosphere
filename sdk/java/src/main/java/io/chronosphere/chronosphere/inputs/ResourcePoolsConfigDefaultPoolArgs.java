// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.ResourcePoolsConfigDefaultPoolAllocationArgs;
import io.chronosphere.chronosphere.inputs.ResourcePoolsConfigDefaultPoolPrioritiesArgs;
import io.chronosphere.chronosphere.inputs.ResourcePoolsConfigDefaultPoolPriorityThresholdArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourcePoolsConfigDefaultPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePoolsConfigDefaultPoolArgs Empty = new ResourcePoolsConfigDefaultPoolArgs();

    @Import(name="allocation")
    private @Nullable Output<ResourcePoolsConfigDefaultPoolAllocationArgs> allocation;

    public Optional<Output<ResourcePoolsConfigDefaultPoolAllocationArgs>> allocation() {
        return Optional.ofNullable(this.allocation);
    }

    @Import(name="priorities")
    private @Nullable Output<ResourcePoolsConfigDefaultPoolPrioritiesArgs> priorities;

    public Optional<Output<ResourcePoolsConfigDefaultPoolPrioritiesArgs>> priorities() {
        return Optional.ofNullable(this.priorities);
    }

    @Import(name="priorityThresholds")
    private @Nullable Output<List<ResourcePoolsConfigDefaultPoolPriorityThresholdArgs>> priorityThresholds;

    public Optional<Output<List<ResourcePoolsConfigDefaultPoolPriorityThresholdArgs>>> priorityThresholds() {
        return Optional.ofNullable(this.priorityThresholds);
    }

    private ResourcePoolsConfigDefaultPoolArgs() {}

    private ResourcePoolsConfigDefaultPoolArgs(ResourcePoolsConfigDefaultPoolArgs $) {
        this.allocation = $.allocation;
        this.priorities = $.priorities;
        this.priorityThresholds = $.priorityThresholds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePoolsConfigDefaultPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePoolsConfigDefaultPoolArgs $;

        public Builder() {
            $ = new ResourcePoolsConfigDefaultPoolArgs();
        }

        public Builder(ResourcePoolsConfigDefaultPoolArgs defaults) {
            $ = new ResourcePoolsConfigDefaultPoolArgs(Objects.requireNonNull(defaults));
        }

        public Builder allocation(@Nullable Output<ResourcePoolsConfigDefaultPoolAllocationArgs> allocation) {
            $.allocation = allocation;
            return this;
        }

        public Builder allocation(ResourcePoolsConfigDefaultPoolAllocationArgs allocation) {
            return allocation(Output.of(allocation));
        }

        public Builder priorities(@Nullable Output<ResourcePoolsConfigDefaultPoolPrioritiesArgs> priorities) {
            $.priorities = priorities;
            return this;
        }

        public Builder priorities(ResourcePoolsConfigDefaultPoolPrioritiesArgs priorities) {
            return priorities(Output.of(priorities));
        }

        public Builder priorityThresholds(@Nullable Output<List<ResourcePoolsConfigDefaultPoolPriorityThresholdArgs>> priorityThresholds) {
            $.priorityThresholds = priorityThresholds;
            return this;
        }

        public Builder priorityThresholds(List<ResourcePoolsConfigDefaultPoolPriorityThresholdArgs> priorityThresholds) {
            return priorityThresholds(Output.of(priorityThresholds));
        }

        public Builder priorityThresholds(ResourcePoolsConfigDefaultPoolPriorityThresholdArgs... priorityThresholds) {
            return priorityThresholds(List.of(priorityThresholds));
        }

        public ResourcePoolsConfigDefaultPoolArgs build() {
            return $;
        }
    }

}
