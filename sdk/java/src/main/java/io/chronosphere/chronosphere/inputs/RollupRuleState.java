// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.RollupRuleStoragePoliciesArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RollupRuleState extends com.pulumi.resources.ResourceArgs {

    public static final RollupRuleState Empty = new RollupRuleState();

    @Import(name="aggregation")
    private @Nullable Output<String> aggregation;

    public Optional<Output<String>> aggregation() {
        return Optional.ofNullable(this.aggregation);
    }

    @Import(name="bucketId")
    private @Nullable Output<String> bucketId;

    public Optional<Output<String>> bucketId() {
        return Optional.ofNullable(this.bucketId);
    }

    @Import(name="dropRaw")
    private @Nullable Output<Boolean> dropRaw;

    public Optional<Output<Boolean>> dropRaw() {
        return Optional.ofNullable(this.dropRaw);
    }

    @Import(name="excludeBies")
    private @Nullable Output<List<String>> excludeBies;

    public Optional<Output<List<String>>> excludeBies() {
        return Optional.ofNullable(this.excludeBies);
    }

    @Import(name="filter")
    private @Nullable Output<String> filter;

    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    @Import(name="groupBies")
    private @Nullable Output<List<String>> groupBies;

    public Optional<Output<List<String>>> groupBies() {
        return Optional.ofNullable(this.groupBies);
    }

    @Import(name="interval")
    private @Nullable Output<String> interval;

    public Optional<Output<String>> interval() {
        return Optional.ofNullable(this.interval);
    }

    @Import(name="metricType")
    private @Nullable Output<String> metricType;

    public Optional<Output<String>> metricType() {
        return Optional.ofNullable(this.metricType);
    }

    @Import(name="metricTypeTag")
    private @Nullable Output<Boolean> metricTypeTag;

    public Optional<Output<Boolean>> metricTypeTag() {
        return Optional.ofNullable(this.metricTypeTag);
    }

    @Import(name="mode")
    private @Nullable Output<String> mode;

    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="newMetric")
    private @Nullable Output<String> newMetric;

    public Optional<Output<String>> newMetric() {
        return Optional.ofNullable(this.newMetric);
    }

    @Import(name="permissive")
    private @Nullable Output<Boolean> permissive;

    public Optional<Output<Boolean>> permissive() {
        return Optional.ofNullable(this.permissive);
    }

    @Import(name="slug")
    private @Nullable Output<String> slug;

    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    @Import(name="storagePolicies")
    private @Nullable Output<RollupRuleStoragePoliciesArgs> storagePolicies;

    public Optional<Output<RollupRuleStoragePoliciesArgs>> storagePolicies() {
        return Optional.ofNullable(this.storagePolicies);
    }

    private RollupRuleState() {}

    private RollupRuleState(RollupRuleState $) {
        this.aggregation = $.aggregation;
        this.bucketId = $.bucketId;
        this.dropRaw = $.dropRaw;
        this.excludeBies = $.excludeBies;
        this.filter = $.filter;
        this.groupBies = $.groupBies;
        this.interval = $.interval;
        this.metricType = $.metricType;
        this.metricTypeTag = $.metricTypeTag;
        this.mode = $.mode;
        this.name = $.name;
        this.newMetric = $.newMetric;
        this.permissive = $.permissive;
        this.slug = $.slug;
        this.storagePolicies = $.storagePolicies;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RollupRuleState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RollupRuleState $;

        public Builder() {
            $ = new RollupRuleState();
        }

        public Builder(RollupRuleState defaults) {
            $ = new RollupRuleState(Objects.requireNonNull(defaults));
        }

        public Builder aggregation(@Nullable Output<String> aggregation) {
            $.aggregation = aggregation;
            return this;
        }

        public Builder aggregation(String aggregation) {
            return aggregation(Output.of(aggregation));
        }

        public Builder bucketId(@Nullable Output<String> bucketId) {
            $.bucketId = bucketId;
            return this;
        }

        public Builder bucketId(String bucketId) {
            return bucketId(Output.of(bucketId));
        }

        public Builder dropRaw(@Nullable Output<Boolean> dropRaw) {
            $.dropRaw = dropRaw;
            return this;
        }

        public Builder dropRaw(Boolean dropRaw) {
            return dropRaw(Output.of(dropRaw));
        }

        public Builder excludeBies(@Nullable Output<List<String>> excludeBies) {
            $.excludeBies = excludeBies;
            return this;
        }

        public Builder excludeBies(List<String> excludeBies) {
            return excludeBies(Output.of(excludeBies));
        }

        public Builder excludeBies(String... excludeBies) {
            return excludeBies(List.of(excludeBies));
        }

        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        public Builder groupBies(@Nullable Output<List<String>> groupBies) {
            $.groupBies = groupBies;
            return this;
        }

        public Builder groupBies(List<String> groupBies) {
            return groupBies(Output.of(groupBies));
        }

        public Builder groupBies(String... groupBies) {
            return groupBies(List.of(groupBies));
        }

        public Builder interval(@Nullable Output<String> interval) {
            $.interval = interval;
            return this;
        }

        public Builder interval(String interval) {
            return interval(Output.of(interval));
        }

        public Builder metricType(@Nullable Output<String> metricType) {
            $.metricType = metricType;
            return this;
        }

        public Builder metricType(String metricType) {
            return metricType(Output.of(metricType));
        }

        public Builder metricTypeTag(@Nullable Output<Boolean> metricTypeTag) {
            $.metricTypeTag = metricTypeTag;
            return this;
        }

        public Builder metricTypeTag(Boolean metricTypeTag) {
            return metricTypeTag(Output.of(metricTypeTag));
        }

        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder newMetric(@Nullable Output<String> newMetric) {
            $.newMetric = newMetric;
            return this;
        }

        public Builder newMetric(String newMetric) {
            return newMetric(Output.of(newMetric));
        }

        public Builder permissive(@Nullable Output<Boolean> permissive) {
            $.permissive = permissive;
            return this;
        }

        public Builder permissive(Boolean permissive) {
            return permissive(Output.of(permissive));
        }

        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        public Builder storagePolicies(@Nullable Output<RollupRuleStoragePoliciesArgs> storagePolicies) {
            $.storagePolicies = storagePolicies;
            return this;
        }

        public Builder storagePolicies(RollupRuleStoragePoliciesArgs storagePolicies) {
            return storagePolicies(Output.of(storagePolicies));
        }

        public RollupRuleState build() {
            return $;
        }
    }

}
