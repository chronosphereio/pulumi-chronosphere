// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.MonitorSeriesConditionsCondition;
import io.chronosphere.chronosphere.outputs.MonitorSeriesConditionsOverride;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class MonitorSeriesConditions {
    private List<MonitorSeriesConditionsCondition> conditions;
    private @Nullable List<MonitorSeriesConditionsOverride> overrides;

    private MonitorSeriesConditions() {}
    public List<MonitorSeriesConditionsCondition> conditions() {
        return this.conditions;
    }
    public List<MonitorSeriesConditionsOverride> overrides() {
        return this.overrides == null ? List.of() : this.overrides;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorSeriesConditions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<MonitorSeriesConditionsCondition> conditions;
        private @Nullable List<MonitorSeriesConditionsOverride> overrides;
        public Builder() {}
        public Builder(MonitorSeriesConditions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.overrides = defaults.overrides;
        }

        @CustomType.Setter
        public Builder conditions(List<MonitorSeriesConditionsCondition> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(MonitorSeriesConditionsCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder overrides(@Nullable List<MonitorSeriesConditionsOverride> overrides) {
            this.overrides = overrides;
            return this;
        }
        public Builder overrides(MonitorSeriesConditionsOverride... overrides) {
            return overrides(List.of(overrides));
        }
        public MonitorSeriesConditions build() {
            final var o = new MonitorSeriesConditions();
            o.conditions = conditions;
            o.overrides = overrides;
            return o;
        }
    }
}
