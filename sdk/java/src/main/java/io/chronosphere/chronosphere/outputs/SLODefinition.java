// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.SLODefinitionReportingWindow;
import java.lang.Boolean;
import java.lang.Double;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SLODefinition {
    private @Nullable Boolean lowVolume;
    private Double objective;
    private List<SLODefinitionReportingWindow> reportingWindows;

    private SLODefinition() {}
    public Optional<Boolean> lowVolume() {
        return Optional.ofNullable(this.lowVolume);
    }
    public Double objective() {
        return this.objective;
    }
    public List<SLODefinitionReportingWindow> reportingWindows() {
        return this.reportingWindows;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SLODefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean lowVolume;
        private Double objective;
        private List<SLODefinitionReportingWindow> reportingWindows;
        public Builder() {}
        public Builder(SLODefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.lowVolume = defaults.lowVolume;
    	      this.objective = defaults.objective;
    	      this.reportingWindows = defaults.reportingWindows;
        }

        @CustomType.Setter
        public Builder lowVolume(@Nullable Boolean lowVolume) {
            this.lowVolume = lowVolume;
            return this;
        }
        @CustomType.Setter
        public Builder objective(Double objective) {
            this.objective = Objects.requireNonNull(objective);
            return this;
        }
        @CustomType.Setter
        public Builder reportingWindows(List<SLODefinitionReportingWindow> reportingWindows) {
            this.reportingWindows = Objects.requireNonNull(reportingWindows);
            return this;
        }
        public Builder reportingWindows(SLODefinitionReportingWindow... reportingWindows) {
            return reportingWindows(List.of(reportingWindows));
        }
        public SLODefinition build() {
            final var o = new SLODefinition();
            o.lowVolume = lowVolume;
            o.objective = objective;
            o.reportingWindows = reportingWindows;
            return o;
        }
    }
}
