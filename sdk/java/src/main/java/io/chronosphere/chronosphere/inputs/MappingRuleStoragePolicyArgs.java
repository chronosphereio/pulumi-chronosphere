// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class MappingRuleStoragePolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final MappingRuleStoragePolicyArgs Empty = new MappingRuleStoragePolicyArgs();

    @Import(name="resolution", required=true)
    private Output<String> resolution;

    public Output<String> resolution() {
        return this.resolution;
    }

    @Import(name="retention", required=true)
    private Output<String> retention;

    public Output<String> retention() {
        return this.retention;
    }

    private MappingRuleStoragePolicyArgs() {}

    private MappingRuleStoragePolicyArgs(MappingRuleStoragePolicyArgs $) {
        this.resolution = $.resolution;
        this.retention = $.retention;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MappingRuleStoragePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MappingRuleStoragePolicyArgs $;

        public Builder() {
            $ = new MappingRuleStoragePolicyArgs();
        }

        public Builder(MappingRuleStoragePolicyArgs defaults) {
            $ = new MappingRuleStoragePolicyArgs(Objects.requireNonNull(defaults));
        }

        public Builder resolution(Output<String> resolution) {
            $.resolution = resolution;
            return this;
        }

        public Builder resolution(String resolution) {
            return resolution(Output.of(resolution));
        }

        public Builder retention(Output<String> retention) {
            $.retention = retention;
            return this;
        }

        public Builder retention(String retention) {
            return retention(Output.of(retention));
        }

        public MappingRuleStoragePolicyArgs build() {
            $.resolution = Objects.requireNonNull($.resolution, "expected parameter 'resolution' to be non-null");
            $.retention = Objects.requireNonNull($.retention, "expected parameter 'retention' to be non-null");
            return $;
        }
    }

}
