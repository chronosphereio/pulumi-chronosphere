// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    @Import(name="apiToken")
    private @Nullable Output<String> apiToken;

    public Optional<Output<String>> apiToken() {
        return Optional.ofNullable(this.apiToken);
    }

    @Import(name="disableDryrun", json=true)
    private @Nullable Output<Boolean> disableDryrun;

    public Optional<Output<Boolean>> disableDryrun() {
        return Optional.ofNullable(this.disableDryrun);
    }

    @Import(name="entityNamespace")
    private @Nullable Output<String> entityNamespace;

    public Optional<Output<String>> entityNamespace() {
        return Optional.ofNullable(this.entityNamespace);
    }

    @Import(name="org")
    private @Nullable Output<String> org;

    public Optional<Output<String>> org() {
        return Optional.ofNullable(this.org);
    }

    @Import(name="unstable", json=true)
    private @Nullable Output<Boolean> unstable;

    public Optional<Output<Boolean>> unstable() {
        return Optional.ofNullable(this.unstable);
    }

    private ProviderArgs() {}

    private ProviderArgs(ProviderArgs $) {
        this.apiToken = $.apiToken;
        this.disableDryrun = $.disableDryrun;
        this.entityNamespace = $.entityNamespace;
        this.org = $.org;
        this.unstable = $.unstable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderArgs $;

        public Builder() {
            $ = new ProviderArgs();
        }

        public Builder(ProviderArgs defaults) {
            $ = new ProviderArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiToken(@Nullable Output<String> apiToken) {
            $.apiToken = apiToken;
            return this;
        }

        public Builder apiToken(String apiToken) {
            return apiToken(Output.of(apiToken));
        }

        public Builder disableDryrun(@Nullable Output<Boolean> disableDryrun) {
            $.disableDryrun = disableDryrun;
            return this;
        }

        public Builder disableDryrun(Boolean disableDryrun) {
            return disableDryrun(Output.of(disableDryrun));
        }

        public Builder entityNamespace(@Nullable Output<String> entityNamespace) {
            $.entityNamespace = entityNamespace;
            return this;
        }

        public Builder entityNamespace(String entityNamespace) {
            return entityNamespace(Output.of(entityNamespace));
        }

        public Builder org(@Nullable Output<String> org) {
            $.org = org;
            return this;
        }

        public Builder org(String org) {
            return org(Output.of(org));
        }

        public Builder unstable(@Nullable Output<Boolean> unstable) {
            $.unstable = unstable;
            return this;
        }

        public Builder unstable(Boolean unstable) {
            return unstable(Output.of(unstable));
        }

        public ProviderArgs build() {
            $.apiToken = Codegen.stringProp("apiToken").secret().arg($.apiToken).env("CHRONOSPHERE_API_TOKEN").getNullable();
            $.org = Codegen.stringProp("org").output().arg($.org).env("CHRONOSPHERE_ORG", "CHRONOSPHERE_ORG_NAME").getNullable();
            return $;
        }
    }

}
