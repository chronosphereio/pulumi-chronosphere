// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.SLOSliEndpointAvailabilityAdditionalPromqlFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SLOSliEndpointAvailabilityArgs extends com.pulumi.resources.ResourceArgs {

    public static final SLOSliEndpointAvailabilityArgs Empty = new SLOSliEndpointAvailabilityArgs();

    @Import(name="additionalPromqlFilters")
    private @Nullable Output<List<SLOSliEndpointAvailabilityAdditionalPromqlFilterArgs>> additionalPromqlFilters;

    public Optional<Output<List<SLOSliEndpointAvailabilityAdditionalPromqlFilterArgs>>> additionalPromqlFilters() {
        return Optional.ofNullable(this.additionalPromqlFilters);
    }

    @Import(name="endpointsMonitoreds", required=true)
    private Output<List<String>> endpointsMonitoreds;

    public Output<List<String>> endpointsMonitoreds() {
        return this.endpointsMonitoreds;
    }

    @Import(name="errorCodes")
    private @Nullable Output<List<String>> errorCodes;

    public Optional<Output<List<String>>> errorCodes() {
        return Optional.ofNullable(this.errorCodes);
    }

    @Import(name="successCodes")
    private @Nullable Output<List<String>> successCodes;

    public Optional<Output<List<String>>> successCodes() {
        return Optional.ofNullable(this.successCodes);
    }

    private SLOSliEndpointAvailabilityArgs() {}

    private SLOSliEndpointAvailabilityArgs(SLOSliEndpointAvailabilityArgs $) {
        this.additionalPromqlFilters = $.additionalPromqlFilters;
        this.endpointsMonitoreds = $.endpointsMonitoreds;
        this.errorCodes = $.errorCodes;
        this.successCodes = $.successCodes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SLOSliEndpointAvailabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SLOSliEndpointAvailabilityArgs $;

        public Builder() {
            $ = new SLOSliEndpointAvailabilityArgs();
        }

        public Builder(SLOSliEndpointAvailabilityArgs defaults) {
            $ = new SLOSliEndpointAvailabilityArgs(Objects.requireNonNull(defaults));
        }

        public Builder additionalPromqlFilters(@Nullable Output<List<SLOSliEndpointAvailabilityAdditionalPromqlFilterArgs>> additionalPromqlFilters) {
            $.additionalPromqlFilters = additionalPromqlFilters;
            return this;
        }

        public Builder additionalPromqlFilters(List<SLOSliEndpointAvailabilityAdditionalPromqlFilterArgs> additionalPromqlFilters) {
            return additionalPromqlFilters(Output.of(additionalPromqlFilters));
        }

        public Builder additionalPromqlFilters(SLOSliEndpointAvailabilityAdditionalPromqlFilterArgs... additionalPromqlFilters) {
            return additionalPromqlFilters(List.of(additionalPromqlFilters));
        }

        public Builder endpointsMonitoreds(Output<List<String>> endpointsMonitoreds) {
            $.endpointsMonitoreds = endpointsMonitoreds;
            return this;
        }

        public Builder endpointsMonitoreds(List<String> endpointsMonitoreds) {
            return endpointsMonitoreds(Output.of(endpointsMonitoreds));
        }

        public Builder endpointsMonitoreds(String... endpointsMonitoreds) {
            return endpointsMonitoreds(List.of(endpointsMonitoreds));
        }

        public Builder errorCodes(@Nullable Output<List<String>> errorCodes) {
            $.errorCodes = errorCodes;
            return this;
        }

        public Builder errorCodes(List<String> errorCodes) {
            return errorCodes(Output.of(errorCodes));
        }

        public Builder errorCodes(String... errorCodes) {
            return errorCodes(List.of(errorCodes));
        }

        public Builder successCodes(@Nullable Output<List<String>> successCodes) {
            $.successCodes = successCodes;
            return this;
        }

        public Builder successCodes(List<String> successCodes) {
            return successCodes(Output.of(successCodes));
        }

        public Builder successCodes(String... successCodes) {
            return successCodes(List.of(successCodes));
        }

        public SLOSliEndpointAvailabilityArgs build() {
            $.endpointsMonitoreds = Objects.requireNonNull($.endpointsMonitoreds, "expected parameter 'endpointsMonitoreds' to be non-null");
            return $;
        }
    }

}
