// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs Empty = new ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs();

    @Import(name="conditions")
    private @Nullable Output<List<ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterConditionArgs>> conditions;

    public Optional<Output<List<ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    @Import(name="operator")
    private @Nullable Output<String> operator;

    public Optional<Output<String>> operator() {
        return Optional.ofNullable(this.operator);
    }

    private ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs() {}

    private ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs(ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs $) {
        this.conditions = $.conditions;
        this.operator = $.operator;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs $;

        public Builder() {
            $ = new ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs();
        }

        public Builder(ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs defaults) {
            $ = new ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditions(@Nullable Output<List<ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder operator(@Nullable Output<String> operator) {
            $.operator = operator;
            return this;
        }

        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        public ConsumptionConfigPartitionPartitionPartitionPartitionPartitionFilterArgs build() {
            return $;
        }
    }

}
