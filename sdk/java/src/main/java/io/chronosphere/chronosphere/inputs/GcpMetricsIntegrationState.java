// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.GcpMetricsIntegrationMetricGroupArgs;
import io.chronosphere.chronosphere.inputs.GcpMetricsIntegrationServiceAccountArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GcpMetricsIntegrationState extends com.pulumi.resources.ResourceArgs {

    public static final GcpMetricsIntegrationState Empty = new GcpMetricsIntegrationState();

    @Import(name="metricGroups")
    private @Nullable Output<List<GcpMetricsIntegrationMetricGroupArgs>> metricGroups;

    public Optional<Output<List<GcpMetricsIntegrationMetricGroupArgs>>> metricGroups() {
        return Optional.ofNullable(this.metricGroups);
    }

    @Import(name="serviceAccount")
    private @Nullable Output<GcpMetricsIntegrationServiceAccountArgs> serviceAccount;

    public Optional<Output<GcpMetricsIntegrationServiceAccountArgs>> serviceAccount() {
        return Optional.ofNullable(this.serviceAccount);
    }

    @Import(name="slug")
    private @Nullable Output<String> slug;

    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    private GcpMetricsIntegrationState() {}

    private GcpMetricsIntegrationState(GcpMetricsIntegrationState $) {
        this.metricGroups = $.metricGroups;
        this.serviceAccount = $.serviceAccount;
        this.slug = $.slug;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GcpMetricsIntegrationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GcpMetricsIntegrationState $;

        public Builder() {
            $ = new GcpMetricsIntegrationState();
        }

        public Builder(GcpMetricsIntegrationState defaults) {
            $ = new GcpMetricsIntegrationState(Objects.requireNonNull(defaults));
        }

        public Builder metricGroups(@Nullable Output<List<GcpMetricsIntegrationMetricGroupArgs>> metricGroups) {
            $.metricGroups = metricGroups;
            return this;
        }

        public Builder metricGroups(List<GcpMetricsIntegrationMetricGroupArgs> metricGroups) {
            return metricGroups(Output.of(metricGroups));
        }

        public Builder metricGroups(GcpMetricsIntegrationMetricGroupArgs... metricGroups) {
            return metricGroups(List.of(metricGroups));
        }

        public Builder serviceAccount(@Nullable Output<GcpMetricsIntegrationServiceAccountArgs> serviceAccount) {
            $.serviceAccount = serviceAccount;
            return this;
        }

        public Builder serviceAccount(GcpMetricsIntegrationServiceAccountArgs serviceAccount) {
            return serviceAccount(Output.of(serviceAccount));
        }

        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        public GcpMetricsIntegrationState build() {
            return $;
        }
    }

}
