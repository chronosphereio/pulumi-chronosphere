// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleEmitMetricsCounter;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleEmitMetricsGauge;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleEmitMetricsHistogram;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleEmitMetricsLabel;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogControlConfigRuleEmitMetrics {
    private @Nullable LogControlConfigRuleEmitMetricsCounter counter;
    private @Nullable Boolean dropLog;
    private @Nullable LogControlConfigRuleEmitMetricsGauge gauge;
    private @Nullable LogControlConfigRuleEmitMetricsHistogram histogram;
    private @Nullable List<LogControlConfigRuleEmitMetricsLabel> labels;
    private @Nullable String mode;
    private @Nullable String name;

    private LogControlConfigRuleEmitMetrics() {}
    public Optional<LogControlConfigRuleEmitMetricsCounter> counter() {
        return Optional.ofNullable(this.counter);
    }
    public Optional<Boolean> dropLog() {
        return Optional.ofNullable(this.dropLog);
    }
    public Optional<LogControlConfigRuleEmitMetricsGauge> gauge() {
        return Optional.ofNullable(this.gauge);
    }
    public Optional<LogControlConfigRuleEmitMetricsHistogram> histogram() {
        return Optional.ofNullable(this.histogram);
    }
    public List<LogControlConfigRuleEmitMetricsLabel> labels() {
        return this.labels == null ? List.of() : this.labels;
    }
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogControlConfigRuleEmitMetrics defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable LogControlConfigRuleEmitMetricsCounter counter;
        private @Nullable Boolean dropLog;
        private @Nullable LogControlConfigRuleEmitMetricsGauge gauge;
        private @Nullable LogControlConfigRuleEmitMetricsHistogram histogram;
        private @Nullable List<LogControlConfigRuleEmitMetricsLabel> labels;
        private @Nullable String mode;
        private @Nullable String name;
        public Builder() {}
        public Builder(LogControlConfigRuleEmitMetrics defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.counter = defaults.counter;
    	      this.dropLog = defaults.dropLog;
    	      this.gauge = defaults.gauge;
    	      this.histogram = defaults.histogram;
    	      this.labels = defaults.labels;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder counter(@Nullable LogControlConfigRuleEmitMetricsCounter counter) {
            this.counter = counter;
            return this;
        }
        @CustomType.Setter
        public Builder dropLog(@Nullable Boolean dropLog) {
            this.dropLog = dropLog;
            return this;
        }
        @CustomType.Setter
        public Builder gauge(@Nullable LogControlConfigRuleEmitMetricsGauge gauge) {
            this.gauge = gauge;
            return this;
        }
        @CustomType.Setter
        public Builder histogram(@Nullable LogControlConfigRuleEmitMetricsHistogram histogram) {
            this.histogram = histogram;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable List<LogControlConfigRuleEmitMetricsLabel> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(LogControlConfigRuleEmitMetricsLabel... labels) {
            return labels(List.of(labels));
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public LogControlConfigRuleEmitMetrics build() {
            final var o = new LogControlConfigRuleEmitMetrics();
            o.counter = counter;
            o.dropLog = dropLog;
            o.gauge = gauge;
            o.histogram = histogram;
            o.labels = labels;
            o.mode = mode;
            o.name = name;
            return o;
        }
    }
}
