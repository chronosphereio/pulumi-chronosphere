// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.LogIngestConfigPlaintextParserParserArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogIngestConfigPlaintextParserArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogIngestConfigPlaintextParserArgs Empty = new LogIngestConfigPlaintextParserArgs();

    @Import(name="keepOriginal")
    private @Nullable Output<Boolean> keepOriginal;

    public Optional<Output<Boolean>> keepOriginal() {
        return Optional.ofNullable(this.keepOriginal);
    }

    @Import(name="mode")
    private @Nullable Output<String> mode;

    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="parser", required=true)
    private Output<LogIngestConfigPlaintextParserParserArgs> parser;

    public Output<LogIngestConfigPlaintextParserParserArgs> parser() {
        return this.parser;
    }

    private LogIngestConfigPlaintextParserArgs() {}

    private LogIngestConfigPlaintextParserArgs(LogIngestConfigPlaintextParserArgs $) {
        this.keepOriginal = $.keepOriginal;
        this.mode = $.mode;
        this.name = $.name;
        this.parser = $.parser;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogIngestConfigPlaintextParserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogIngestConfigPlaintextParserArgs $;

        public Builder() {
            $ = new LogIngestConfigPlaintextParserArgs();
        }

        public Builder(LogIngestConfigPlaintextParserArgs defaults) {
            $ = new LogIngestConfigPlaintextParserArgs(Objects.requireNonNull(defaults));
        }

        public Builder keepOriginal(@Nullable Output<Boolean> keepOriginal) {
            $.keepOriginal = keepOriginal;
            return this;
        }

        public Builder keepOriginal(Boolean keepOriginal) {
            return keepOriginal(Output.of(keepOriginal));
        }

        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder parser(Output<LogIngestConfigPlaintextParserParserArgs> parser) {
            $.parser = parser;
            return this;
        }

        public Builder parser(LogIngestConfigPlaintextParserParserArgs parser) {
            return parser(Output.of(parser));
        }

        public LogIngestConfigPlaintextParserArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.parser = Objects.requireNonNull($.parser, "expected parameter 'parser' to be non-null");
            return $;
        }
    }

}
