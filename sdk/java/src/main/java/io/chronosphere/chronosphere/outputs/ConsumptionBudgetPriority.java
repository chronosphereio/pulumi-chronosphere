// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.ConsumptionBudgetPriorityFilter;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConsumptionBudgetPriority {
    private @Nullable List<ConsumptionBudgetPriorityFilter> filters;
    private @Nullable Integer priority;

    private ConsumptionBudgetPriority() {}
    public List<ConsumptionBudgetPriorityFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<Integer> priority() {
        return Optional.ofNullable(this.priority);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConsumptionBudgetPriority defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ConsumptionBudgetPriorityFilter> filters;
        private @Nullable Integer priority;
        public Builder() {}
        public Builder(ConsumptionBudgetPriority defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.priority = defaults.priority;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<ConsumptionBudgetPriorityFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(ConsumptionBudgetPriorityFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder priority(@Nullable Integer priority) {
            this.priority = priority;
            return this;
        }
        public ConsumptionBudgetPriority build() {
            final var o = new ConsumptionBudgetPriority();
            o.filters = filters;
            o.priority = priority;
            return o;
        }
    }
}
