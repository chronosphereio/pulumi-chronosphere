// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.SLOSliCustomTimesliceIndicatorCondition;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SLOSliCustomTimesliceIndicator {
    private SLOSliCustomTimesliceIndicatorCondition condition;
    private String queryTemplate;
    private String timesliceSize;

    private SLOSliCustomTimesliceIndicator() {}
    public SLOSliCustomTimesliceIndicatorCondition condition() {
        return this.condition;
    }
    public String queryTemplate() {
        return this.queryTemplate;
    }
    public String timesliceSize() {
        return this.timesliceSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SLOSliCustomTimesliceIndicator defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private SLOSliCustomTimesliceIndicatorCondition condition;
        private String queryTemplate;
        private String timesliceSize;
        public Builder() {}
        public Builder(SLOSliCustomTimesliceIndicator defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
    	      this.queryTemplate = defaults.queryTemplate;
    	      this.timesliceSize = defaults.timesliceSize;
        }

        @CustomType.Setter
        public Builder condition(SLOSliCustomTimesliceIndicatorCondition condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }
        @CustomType.Setter
        public Builder queryTemplate(String queryTemplate) {
            this.queryTemplate = Objects.requireNonNull(queryTemplate);
            return this;
        }
        @CustomType.Setter
        public Builder timesliceSize(String timesliceSize) {
            this.timesliceSize = Objects.requireNonNull(timesliceSize);
            return this;
        }
        public SLOSliCustomTimesliceIndicator build() {
            final var o = new SLOSliCustomTimesliceIndicator();
            o.condition = condition;
            o.queryTemplate = queryTemplate;
            o.timesliceSize = timesliceSize;
            return o;
        }
    }
}
