// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogscaleActionSlackPostMessageActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogscaleActionSlackPostMessageActionArgs Empty = new LogscaleActionSlackPostMessageActionArgs();

    @Import(name="apiToken", required=true)
    private Output<String> apiToken;

    public Output<String> apiToken() {
        return this.apiToken;
    }

    @Import(name="channels", required=true)
    private Output<List<String>> channels;

    public Output<List<String>> channels() {
        return this.channels;
    }

    @Import(name="fields")
    private @Nullable Output<Map<String,String>> fields;

    public Optional<Output<Map<String,String>>> fields() {
        return Optional.ofNullable(this.fields);
    }

    @Import(name="useProxy")
    private @Nullable Output<Boolean> useProxy;

    public Optional<Output<Boolean>> useProxy() {
        return Optional.ofNullable(this.useProxy);
    }

    private LogscaleActionSlackPostMessageActionArgs() {}

    private LogscaleActionSlackPostMessageActionArgs(LogscaleActionSlackPostMessageActionArgs $) {
        this.apiToken = $.apiToken;
        this.channels = $.channels;
        this.fields = $.fields;
        this.useProxy = $.useProxy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogscaleActionSlackPostMessageActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogscaleActionSlackPostMessageActionArgs $;

        public Builder() {
            $ = new LogscaleActionSlackPostMessageActionArgs();
        }

        public Builder(LogscaleActionSlackPostMessageActionArgs defaults) {
            $ = new LogscaleActionSlackPostMessageActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder apiToken(Output<String> apiToken) {
            $.apiToken = apiToken;
            return this;
        }

        public Builder apiToken(String apiToken) {
            return apiToken(Output.of(apiToken));
        }

        public Builder channels(Output<List<String>> channels) {
            $.channels = channels;
            return this;
        }

        public Builder channels(List<String> channels) {
            return channels(Output.of(channels));
        }

        public Builder channels(String... channels) {
            return channels(List.of(channels));
        }

        public Builder fields(@Nullable Output<Map<String,String>> fields) {
            $.fields = fields;
            return this;
        }

        public Builder fields(Map<String,String> fields) {
            return fields(Output.of(fields));
        }

        public Builder useProxy(@Nullable Output<Boolean> useProxy) {
            $.useProxy = useProxy;
            return this;
        }

        public Builder useProxy(Boolean useProxy) {
            return useProxy(Output.of(useProxy));
        }

        public LogscaleActionSlackPostMessageActionArgs build() {
            $.apiToken = Objects.requireNonNull($.apiToken, "expected parameter 'apiToken' to be non-null");
            $.channels = Objects.requireNonNull($.channels, "expected parameter 'channels' to be non-null");
            return $;
        }
    }

}
