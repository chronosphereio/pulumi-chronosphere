// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.ConsumptionConfigPartitionPartitionPartitionPartitionFilter;
import io.chronosphere.chronosphere.outputs.ConsumptionConfigPartitionPartitionPartitionPartitionPartition;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConsumptionConfigPartitionPartitionPartitionPartition {
    private @Nullable List<ConsumptionConfigPartitionPartitionPartitionPartitionFilter> filters;
    private @Nullable String name;
    private @Nullable List<ConsumptionConfigPartitionPartitionPartitionPartitionPartition> partitions;
    private @Nullable String slug;

    private ConsumptionConfigPartitionPartitionPartitionPartition() {}
    public List<ConsumptionConfigPartitionPartitionPartitionPartitionFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public List<ConsumptionConfigPartitionPartitionPartitionPartitionPartition> partitions() {
        return this.partitions == null ? List.of() : this.partitions;
    }
    public Optional<String> slug() {
        return Optional.ofNullable(this.slug);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConsumptionConfigPartitionPartitionPartitionPartition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<ConsumptionConfigPartitionPartitionPartitionPartitionFilter> filters;
        private @Nullable String name;
        private @Nullable List<ConsumptionConfigPartitionPartitionPartitionPartitionPartition> partitions;
        private @Nullable String slug;
        public Builder() {}
        public Builder(ConsumptionConfigPartitionPartitionPartitionPartition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.name = defaults.name;
    	      this.partitions = defaults.partitions;
    	      this.slug = defaults.slug;
        }

        @CustomType.Setter
        public Builder filters(@Nullable List<ConsumptionConfigPartitionPartitionPartitionPartitionFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(ConsumptionConfigPartitionPartitionPartitionPartitionFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder partitions(@Nullable List<ConsumptionConfigPartitionPartitionPartitionPartitionPartition> partitions) {
            this.partitions = partitions;
            return this;
        }
        public Builder partitions(ConsumptionConfigPartitionPartitionPartitionPartitionPartition... partitions) {
            return partitions(List.of(partitions));
        }
        @CustomType.Setter
        public Builder slug(@Nullable String slug) {
            this.slug = slug;
            return this;
        }
        public ConsumptionConfigPartitionPartitionPartitionPartition build() {
            final var o = new ConsumptionConfigPartitionPartitionPartitionPartition();
            o.filters = filters;
            o.name = name;
            o.partitions = partitions;
            o.slug = slug;
            return o;
        }
    }
}
