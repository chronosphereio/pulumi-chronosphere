// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.SlackAlertNotifierActionArgs;
import io.chronosphere.chronosphere.inputs.SlackAlertNotifierFieldArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SlackAlertNotifierArgs extends com.pulumi.resources.ResourceArgs {

    public static final SlackAlertNotifierArgs Empty = new SlackAlertNotifierArgs();

    @Import(name="actions")
    private @Nullable Output<List<SlackAlertNotifierActionArgs>> actions;

    public Optional<Output<List<SlackAlertNotifierActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    @Import(name="apiUrl", required=true)
    private Output<String> apiUrl;

    public Output<String> apiUrl() {
        return this.apiUrl;
    }

    @Import(name="basicAuthPassword")
    private @Nullable Output<String> basicAuthPassword;

    public Optional<Output<String>> basicAuthPassword() {
        return Optional.ofNullable(this.basicAuthPassword);
    }

    @Import(name="basicAuthUsername")
    private @Nullable Output<String> basicAuthUsername;

    public Optional<Output<String>> basicAuthUsername() {
        return Optional.ofNullable(this.basicAuthUsername);
    }

    @Import(name="bearerToken")
    private @Nullable Output<String> bearerToken;

    public Optional<Output<String>> bearerToken() {
        return Optional.ofNullable(this.bearerToken);
    }

    @Import(name="callbackId")
    private @Nullable Output<String> callbackId;

    public Optional<Output<String>> callbackId() {
        return Optional.ofNullable(this.callbackId);
    }

    @Import(name="channel", required=true)
    private Output<String> channel;

    public Output<String> channel() {
        return this.channel;
    }

    @Import(name="color")
    private @Nullable Output<String> color;

    public Optional<Output<String>> color() {
        return Optional.ofNullable(this.color);
    }

    @Import(name="fallback")
    private @Nullable Output<String> fallback;

    public Optional<Output<String>> fallback() {
        return Optional.ofNullable(this.fallback);
    }

    @Import(name="fields")
    private @Nullable Output<List<SlackAlertNotifierFieldArgs>> fields;

    public Optional<Output<List<SlackAlertNotifierFieldArgs>>> fields() {
        return Optional.ofNullable(this.fields);
    }

    @Import(name="footer")
    private @Nullable Output<String> footer;

    public Optional<Output<String>> footer() {
        return Optional.ofNullable(this.footer);
    }

    @Import(name="iconEmoji")
    private @Nullable Output<String> iconEmoji;

    public Optional<Output<String>> iconEmoji() {
        return Optional.ofNullable(this.iconEmoji);
    }

    @Import(name="iconUrl")
    private @Nullable Output<String> iconUrl;

    public Optional<Output<String>> iconUrl() {
        return Optional.ofNullable(this.iconUrl);
    }

    @Import(name="imageUrl")
    private @Nullable Output<String> imageUrl;

    public Optional<Output<String>> imageUrl() {
        return Optional.ofNullable(this.imageUrl);
    }

    @Import(name="linkNames")
    private @Nullable Output<Boolean> linkNames;

    public Optional<Output<Boolean>> linkNames() {
        return Optional.ofNullable(this.linkNames);
    }

    @Import(name="mrkdwnIns")
    private @Nullable Output<List<String>> mrkdwnIns;

    public Optional<Output<List<String>>> mrkdwnIns() {
        return Optional.ofNullable(this.mrkdwnIns);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="pretext")
    private @Nullable Output<String> pretext;

    public Optional<Output<String>> pretext() {
        return Optional.ofNullable(this.pretext);
    }

    /**
     * @deprecated
     * custom proxy URLs are not supported
     * 
     */
    @Deprecated /* custom proxy URLs are not supported */
    @Import(name="proxyUrl")
    private @Nullable Output<String> proxyUrl;

    /**
     * @deprecated
     * custom proxy URLs are not supported
     * 
     */
    @Deprecated /* custom proxy URLs are not supported */
    public Optional<Output<String>> proxyUrl() {
        return Optional.ofNullable(this.proxyUrl);
    }

    @Import(name="sendResolved")
    private @Nullable Output<Boolean> sendResolved;

    public Optional<Output<Boolean>> sendResolved() {
        return Optional.ofNullable(this.sendResolved);
    }

    @Import(name="shortFields")
    private @Nullable Output<Boolean> shortFields;

    public Optional<Output<Boolean>> shortFields() {
        return Optional.ofNullable(this.shortFields);
    }

    @Import(name="slug")
    private @Nullable Output<String> slug;

    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    @Import(name="text")
    private @Nullable Output<String> text;

    public Optional<Output<String>> text() {
        return Optional.ofNullable(this.text);
    }

    @Import(name="thumbUrl")
    private @Nullable Output<String> thumbUrl;

    public Optional<Output<String>> thumbUrl() {
        return Optional.ofNullable(this.thumbUrl);
    }

    @Import(name="title")
    private @Nullable Output<String> title;

    public Optional<Output<String>> title() {
        return Optional.ofNullable(this.title);
    }

    @Import(name="titleLink")
    private @Nullable Output<String> titleLink;

    public Optional<Output<String>> titleLink() {
        return Optional.ofNullable(this.titleLink);
    }

    @Import(name="tlsInsecureSkipVerify")
    private @Nullable Output<Boolean> tlsInsecureSkipVerify;

    public Optional<Output<Boolean>> tlsInsecureSkipVerify() {
        return Optional.ofNullable(this.tlsInsecureSkipVerify);
    }

    @Import(name="username")
    private @Nullable Output<String> username;

    public Optional<Output<String>> username() {
        return Optional.ofNullable(this.username);
    }

    private SlackAlertNotifierArgs() {}

    private SlackAlertNotifierArgs(SlackAlertNotifierArgs $) {
        this.actions = $.actions;
        this.apiUrl = $.apiUrl;
        this.basicAuthPassword = $.basicAuthPassword;
        this.basicAuthUsername = $.basicAuthUsername;
        this.bearerToken = $.bearerToken;
        this.callbackId = $.callbackId;
        this.channel = $.channel;
        this.color = $.color;
        this.fallback = $.fallback;
        this.fields = $.fields;
        this.footer = $.footer;
        this.iconEmoji = $.iconEmoji;
        this.iconUrl = $.iconUrl;
        this.imageUrl = $.imageUrl;
        this.linkNames = $.linkNames;
        this.mrkdwnIns = $.mrkdwnIns;
        this.name = $.name;
        this.pretext = $.pretext;
        this.proxyUrl = $.proxyUrl;
        this.sendResolved = $.sendResolved;
        this.shortFields = $.shortFields;
        this.slug = $.slug;
        this.text = $.text;
        this.thumbUrl = $.thumbUrl;
        this.title = $.title;
        this.titleLink = $.titleLink;
        this.tlsInsecureSkipVerify = $.tlsInsecureSkipVerify;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SlackAlertNotifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SlackAlertNotifierArgs $;

        public Builder() {
            $ = new SlackAlertNotifierArgs();
        }

        public Builder(SlackAlertNotifierArgs defaults) {
            $ = new SlackAlertNotifierArgs(Objects.requireNonNull(defaults));
        }

        public Builder actions(@Nullable Output<List<SlackAlertNotifierActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(List<SlackAlertNotifierActionArgs> actions) {
            return actions(Output.of(actions));
        }

        public Builder actions(SlackAlertNotifierActionArgs... actions) {
            return actions(List.of(actions));
        }

        public Builder apiUrl(Output<String> apiUrl) {
            $.apiUrl = apiUrl;
            return this;
        }

        public Builder apiUrl(String apiUrl) {
            return apiUrl(Output.of(apiUrl));
        }

        public Builder basicAuthPassword(@Nullable Output<String> basicAuthPassword) {
            $.basicAuthPassword = basicAuthPassword;
            return this;
        }

        public Builder basicAuthPassword(String basicAuthPassword) {
            return basicAuthPassword(Output.of(basicAuthPassword));
        }

        public Builder basicAuthUsername(@Nullable Output<String> basicAuthUsername) {
            $.basicAuthUsername = basicAuthUsername;
            return this;
        }

        public Builder basicAuthUsername(String basicAuthUsername) {
            return basicAuthUsername(Output.of(basicAuthUsername));
        }

        public Builder bearerToken(@Nullable Output<String> bearerToken) {
            $.bearerToken = bearerToken;
            return this;
        }

        public Builder bearerToken(String bearerToken) {
            return bearerToken(Output.of(bearerToken));
        }

        public Builder callbackId(@Nullable Output<String> callbackId) {
            $.callbackId = callbackId;
            return this;
        }

        public Builder callbackId(String callbackId) {
            return callbackId(Output.of(callbackId));
        }

        public Builder channel(Output<String> channel) {
            $.channel = channel;
            return this;
        }

        public Builder channel(String channel) {
            return channel(Output.of(channel));
        }

        public Builder color(@Nullable Output<String> color) {
            $.color = color;
            return this;
        }

        public Builder color(String color) {
            return color(Output.of(color));
        }

        public Builder fallback(@Nullable Output<String> fallback) {
            $.fallback = fallback;
            return this;
        }

        public Builder fallback(String fallback) {
            return fallback(Output.of(fallback));
        }

        public Builder fields(@Nullable Output<List<SlackAlertNotifierFieldArgs>> fields) {
            $.fields = fields;
            return this;
        }

        public Builder fields(List<SlackAlertNotifierFieldArgs> fields) {
            return fields(Output.of(fields));
        }

        public Builder fields(SlackAlertNotifierFieldArgs... fields) {
            return fields(List.of(fields));
        }

        public Builder footer(@Nullable Output<String> footer) {
            $.footer = footer;
            return this;
        }

        public Builder footer(String footer) {
            return footer(Output.of(footer));
        }

        public Builder iconEmoji(@Nullable Output<String> iconEmoji) {
            $.iconEmoji = iconEmoji;
            return this;
        }

        public Builder iconEmoji(String iconEmoji) {
            return iconEmoji(Output.of(iconEmoji));
        }

        public Builder iconUrl(@Nullable Output<String> iconUrl) {
            $.iconUrl = iconUrl;
            return this;
        }

        public Builder iconUrl(String iconUrl) {
            return iconUrl(Output.of(iconUrl));
        }

        public Builder imageUrl(@Nullable Output<String> imageUrl) {
            $.imageUrl = imageUrl;
            return this;
        }

        public Builder imageUrl(String imageUrl) {
            return imageUrl(Output.of(imageUrl));
        }

        public Builder linkNames(@Nullable Output<Boolean> linkNames) {
            $.linkNames = linkNames;
            return this;
        }

        public Builder linkNames(Boolean linkNames) {
            return linkNames(Output.of(linkNames));
        }

        public Builder mrkdwnIns(@Nullable Output<List<String>> mrkdwnIns) {
            $.mrkdwnIns = mrkdwnIns;
            return this;
        }

        public Builder mrkdwnIns(List<String> mrkdwnIns) {
            return mrkdwnIns(Output.of(mrkdwnIns));
        }

        public Builder mrkdwnIns(String... mrkdwnIns) {
            return mrkdwnIns(List.of(mrkdwnIns));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder pretext(@Nullable Output<String> pretext) {
            $.pretext = pretext;
            return this;
        }

        public Builder pretext(String pretext) {
            return pretext(Output.of(pretext));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * custom proxy URLs are not supported
         * 
         */
        @Deprecated /* custom proxy URLs are not supported */
        public Builder proxyUrl(@Nullable Output<String> proxyUrl) {
            $.proxyUrl = proxyUrl;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * custom proxy URLs are not supported
         * 
         */
        @Deprecated /* custom proxy URLs are not supported */
        public Builder proxyUrl(String proxyUrl) {
            return proxyUrl(Output.of(proxyUrl));
        }

        public Builder sendResolved(@Nullable Output<Boolean> sendResolved) {
            $.sendResolved = sendResolved;
            return this;
        }

        public Builder sendResolved(Boolean sendResolved) {
            return sendResolved(Output.of(sendResolved));
        }

        public Builder shortFields(@Nullable Output<Boolean> shortFields) {
            $.shortFields = shortFields;
            return this;
        }

        public Builder shortFields(Boolean shortFields) {
            return shortFields(Output.of(shortFields));
        }

        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        public Builder text(@Nullable Output<String> text) {
            $.text = text;
            return this;
        }

        public Builder text(String text) {
            return text(Output.of(text));
        }

        public Builder thumbUrl(@Nullable Output<String> thumbUrl) {
            $.thumbUrl = thumbUrl;
            return this;
        }

        public Builder thumbUrl(String thumbUrl) {
            return thumbUrl(Output.of(thumbUrl));
        }

        public Builder title(@Nullable Output<String> title) {
            $.title = title;
            return this;
        }

        public Builder title(String title) {
            return title(Output.of(title));
        }

        public Builder titleLink(@Nullable Output<String> titleLink) {
            $.titleLink = titleLink;
            return this;
        }

        public Builder titleLink(String titleLink) {
            return titleLink(Output.of(titleLink));
        }

        public Builder tlsInsecureSkipVerify(@Nullable Output<Boolean> tlsInsecureSkipVerify) {
            $.tlsInsecureSkipVerify = tlsInsecureSkipVerify;
            return this;
        }

        public Builder tlsInsecureSkipVerify(Boolean tlsInsecureSkipVerify) {
            return tlsInsecureSkipVerify(Output.of(tlsInsecureSkipVerify));
        }

        public Builder username(@Nullable Output<String> username) {
            $.username = username;
            return this;
        }

        public Builder username(String username) {
            return username(Output.of(username));
        }

        public SlackAlertNotifierArgs build() {
            $.apiUrl = Objects.requireNonNull($.apiUrl, "expected parameter 'apiUrl' to be non-null");
            $.channel = Objects.requireNonNull($.channel, "expected parameter 'channel' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
