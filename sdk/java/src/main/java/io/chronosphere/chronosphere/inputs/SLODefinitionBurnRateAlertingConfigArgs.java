// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SLODefinitionBurnRateAlertingConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final SLODefinitionBurnRateAlertingConfigArgs Empty = new SLODefinitionBurnRateAlertingConfigArgs();

    @Import(name="budget", required=true)
    private Output<Double> budget;

    public Output<Double> budget() {
        return this.budget;
    }

    @Import(name="labels")
    private @Nullable Output<Map<String,String>> labels;

    public Optional<Output<Map<String,String>>> labels() {
        return Optional.ofNullable(this.labels);
    }

    @Import(name="severity", required=true)
    private Output<String> severity;

    public Output<String> severity() {
        return this.severity;
    }

    @Import(name="window", required=true)
    private Output<String> window;

    public Output<String> window() {
        return this.window;
    }

    private SLODefinitionBurnRateAlertingConfigArgs() {}

    private SLODefinitionBurnRateAlertingConfigArgs(SLODefinitionBurnRateAlertingConfigArgs $) {
        this.budget = $.budget;
        this.labels = $.labels;
        this.severity = $.severity;
        this.window = $.window;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SLODefinitionBurnRateAlertingConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SLODefinitionBurnRateAlertingConfigArgs $;

        public Builder() {
            $ = new SLODefinitionBurnRateAlertingConfigArgs();
        }

        public Builder(SLODefinitionBurnRateAlertingConfigArgs defaults) {
            $ = new SLODefinitionBurnRateAlertingConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder budget(Output<Double> budget) {
            $.budget = budget;
            return this;
        }

        public Builder budget(Double budget) {
            return budget(Output.of(budget));
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            $.labels = labels;
            return this;
        }

        public Builder labels(Map<String,String> labels) {
            return labels(Output.of(labels));
        }

        public Builder severity(Output<String> severity) {
            $.severity = severity;
            return this;
        }

        public Builder severity(String severity) {
            return severity(Output.of(severity));
        }

        public Builder window(Output<String> window) {
            $.window = window;
            return this;
        }

        public Builder window(String window) {
            return window(Output.of(window));
        }

        public SLODefinitionBurnRateAlertingConfigArgs build() {
            $.budget = Objects.requireNonNull($.budget, "expected parameter 'budget' to be non-null");
            $.severity = Objects.requireNonNull($.severity, "expected parameter 'severity' to be non-null");
            $.window = Objects.requireNonNull($.window, "expected parameter 'window' to be non-null");
            return $;
        }
    }

}
