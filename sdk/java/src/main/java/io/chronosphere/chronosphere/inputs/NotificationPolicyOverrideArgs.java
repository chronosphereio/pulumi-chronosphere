// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.NotificationPolicyOverrideAlertLabelMatcherArgs;
import io.chronosphere.chronosphere.inputs.NotificationPolicyOverrideRouteArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotificationPolicyOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotificationPolicyOverrideArgs Empty = new NotificationPolicyOverrideArgs();

    @Import(name="alertLabelMatchers", required=true)
    private Output<List<NotificationPolicyOverrideAlertLabelMatcherArgs>> alertLabelMatchers;

    public Output<List<NotificationPolicyOverrideAlertLabelMatcherArgs>> alertLabelMatchers() {
        return this.alertLabelMatchers;
    }

    @Import(name="routes")
    private @Nullable Output<List<NotificationPolicyOverrideRouteArgs>> routes;

    public Optional<Output<List<NotificationPolicyOverrideRouteArgs>>> routes() {
        return Optional.ofNullable(this.routes);
    }

    private NotificationPolicyOverrideArgs() {}

    private NotificationPolicyOverrideArgs(NotificationPolicyOverrideArgs $) {
        this.alertLabelMatchers = $.alertLabelMatchers;
        this.routes = $.routes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationPolicyOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationPolicyOverrideArgs $;

        public Builder() {
            $ = new NotificationPolicyOverrideArgs();
        }

        public Builder(NotificationPolicyOverrideArgs defaults) {
            $ = new NotificationPolicyOverrideArgs(Objects.requireNonNull(defaults));
        }

        public Builder alertLabelMatchers(Output<List<NotificationPolicyOverrideAlertLabelMatcherArgs>> alertLabelMatchers) {
            $.alertLabelMatchers = alertLabelMatchers;
            return this;
        }

        public Builder alertLabelMatchers(List<NotificationPolicyOverrideAlertLabelMatcherArgs> alertLabelMatchers) {
            return alertLabelMatchers(Output.of(alertLabelMatchers));
        }

        public Builder alertLabelMatchers(NotificationPolicyOverrideAlertLabelMatcherArgs... alertLabelMatchers) {
            return alertLabelMatchers(List.of(alertLabelMatchers));
        }

        public Builder routes(@Nullable Output<List<NotificationPolicyOverrideRouteArgs>> routes) {
            $.routes = routes;
            return this;
        }

        public Builder routes(List<NotificationPolicyOverrideRouteArgs> routes) {
            return routes(Output.of(routes));
        }

        public Builder routes(NotificationPolicyOverrideRouteArgs... routes) {
            return routes(List.of(routes));
        }

        public NotificationPolicyOverrideArgs build() {
            $.alertLabelMatchers = Objects.requireNonNull($.alertLabelMatchers, "expected parameter 'alertLabelMatchers' to be non-null");
            return $;
        }
    }

}
