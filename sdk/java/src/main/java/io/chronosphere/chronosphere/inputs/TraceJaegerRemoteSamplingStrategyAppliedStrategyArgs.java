// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs;
import io.chronosphere.chronosphere.inputs.TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs;
import io.chronosphere.chronosphere.inputs.TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs extends com.pulumi.resources.ResourceArgs {

    public static final TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs Empty = new TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs();

    @Import(name="perOperationStrategies")
    private @Nullable Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs> perOperationStrategies;

    public Optional<Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs>> perOperationStrategies() {
        return Optional.ofNullable(this.perOperationStrategies);
    }

    @Import(name="probabilisticStrategy")
    private @Nullable Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs> probabilisticStrategy;

    public Optional<Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs>> probabilisticStrategy() {
        return Optional.ofNullable(this.probabilisticStrategy);
    }

    @Import(name="rateLimitingStrategy")
    private @Nullable Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs> rateLimitingStrategy;

    public Optional<Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs>> rateLimitingStrategy() {
        return Optional.ofNullable(this.rateLimitingStrategy);
    }

    private TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs() {}

    private TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs(TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs $) {
        this.perOperationStrategies = $.perOperationStrategies;
        this.probabilisticStrategy = $.probabilisticStrategy;
        this.rateLimitingStrategy = $.rateLimitingStrategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs $;

        public Builder() {
            $ = new TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs();
        }

        public Builder(TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs defaults) {
            $ = new TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs(Objects.requireNonNull(defaults));
        }

        public Builder perOperationStrategies(@Nullable Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs> perOperationStrategies) {
            $.perOperationStrategies = perOperationStrategies;
            return this;
        }

        public Builder perOperationStrategies(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesArgs perOperationStrategies) {
            return perOperationStrategies(Output.of(perOperationStrategies));
        }

        public Builder probabilisticStrategy(@Nullable Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs> probabilisticStrategy) {
            $.probabilisticStrategy = probabilisticStrategy;
            return this;
        }

        public Builder probabilisticStrategy(TraceJaegerRemoteSamplingStrategyAppliedStrategyProbabilisticStrategyArgs probabilisticStrategy) {
            return probabilisticStrategy(Output.of(probabilisticStrategy));
        }

        public Builder rateLimitingStrategy(@Nullable Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs> rateLimitingStrategy) {
            $.rateLimitingStrategy = rateLimitingStrategy;
            return this;
        }

        public Builder rateLimitingStrategy(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategyArgs rateLimitingStrategy) {
            return rateLimitingStrategy(Output.of(rateLimitingStrategy));
        }

        public TraceJaegerRemoteSamplingStrategyAppliedStrategyArgs build() {
            return $;
        }
    }

}
