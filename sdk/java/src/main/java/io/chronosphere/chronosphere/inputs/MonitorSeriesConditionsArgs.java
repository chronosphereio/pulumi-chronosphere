// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.MonitorSeriesConditionsConditionArgs;
import io.chronosphere.chronosphere.inputs.MonitorSeriesConditionsOverrideArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorSeriesConditionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorSeriesConditionsArgs Empty = new MonitorSeriesConditionsArgs();

    @Import(name="conditions", required=true)
    private Output<List<MonitorSeriesConditionsConditionArgs>> conditions;

    public Output<List<MonitorSeriesConditionsConditionArgs>> conditions() {
        return this.conditions;
    }

    @Import(name="overrides")
    private @Nullable Output<List<MonitorSeriesConditionsOverrideArgs>> overrides;

    public Optional<Output<List<MonitorSeriesConditionsOverrideArgs>>> overrides() {
        return Optional.ofNullable(this.overrides);
    }

    private MonitorSeriesConditionsArgs() {}

    private MonitorSeriesConditionsArgs(MonitorSeriesConditionsArgs $) {
        this.conditions = $.conditions;
        this.overrides = $.overrides;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorSeriesConditionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorSeriesConditionsArgs $;

        public Builder() {
            $ = new MonitorSeriesConditionsArgs();
        }

        public Builder(MonitorSeriesConditionsArgs defaults) {
            $ = new MonitorSeriesConditionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditions(Output<List<MonitorSeriesConditionsConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<MonitorSeriesConditionsConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(MonitorSeriesConditionsConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder overrides(@Nullable Output<List<MonitorSeriesConditionsOverrideArgs>> overrides) {
            $.overrides = overrides;
            return this;
        }

        public Builder overrides(List<MonitorSeriesConditionsOverrideArgs> overrides) {
            return overrides(Output.of(overrides));
        }

        public Builder overrides(MonitorSeriesConditionsOverrideArgs... overrides) {
            return overrides(List.of(overrides));
        }

        public MonitorSeriesConditionsArgs build() {
            $.conditions = Objects.requireNonNull($.conditions, "expected parameter 'conditions' to be non-null");
            return $;
        }
    }

}
