// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogscaleActionWebhookActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogscaleActionWebhookActionArgs Empty = new LogscaleActionWebhookActionArgs();

    @Import(name="bodyTemplate")
    private @Nullable Output<String> bodyTemplate;

    public Optional<Output<String>> bodyTemplate() {
        return Optional.ofNullable(this.bodyTemplate);
    }

    @Import(name="headers")
    private @Nullable Output<Map<String,String>> headers;

    public Optional<Output<Map<String,String>>> headers() {
        return Optional.ofNullable(this.headers);
    }

    @Import(name="ignoreSsl")
    private @Nullable Output<Boolean> ignoreSsl;

    public Optional<Output<Boolean>> ignoreSsl() {
        return Optional.ofNullable(this.ignoreSsl);
    }

    @Import(name="method", required=true)
    private Output<String> method;

    public Output<String> method() {
        return this.method;
    }

    @Import(name="url", required=true)
    private Output<String> url;

    public Output<String> url() {
        return this.url;
    }

    @Import(name="useProxy")
    private @Nullable Output<Boolean> useProxy;

    public Optional<Output<Boolean>> useProxy() {
        return Optional.ofNullable(this.useProxy);
    }

    private LogscaleActionWebhookActionArgs() {}

    private LogscaleActionWebhookActionArgs(LogscaleActionWebhookActionArgs $) {
        this.bodyTemplate = $.bodyTemplate;
        this.headers = $.headers;
        this.ignoreSsl = $.ignoreSsl;
        this.method = $.method;
        this.url = $.url;
        this.useProxy = $.useProxy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogscaleActionWebhookActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogscaleActionWebhookActionArgs $;

        public Builder() {
            $ = new LogscaleActionWebhookActionArgs();
        }

        public Builder(LogscaleActionWebhookActionArgs defaults) {
            $ = new LogscaleActionWebhookActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder bodyTemplate(@Nullable Output<String> bodyTemplate) {
            $.bodyTemplate = bodyTemplate;
            return this;
        }

        public Builder bodyTemplate(String bodyTemplate) {
            return bodyTemplate(Output.of(bodyTemplate));
        }

        public Builder headers(@Nullable Output<Map<String,String>> headers) {
            $.headers = headers;
            return this;
        }

        public Builder headers(Map<String,String> headers) {
            return headers(Output.of(headers));
        }

        public Builder ignoreSsl(@Nullable Output<Boolean> ignoreSsl) {
            $.ignoreSsl = ignoreSsl;
            return this;
        }

        public Builder ignoreSsl(Boolean ignoreSsl) {
            return ignoreSsl(Output.of(ignoreSsl));
        }

        public Builder method(Output<String> method) {
            $.method = method;
            return this;
        }

        public Builder method(String method) {
            return method(Output.of(method));
        }

        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder useProxy(@Nullable Output<Boolean> useProxy) {
            $.useProxy = useProxy;
            return this;
        }

        public Builder useProxy(Boolean useProxy) {
            return useProxy(Output.of(useProxy));
        }

        public LogscaleActionWebhookActionArgs build() {
            $.method = Objects.requireNonNull($.method, "expected parameter 'method' to be non-null");
            $.url = Objects.requireNonNull($.url, "expected parameter 'url' to be non-null");
            return $;
        }
    }

}
