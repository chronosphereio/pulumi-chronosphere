// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.ConsumptionBudgetAlertActionConfigArgs;
import io.chronosphere.chronosphere.inputs.ConsumptionBudgetPriorityArgs;
import io.chronosphere.chronosphere.inputs.ConsumptionBudgetThresholdArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConsumptionBudgetArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsumptionBudgetArgs Empty = new ConsumptionBudgetArgs();

    @Import(name="alertActionConfig")
    private @Nullable Output<ConsumptionBudgetAlertActionConfigArgs> alertActionConfig;

    public Optional<Output<ConsumptionBudgetAlertActionConfigArgs>> alertActionConfig() {
        return Optional.ofNullable(this.alertActionConfig);
    }

    @Import(name="consumptionConfigId", required=true)
    private Output<String> consumptionConfigId;

    public Output<String> consumptionConfigId() {
        return this.consumptionConfigId;
    }

    @Import(name="defaultPriority")
    private @Nullable Output<Integer> defaultPriority;

    public Optional<Output<Integer>> defaultPriority() {
        return Optional.ofNullable(this.defaultPriority);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="notificationPolicyId")
    private @Nullable Output<String> notificationPolicyId;

    public Optional<Output<String>> notificationPolicyId() {
        return Optional.ofNullable(this.notificationPolicyId);
    }

    @Import(name="partitionSlugPath")
    private @Nullable Output<String> partitionSlugPath;

    public Optional<Output<String>> partitionSlugPath() {
        return Optional.ofNullable(this.partitionSlugPath);
    }

    @Import(name="priorities")
    private @Nullable Output<List<ConsumptionBudgetPriorityArgs>> priorities;

    public Optional<Output<List<ConsumptionBudgetPriorityArgs>>> priorities() {
        return Optional.ofNullable(this.priorities);
    }

    @Import(name="resource")
    private @Nullable Output<String> resource;

    public Optional<Output<String>> resource() {
        return Optional.ofNullable(this.resource);
    }

    @Import(name="slug")
    private @Nullable Output<String> slug;

    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    @Import(name="thresholds")
    private @Nullable Output<List<ConsumptionBudgetThresholdArgs>> thresholds;

    public Optional<Output<List<ConsumptionBudgetThresholdArgs>>> thresholds() {
        return Optional.ofNullable(this.thresholds);
    }

    private ConsumptionBudgetArgs() {}

    private ConsumptionBudgetArgs(ConsumptionBudgetArgs $) {
        this.alertActionConfig = $.alertActionConfig;
        this.consumptionConfigId = $.consumptionConfigId;
        this.defaultPriority = $.defaultPriority;
        this.name = $.name;
        this.notificationPolicyId = $.notificationPolicyId;
        this.partitionSlugPath = $.partitionSlugPath;
        this.priorities = $.priorities;
        this.resource = $.resource;
        this.slug = $.slug;
        this.thresholds = $.thresholds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumptionBudgetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumptionBudgetArgs $;

        public Builder() {
            $ = new ConsumptionBudgetArgs();
        }

        public Builder(ConsumptionBudgetArgs defaults) {
            $ = new ConsumptionBudgetArgs(Objects.requireNonNull(defaults));
        }

        public Builder alertActionConfig(@Nullable Output<ConsumptionBudgetAlertActionConfigArgs> alertActionConfig) {
            $.alertActionConfig = alertActionConfig;
            return this;
        }

        public Builder alertActionConfig(ConsumptionBudgetAlertActionConfigArgs alertActionConfig) {
            return alertActionConfig(Output.of(alertActionConfig));
        }

        public Builder consumptionConfigId(Output<String> consumptionConfigId) {
            $.consumptionConfigId = consumptionConfigId;
            return this;
        }

        public Builder consumptionConfigId(String consumptionConfigId) {
            return consumptionConfigId(Output.of(consumptionConfigId));
        }

        public Builder defaultPriority(@Nullable Output<Integer> defaultPriority) {
            $.defaultPriority = defaultPriority;
            return this;
        }

        public Builder defaultPriority(Integer defaultPriority) {
            return defaultPriority(Output.of(defaultPriority));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder notificationPolicyId(@Nullable Output<String> notificationPolicyId) {
            $.notificationPolicyId = notificationPolicyId;
            return this;
        }

        public Builder notificationPolicyId(String notificationPolicyId) {
            return notificationPolicyId(Output.of(notificationPolicyId));
        }

        public Builder partitionSlugPath(@Nullable Output<String> partitionSlugPath) {
            $.partitionSlugPath = partitionSlugPath;
            return this;
        }

        public Builder partitionSlugPath(String partitionSlugPath) {
            return partitionSlugPath(Output.of(partitionSlugPath));
        }

        public Builder priorities(@Nullable Output<List<ConsumptionBudgetPriorityArgs>> priorities) {
            $.priorities = priorities;
            return this;
        }

        public Builder priorities(List<ConsumptionBudgetPriorityArgs> priorities) {
            return priorities(Output.of(priorities));
        }

        public Builder priorities(ConsumptionBudgetPriorityArgs... priorities) {
            return priorities(List.of(priorities));
        }

        public Builder resource(@Nullable Output<String> resource) {
            $.resource = resource;
            return this;
        }

        public Builder resource(String resource) {
            return resource(Output.of(resource));
        }

        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        public Builder thresholds(@Nullable Output<List<ConsumptionBudgetThresholdArgs>> thresholds) {
            $.thresholds = thresholds;
            return this;
        }

        public Builder thresholds(List<ConsumptionBudgetThresholdArgs> thresholds) {
            return thresholds(Output.of(thresholds));
        }

        public Builder thresholds(ConsumptionBudgetThresholdArgs... thresholds) {
            return thresholds(List.of(thresholds));
        }

        public ConsumptionBudgetArgs build() {
            $.consumptionConfigId = Objects.requireNonNull($.consumptionConfigId, "expected parameter 'consumptionConfigId' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
