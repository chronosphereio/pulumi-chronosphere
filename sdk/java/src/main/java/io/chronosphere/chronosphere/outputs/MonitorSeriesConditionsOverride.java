// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.MonitorSeriesConditionsOverrideCondition;
import io.chronosphere.chronosphere.outputs.MonitorSeriesConditionsOverrideLabelMatcher;
import java.util.List;
import java.util.Objects;

@CustomType
public final class MonitorSeriesConditionsOverride {
    private List<MonitorSeriesConditionsOverrideCondition> conditions;
    private List<MonitorSeriesConditionsOverrideLabelMatcher> labelMatchers;

    private MonitorSeriesConditionsOverride() {}
    public List<MonitorSeriesConditionsOverrideCondition> conditions() {
        return this.conditions;
    }
    public List<MonitorSeriesConditionsOverrideLabelMatcher> labelMatchers() {
        return this.labelMatchers;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorSeriesConditionsOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<MonitorSeriesConditionsOverrideCondition> conditions;
        private List<MonitorSeriesConditionsOverrideLabelMatcher> labelMatchers;
        public Builder() {}
        public Builder(MonitorSeriesConditionsOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.labelMatchers = defaults.labelMatchers;
        }

        @CustomType.Setter
        public Builder conditions(List<MonitorSeriesConditionsOverrideCondition> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }
        public Builder conditions(MonitorSeriesConditionsOverrideCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder labelMatchers(List<MonitorSeriesConditionsOverrideLabelMatcher> labelMatchers) {
            this.labelMatchers = Objects.requireNonNull(labelMatchers);
            return this;
        }
        public Builder labelMatchers(MonitorSeriesConditionsOverrideLabelMatcher... labelMatchers) {
            return labelMatchers(List.of(labelMatchers));
        }
        public MonitorSeriesConditionsOverride build() {
            final var o = new MonitorSeriesConditionsOverride();
            o.conditions = conditions;
            o.labelMatchers = labelMatchers;
            return o;
        }
    }
}
