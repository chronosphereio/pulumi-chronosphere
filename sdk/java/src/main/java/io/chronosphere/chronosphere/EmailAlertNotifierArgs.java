// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EmailAlertNotifierArgs extends com.pulumi.resources.ResourceArgs {

    public static final EmailAlertNotifierArgs Empty = new EmailAlertNotifierArgs();

    @Import(name="html")
    private @Nullable Output<String> html;

    public Optional<Output<String>> html() {
        return Optional.ofNullable(this.html);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="sendResolved")
    private @Nullable Output<Boolean> sendResolved;

    public Optional<Output<Boolean>> sendResolved() {
        return Optional.ofNullable(this.sendResolved);
    }

    @Import(name="slug")
    private @Nullable Output<String> slug;

    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    @Import(name="text")
    private @Nullable Output<String> text;

    public Optional<Output<String>> text() {
        return Optional.ofNullable(this.text);
    }

    @Import(name="to", required=true)
    private Output<String> to;

    public Output<String> to() {
        return this.to;
    }

    private EmailAlertNotifierArgs() {}

    private EmailAlertNotifierArgs(EmailAlertNotifierArgs $) {
        this.html = $.html;
        this.name = $.name;
        this.sendResolved = $.sendResolved;
        this.slug = $.slug;
        this.text = $.text;
        this.to = $.to;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EmailAlertNotifierArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EmailAlertNotifierArgs $;

        public Builder() {
            $ = new EmailAlertNotifierArgs();
        }

        public Builder(EmailAlertNotifierArgs defaults) {
            $ = new EmailAlertNotifierArgs(Objects.requireNonNull(defaults));
        }

        public Builder html(@Nullable Output<String> html) {
            $.html = html;
            return this;
        }

        public Builder html(String html) {
            return html(Output.of(html));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder sendResolved(@Nullable Output<Boolean> sendResolved) {
            $.sendResolved = sendResolved;
            return this;
        }

        public Builder sendResolved(Boolean sendResolved) {
            return sendResolved(Output.of(sendResolved));
        }

        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        public Builder text(@Nullable Output<String> text) {
            $.text = text;
            return this;
        }

        public Builder text(String text) {
            return text(Output.of(text));
        }

        public Builder to(Output<String> to) {
            $.to = to;
            return this;
        }

        public Builder to(String to) {
            return to(Output.of(to));
        }

        public EmailAlertNotifierArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.to = Objects.requireNonNull($.to, "expected parameter 'to' to be non-null");
            return $;
        }
    }

}
