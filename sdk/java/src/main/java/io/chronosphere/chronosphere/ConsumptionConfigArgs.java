// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.ConsumptionConfigPartitionArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConsumptionConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConsumptionConfigArgs Empty = new ConsumptionConfigArgs();

    @Import(name="partitions")
    private @Nullable Output<List<ConsumptionConfigPartitionArgs>> partitions;

    public Optional<Output<List<ConsumptionConfigPartitionArgs>>> partitions() {
        return Optional.ofNullable(this.partitions);
    }

    private ConsumptionConfigArgs() {}

    private ConsumptionConfigArgs(ConsumptionConfigArgs $) {
        this.partitions = $.partitions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConsumptionConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConsumptionConfigArgs $;

        public Builder() {
            $ = new ConsumptionConfigArgs();
        }

        public Builder(ConsumptionConfigArgs defaults) {
            $ = new ConsumptionConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder partitions(@Nullable Output<List<ConsumptionConfigPartitionArgs>> partitions) {
            $.partitions = partitions;
            return this;
        }

        public Builder partitions(List<ConsumptionConfigPartitionArgs> partitions) {
            return partitions(Output.of(partitions));
        }

        public Builder partitions(ConsumptionConfigPartitionArgs... partitions) {
            return partitions(List.of(partitions));
        }

        public ConsumptionConfigArgs build() {
            return $;
        }
    }

}
