// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.PagerdutyAlertNotifierImageArgs;
import io.chronosphere.chronosphere.inputs.PagerdutyAlertNotifierLinkArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PagerdutyAlertNotifierState extends com.pulumi.resources.ResourceArgs {

    public static final PagerdutyAlertNotifierState Empty = new PagerdutyAlertNotifierState();

    @Import(name="basicAuthPassword")
    private @Nullable Output<String> basicAuthPassword;

    public Optional<Output<String>> basicAuthPassword() {
        return Optional.ofNullable(this.basicAuthPassword);
    }

    @Import(name="basicAuthUsername")
    private @Nullable Output<String> basicAuthUsername;

    public Optional<Output<String>> basicAuthUsername() {
        return Optional.ofNullable(this.basicAuthUsername);
    }

    @Import(name="bearerToken")
    private @Nullable Output<String> bearerToken;

    public Optional<Output<String>> bearerToken() {
        return Optional.ofNullable(this.bearerToken);
    }

    @Import(name="class")
    private @Nullable Output<String> class_;

    public Optional<Output<String>> class_() {
        return Optional.ofNullable(this.class_);
    }

    @Import(name="client")
    private @Nullable Output<String> client;

    public Optional<Output<String>> client() {
        return Optional.ofNullable(this.client);
    }

    @Import(name="clientUrl")
    private @Nullable Output<String> clientUrl;

    public Optional<Output<String>> clientUrl() {
        return Optional.ofNullable(this.clientUrl);
    }

    @Import(name="component")
    private @Nullable Output<String> component;

    public Optional<Output<String>> component() {
        return Optional.ofNullable(this.component);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="details")
    private @Nullable Output<Map<String,String>> details;

    public Optional<Output<Map<String,String>>> details() {
        return Optional.ofNullable(this.details);
    }

    @Import(name="group")
    private @Nullable Output<String> group;

    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    @Import(name="images")
    private @Nullable Output<List<PagerdutyAlertNotifierImageArgs>> images;

    public Optional<Output<List<PagerdutyAlertNotifierImageArgs>>> images() {
        return Optional.ofNullable(this.images);
    }

    @Import(name="links")
    private @Nullable Output<List<PagerdutyAlertNotifierLinkArgs>> links;

    public Optional<Output<List<PagerdutyAlertNotifierLinkArgs>>> links() {
        return Optional.ofNullable(this.links);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * @deprecated
     * custom proxy URLs are not supported
     * 
     */
    @Deprecated /* custom proxy URLs are not supported */
    @Import(name="proxyUrl")
    private @Nullable Output<String> proxyUrl;

    /**
     * @deprecated
     * custom proxy URLs are not supported
     * 
     */
    @Deprecated /* custom proxy URLs are not supported */
    public Optional<Output<String>> proxyUrl() {
        return Optional.ofNullable(this.proxyUrl);
    }

    @Import(name="routingKey")
    private @Nullable Output<String> routingKey;

    public Optional<Output<String>> routingKey() {
        return Optional.ofNullable(this.routingKey);
    }

    @Import(name="sendResolved")
    private @Nullable Output<Boolean> sendResolved;

    public Optional<Output<Boolean>> sendResolved() {
        return Optional.ofNullable(this.sendResolved);
    }

    @Import(name="serviceKey")
    private @Nullable Output<String> serviceKey;

    public Optional<Output<String>> serviceKey() {
        return Optional.ofNullable(this.serviceKey);
    }

    @Import(name="severity")
    private @Nullable Output<String> severity;

    public Optional<Output<String>> severity() {
        return Optional.ofNullable(this.severity);
    }

    @Import(name="slug")
    private @Nullable Output<String> slug;

    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    @Import(name="tlsInsecureSkipVerify")
    private @Nullable Output<Boolean> tlsInsecureSkipVerify;

    public Optional<Output<Boolean>> tlsInsecureSkipVerify() {
        return Optional.ofNullable(this.tlsInsecureSkipVerify);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    private PagerdutyAlertNotifierState() {}

    private PagerdutyAlertNotifierState(PagerdutyAlertNotifierState $) {
        this.basicAuthPassword = $.basicAuthPassword;
        this.basicAuthUsername = $.basicAuthUsername;
        this.bearerToken = $.bearerToken;
        this.class_ = $.class_;
        this.client = $.client;
        this.clientUrl = $.clientUrl;
        this.component = $.component;
        this.description = $.description;
        this.details = $.details;
        this.group = $.group;
        this.images = $.images;
        this.links = $.links;
        this.name = $.name;
        this.proxyUrl = $.proxyUrl;
        this.routingKey = $.routingKey;
        this.sendResolved = $.sendResolved;
        this.serviceKey = $.serviceKey;
        this.severity = $.severity;
        this.slug = $.slug;
        this.tlsInsecureSkipVerify = $.tlsInsecureSkipVerify;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PagerdutyAlertNotifierState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PagerdutyAlertNotifierState $;

        public Builder() {
            $ = new PagerdutyAlertNotifierState();
        }

        public Builder(PagerdutyAlertNotifierState defaults) {
            $ = new PagerdutyAlertNotifierState(Objects.requireNonNull(defaults));
        }

        public Builder basicAuthPassword(@Nullable Output<String> basicAuthPassword) {
            $.basicAuthPassword = basicAuthPassword;
            return this;
        }

        public Builder basicAuthPassword(String basicAuthPassword) {
            return basicAuthPassword(Output.of(basicAuthPassword));
        }

        public Builder basicAuthUsername(@Nullable Output<String> basicAuthUsername) {
            $.basicAuthUsername = basicAuthUsername;
            return this;
        }

        public Builder basicAuthUsername(String basicAuthUsername) {
            return basicAuthUsername(Output.of(basicAuthUsername));
        }

        public Builder bearerToken(@Nullable Output<String> bearerToken) {
            $.bearerToken = bearerToken;
            return this;
        }

        public Builder bearerToken(String bearerToken) {
            return bearerToken(Output.of(bearerToken));
        }

        public Builder class_(@Nullable Output<String> class_) {
            $.class_ = class_;
            return this;
        }

        public Builder class_(String class_) {
            return class_(Output.of(class_));
        }

        public Builder client(@Nullable Output<String> client) {
            $.client = client;
            return this;
        }

        public Builder client(String client) {
            return client(Output.of(client));
        }

        public Builder clientUrl(@Nullable Output<String> clientUrl) {
            $.clientUrl = clientUrl;
            return this;
        }

        public Builder clientUrl(String clientUrl) {
            return clientUrl(Output.of(clientUrl));
        }

        public Builder component(@Nullable Output<String> component) {
            $.component = component;
            return this;
        }

        public Builder component(String component) {
            return component(Output.of(component));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder details(@Nullable Output<Map<String,String>> details) {
            $.details = details;
            return this;
        }

        public Builder details(Map<String,String> details) {
            return details(Output.of(details));
        }

        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        public Builder group(String group) {
            return group(Output.of(group));
        }

        public Builder images(@Nullable Output<List<PagerdutyAlertNotifierImageArgs>> images) {
            $.images = images;
            return this;
        }

        public Builder images(List<PagerdutyAlertNotifierImageArgs> images) {
            return images(Output.of(images));
        }

        public Builder images(PagerdutyAlertNotifierImageArgs... images) {
            return images(List.of(images));
        }

        public Builder links(@Nullable Output<List<PagerdutyAlertNotifierLinkArgs>> links) {
            $.links = links;
            return this;
        }

        public Builder links(List<PagerdutyAlertNotifierLinkArgs> links) {
            return links(Output.of(links));
        }

        public Builder links(PagerdutyAlertNotifierLinkArgs... links) {
            return links(List.of(links));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * custom proxy URLs are not supported
         * 
         */
        @Deprecated /* custom proxy URLs are not supported */
        public Builder proxyUrl(@Nullable Output<String> proxyUrl) {
            $.proxyUrl = proxyUrl;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * custom proxy URLs are not supported
         * 
         */
        @Deprecated /* custom proxy URLs are not supported */
        public Builder proxyUrl(String proxyUrl) {
            return proxyUrl(Output.of(proxyUrl));
        }

        public Builder routingKey(@Nullable Output<String> routingKey) {
            $.routingKey = routingKey;
            return this;
        }

        public Builder routingKey(String routingKey) {
            return routingKey(Output.of(routingKey));
        }

        public Builder sendResolved(@Nullable Output<Boolean> sendResolved) {
            $.sendResolved = sendResolved;
            return this;
        }

        public Builder sendResolved(Boolean sendResolved) {
            return sendResolved(Output.of(sendResolved));
        }

        public Builder serviceKey(@Nullable Output<String> serviceKey) {
            $.serviceKey = serviceKey;
            return this;
        }

        public Builder serviceKey(String serviceKey) {
            return serviceKey(Output.of(serviceKey));
        }

        public Builder severity(@Nullable Output<String> severity) {
            $.severity = severity;
            return this;
        }

        public Builder severity(String severity) {
            return severity(Output.of(severity));
        }

        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        public Builder tlsInsecureSkipVerify(@Nullable Output<Boolean> tlsInsecureSkipVerify) {
            $.tlsInsecureSkipVerify = tlsInsecureSkipVerify;
            return this;
        }

        public Builder tlsInsecureSkipVerify(Boolean tlsInsecureSkipVerify) {
            return tlsInsecureSkipVerify(Output.of(tlsInsecureSkipVerify));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public PagerdutyAlertNotifierState build() {
            return $;
        }
    }

}
