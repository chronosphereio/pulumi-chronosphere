// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdAllPriorities;
import io.chronosphere.chronosphere.outputs.ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdDefaultAndLowPriority;
import io.chronosphere.chronosphere.outputs.ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdLowPriority;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ResourcePoolsConfigDefaultPoolAllocationPriorityThreshold {
    private @Nullable ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdAllPriorities allPriorities;
    private @Nullable ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdDefaultAndLowPriority defaultAndLowPriority;
    private String license;
    private @Nullable ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdLowPriority lowPriority;

    private ResourcePoolsConfigDefaultPoolAllocationPriorityThreshold() {}
    public Optional<ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdAllPriorities> allPriorities() {
        return Optional.ofNullable(this.allPriorities);
    }
    public Optional<ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdDefaultAndLowPriority> defaultAndLowPriority() {
        return Optional.ofNullable(this.defaultAndLowPriority);
    }
    public String license() {
        return this.license;
    }
    public Optional<ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdLowPriority> lowPriority() {
        return Optional.ofNullable(this.lowPriority);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePoolsConfigDefaultPoolAllocationPriorityThreshold defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdAllPriorities allPriorities;
        private @Nullable ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdDefaultAndLowPriority defaultAndLowPriority;
        private String license;
        private @Nullable ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdLowPriority lowPriority;
        public Builder() {}
        public Builder(ResourcePoolsConfigDefaultPoolAllocationPriorityThreshold defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allPriorities = defaults.allPriorities;
    	      this.defaultAndLowPriority = defaults.defaultAndLowPriority;
    	      this.license = defaults.license;
    	      this.lowPriority = defaults.lowPriority;
        }

        @CustomType.Setter
        public Builder allPriorities(@Nullable ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdAllPriorities allPriorities) {
            this.allPriorities = allPriorities;
            return this;
        }
        @CustomType.Setter
        public Builder defaultAndLowPriority(@Nullable ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdDefaultAndLowPriority defaultAndLowPriority) {
            this.defaultAndLowPriority = defaultAndLowPriority;
            return this;
        }
        @CustomType.Setter
        public Builder license(String license) {
            this.license = Objects.requireNonNull(license);
            return this;
        }
        @CustomType.Setter
        public Builder lowPriority(@Nullable ResourcePoolsConfigDefaultPoolAllocationPriorityThresholdLowPriority lowPriority) {
            this.lowPriority = lowPriority;
            return this;
        }
        public ResourcePoolsConfigDefaultPoolAllocationPriorityThreshold build() {
            final var o = new ResourcePoolsConfigDefaultPoolAllocationPriorityThreshold();
            o.allPriorities = allPriorities;
            o.defaultAndLowPriority = defaultAndLowPriority;
            o.license = license;
            o.lowPriority = lowPriority;
            return o;
        }
    }
}
