// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.SLOSliCustomTimesliceIndicatorConditionArgs;
import java.lang.String;
import java.util.Objects;


public final class SLOSliCustomTimesliceIndicatorArgs extends com.pulumi.resources.ResourceArgs {

    public static final SLOSliCustomTimesliceIndicatorArgs Empty = new SLOSliCustomTimesliceIndicatorArgs();

    @Import(name="condition", required=true)
    private Output<SLOSliCustomTimesliceIndicatorConditionArgs> condition;

    public Output<SLOSliCustomTimesliceIndicatorConditionArgs> condition() {
        return this.condition;
    }

    @Import(name="queryTemplate", required=true)
    private Output<String> queryTemplate;

    public Output<String> queryTemplate() {
        return this.queryTemplate;
    }

    @Import(name="timesliceSize", required=true)
    private Output<String> timesliceSize;

    public Output<String> timesliceSize() {
        return this.timesliceSize;
    }

    private SLOSliCustomTimesliceIndicatorArgs() {}

    private SLOSliCustomTimesliceIndicatorArgs(SLOSliCustomTimesliceIndicatorArgs $) {
        this.condition = $.condition;
        this.queryTemplate = $.queryTemplate;
        this.timesliceSize = $.timesliceSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SLOSliCustomTimesliceIndicatorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SLOSliCustomTimesliceIndicatorArgs $;

        public Builder() {
            $ = new SLOSliCustomTimesliceIndicatorArgs();
        }

        public Builder(SLOSliCustomTimesliceIndicatorArgs defaults) {
            $ = new SLOSliCustomTimesliceIndicatorArgs(Objects.requireNonNull(defaults));
        }

        public Builder condition(Output<SLOSliCustomTimesliceIndicatorConditionArgs> condition) {
            $.condition = condition;
            return this;
        }

        public Builder condition(SLOSliCustomTimesliceIndicatorConditionArgs condition) {
            return condition(Output.of(condition));
        }

        public Builder queryTemplate(Output<String> queryTemplate) {
            $.queryTemplate = queryTemplate;
            return this;
        }

        public Builder queryTemplate(String queryTemplate) {
            return queryTemplate(Output.of(queryTemplate));
        }

        public Builder timesliceSize(Output<String> timesliceSize) {
            $.timesliceSize = timesliceSize;
            return this;
        }

        public Builder timesliceSize(String timesliceSize) {
            return timesliceSize(Output.of(timesliceSize));
        }

        public SLOSliCustomTimesliceIndicatorArgs build() {
            $.condition = Objects.requireNonNull($.condition, "expected parameter 'condition' to be non-null");
            $.queryTemplate = Objects.requireNonNull($.queryTemplate, "expected parameter 'queryTemplate' to be non-null");
            $.timesliceSize = Objects.requireNonNull($.timesliceSize, "expected parameter 'timesliceSize' to be non-null");
            return $;
        }
    }

}
