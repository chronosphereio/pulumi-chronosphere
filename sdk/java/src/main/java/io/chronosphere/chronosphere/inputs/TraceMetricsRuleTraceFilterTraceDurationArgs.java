// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TraceMetricsRuleTraceFilterTraceDurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final TraceMetricsRuleTraceFilterTraceDurationArgs Empty = new TraceMetricsRuleTraceFilterTraceDurationArgs();

    @Import(name="maxSeconds")
    private @Nullable Output<Double> maxSeconds;

    public Optional<Output<Double>> maxSeconds() {
        return Optional.ofNullable(this.maxSeconds);
    }

    @Import(name="minSeconds")
    private @Nullable Output<Double> minSeconds;

    public Optional<Output<Double>> minSeconds() {
        return Optional.ofNullable(this.minSeconds);
    }

    private TraceMetricsRuleTraceFilterTraceDurationArgs() {}

    private TraceMetricsRuleTraceFilterTraceDurationArgs(TraceMetricsRuleTraceFilterTraceDurationArgs $) {
        this.maxSeconds = $.maxSeconds;
        this.minSeconds = $.minSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TraceMetricsRuleTraceFilterTraceDurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TraceMetricsRuleTraceFilterTraceDurationArgs $;

        public Builder() {
            $ = new TraceMetricsRuleTraceFilterTraceDurationArgs();
        }

        public Builder(TraceMetricsRuleTraceFilterTraceDurationArgs defaults) {
            $ = new TraceMetricsRuleTraceFilterTraceDurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder maxSeconds(@Nullable Output<Double> maxSeconds) {
            $.maxSeconds = maxSeconds;
            return this;
        }

        public Builder maxSeconds(Double maxSeconds) {
            return maxSeconds(Output.of(maxSeconds));
        }

        public Builder minSeconds(@Nullable Output<Double> minSeconds) {
            $.minSeconds = minSeconds;
            return this;
        }

        public Builder minSeconds(Double minSeconds) {
            return minSeconds(Output.of(minSeconds));
        }

        public TraceMetricsRuleTraceFilterTraceDurationArgs build() {
            return $;
        }
    }

}
