// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SlackAlertNotifierActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SlackAlertNotifierActionArgs Empty = new SlackAlertNotifierActionArgs();

    @Import(name="actionConfirmDismissText")
    private @Nullable Output<String> actionConfirmDismissText;

    public Optional<Output<String>> actionConfirmDismissText() {
        return Optional.ofNullable(this.actionConfirmDismissText);
    }

    @Import(name="actionConfirmOkText")
    private @Nullable Output<String> actionConfirmOkText;

    public Optional<Output<String>> actionConfirmOkText() {
        return Optional.ofNullable(this.actionConfirmOkText);
    }

    @Import(name="actionConfirmText")
    private @Nullable Output<String> actionConfirmText;

    public Optional<Output<String>> actionConfirmText() {
        return Optional.ofNullable(this.actionConfirmText);
    }

    @Import(name="actionConfirmTile")
    private @Nullable Output<String> actionConfirmTile;

    public Optional<Output<String>> actionConfirmTile() {
        return Optional.ofNullable(this.actionConfirmTile);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="style")
    private @Nullable Output<String> style;

    public Optional<Output<String>> style() {
        return Optional.ofNullable(this.style);
    }

    @Import(name="text")
    private @Nullable Output<String> text;

    public Optional<Output<String>> text() {
        return Optional.ofNullable(this.text);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="url")
    private @Nullable Output<String> url;

    public Optional<Output<String>> url() {
        return Optional.ofNullable(this.url);
    }

    @Import(name="value")
    private @Nullable Output<String> value;

    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    private SlackAlertNotifierActionArgs() {}

    private SlackAlertNotifierActionArgs(SlackAlertNotifierActionArgs $) {
        this.actionConfirmDismissText = $.actionConfirmDismissText;
        this.actionConfirmOkText = $.actionConfirmOkText;
        this.actionConfirmText = $.actionConfirmText;
        this.actionConfirmTile = $.actionConfirmTile;
        this.name = $.name;
        this.style = $.style;
        this.text = $.text;
        this.type = $.type;
        this.url = $.url;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SlackAlertNotifierActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SlackAlertNotifierActionArgs $;

        public Builder() {
            $ = new SlackAlertNotifierActionArgs();
        }

        public Builder(SlackAlertNotifierActionArgs defaults) {
            $ = new SlackAlertNotifierActionArgs(Objects.requireNonNull(defaults));
        }

        public Builder actionConfirmDismissText(@Nullable Output<String> actionConfirmDismissText) {
            $.actionConfirmDismissText = actionConfirmDismissText;
            return this;
        }

        public Builder actionConfirmDismissText(String actionConfirmDismissText) {
            return actionConfirmDismissText(Output.of(actionConfirmDismissText));
        }

        public Builder actionConfirmOkText(@Nullable Output<String> actionConfirmOkText) {
            $.actionConfirmOkText = actionConfirmOkText;
            return this;
        }

        public Builder actionConfirmOkText(String actionConfirmOkText) {
            return actionConfirmOkText(Output.of(actionConfirmOkText));
        }

        public Builder actionConfirmText(@Nullable Output<String> actionConfirmText) {
            $.actionConfirmText = actionConfirmText;
            return this;
        }

        public Builder actionConfirmText(String actionConfirmText) {
            return actionConfirmText(Output.of(actionConfirmText));
        }

        public Builder actionConfirmTile(@Nullable Output<String> actionConfirmTile) {
            $.actionConfirmTile = actionConfirmTile;
            return this;
        }

        public Builder actionConfirmTile(String actionConfirmTile) {
            return actionConfirmTile(Output.of(actionConfirmTile));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder style(@Nullable Output<String> style) {
            $.style = style;
            return this;
        }

        public Builder style(String style) {
            return style(Output.of(style));
        }

        public Builder text(@Nullable Output<String> text) {
            $.text = text;
            return this;
        }

        public Builder text(String text) {
            return text(Output.of(text));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public Builder url(@Nullable Output<String> url) {
            $.url = url;
            return this;
        }

        public Builder url(String url) {
            return url(Output.of(url));
        }

        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        public Builder value(String value) {
            return value(Output.of(value));
        }

        public SlackAlertNotifierActionArgs build() {
            return $;
        }
    }

}
