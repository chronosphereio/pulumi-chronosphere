// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs Empty = new ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs();

    @Import(name="license", required=true)
    private Output<String> license;

    public Output<String> license() {
        return this.license;
    }

    @Import(name="value", required=true)
    private Output<Integer> value;

    public Output<Integer> value() {
        return this.value;
    }

    private ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs() {}

    private ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs(ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs $) {
        this.license = $.license;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs $;

        public Builder() {
            $ = new ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs();
        }

        public Builder(ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs defaults) {
            $ = new ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs(Objects.requireNonNull(defaults));
        }

        public Builder license(Output<String> license) {
            $.license = license;
            return this;
        }

        public Builder license(String license) {
            return license(Output.of(license));
        }

        public Builder value(Output<Integer> value) {
            $.value = value;
            return this;
        }

        public Builder value(Integer value) {
            return value(Output.of(value));
        }

        public ResourcePoolsConfigDefaultPoolAllocationFixedValueArgs build() {
            $.license = Objects.requireNonNull($.license, "expected parameter 'license' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
