// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.DatasetConfigurationTraceDatasetMatchCriteriaSpanArgs;
import io.chronosphere.chronosphere.inputs.DatasetConfigurationTraceDatasetMatchCriteriaTraceArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatasetConfigurationTraceDatasetMatchCriteriaArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatasetConfigurationTraceDatasetMatchCriteriaArgs Empty = new DatasetConfigurationTraceDatasetMatchCriteriaArgs();

    @Import(name="spans")
    private @Nullable Output<List<DatasetConfigurationTraceDatasetMatchCriteriaSpanArgs>> spans;

    public Optional<Output<List<DatasetConfigurationTraceDatasetMatchCriteriaSpanArgs>>> spans() {
        return Optional.ofNullable(this.spans);
    }

    @Import(name="trace")
    private @Nullable Output<DatasetConfigurationTraceDatasetMatchCriteriaTraceArgs> trace;

    public Optional<Output<DatasetConfigurationTraceDatasetMatchCriteriaTraceArgs>> trace() {
        return Optional.ofNullable(this.trace);
    }

    private DatasetConfigurationTraceDatasetMatchCriteriaArgs() {}

    private DatasetConfigurationTraceDatasetMatchCriteriaArgs(DatasetConfigurationTraceDatasetMatchCriteriaArgs $) {
        this.spans = $.spans;
        this.trace = $.trace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatasetConfigurationTraceDatasetMatchCriteriaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatasetConfigurationTraceDatasetMatchCriteriaArgs $;

        public Builder() {
            $ = new DatasetConfigurationTraceDatasetMatchCriteriaArgs();
        }

        public Builder(DatasetConfigurationTraceDatasetMatchCriteriaArgs defaults) {
            $ = new DatasetConfigurationTraceDatasetMatchCriteriaArgs(Objects.requireNonNull(defaults));
        }

        public Builder spans(@Nullable Output<List<DatasetConfigurationTraceDatasetMatchCriteriaSpanArgs>> spans) {
            $.spans = spans;
            return this;
        }

        public Builder spans(List<DatasetConfigurationTraceDatasetMatchCriteriaSpanArgs> spans) {
            return spans(Output.of(spans));
        }

        public Builder spans(DatasetConfigurationTraceDatasetMatchCriteriaSpanArgs... spans) {
            return spans(List.of(spans));
        }

        public Builder trace(@Nullable Output<DatasetConfigurationTraceDatasetMatchCriteriaTraceArgs> trace) {
            $.trace = trace;
            return this;
        }

        public Builder trace(DatasetConfigurationTraceDatasetMatchCriteriaTraceArgs trace) {
            return trace(Output.of(trace));
        }

        public DatasetConfigurationTraceDatasetMatchCriteriaArgs build() {
            return $;
        }
    }

}
