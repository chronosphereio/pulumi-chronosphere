// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import io.chronosphere.chronosphere.ConsumptionBudgetArgs;
import io.chronosphere.chronosphere.Utilities;
import io.chronosphere.chronosphere.inputs.ConsumptionBudgetState;
import io.chronosphere.chronosphere.outputs.ConsumptionBudgetAlertActionConfig;
import io.chronosphere.chronosphere.outputs.ConsumptionBudgetPriority;
import io.chronosphere.chronosphere.outputs.ConsumptionBudgetThreshold;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="chronosphere:index/consumptionBudget:ConsumptionBudget")
public class ConsumptionBudget extends com.pulumi.resources.CustomResource {
    @Export(name="alertActionConfig", refs={ConsumptionBudgetAlertActionConfig.class}, tree="[0]")
    private Output</* @Nullable */ ConsumptionBudgetAlertActionConfig> alertActionConfig;

    public Output<Optional<ConsumptionBudgetAlertActionConfig>> alertActionConfig() {
        return Codegen.optional(this.alertActionConfig);
    }
    @Export(name="consumptionConfigId", refs={String.class}, tree="[0]")
    private Output<String> consumptionConfigId;

    public Output<String> consumptionConfigId() {
        return this.consumptionConfigId;
    }
    @Export(name="defaultPriority", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> defaultPriority;

    public Output<Optional<Integer>> defaultPriority() {
        return Codegen.optional(this.defaultPriority);
    }
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }
    @Export(name="notificationPolicyId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> notificationPolicyId;

    public Output<Optional<String>> notificationPolicyId() {
        return Codegen.optional(this.notificationPolicyId);
    }
    @Export(name="partitionSlugPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> partitionSlugPath;

    public Output<Optional<String>> partitionSlugPath() {
        return Codegen.optional(this.partitionSlugPath);
    }
    @Export(name="priorities", refs={List.class,ConsumptionBudgetPriority.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConsumptionBudgetPriority>> priorities;

    public Output<Optional<List<ConsumptionBudgetPriority>>> priorities() {
        return Codegen.optional(this.priorities);
    }
    @Export(name="resource", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> resource;

    public Output<Optional<String>> resource() {
        return Codegen.optional(this.resource);
    }
    @Export(name="slug", refs={String.class}, tree="[0]")
    private Output<String> slug;

    public Output<String> slug() {
        return this.slug;
    }
    @Export(name="thresholds", refs={List.class,ConsumptionBudgetThreshold.class}, tree="[0,1]")
    private Output</* @Nullable */ List<ConsumptionBudgetThreshold>> thresholds;

    public Output<Optional<List<ConsumptionBudgetThreshold>>> thresholds() {
        return Codegen.optional(this.thresholds);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConsumptionBudget(String name) {
        this(name, ConsumptionBudgetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConsumptionBudget(String name, ConsumptionBudgetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConsumptionBudget(String name, ConsumptionBudgetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("chronosphere:index/consumptionBudget:ConsumptionBudget", name, args == null ? ConsumptionBudgetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ConsumptionBudget(String name, Output<String> id, @Nullable ConsumptionBudgetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("chronosphere:index/consumptionBudget:ConsumptionBudget", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConsumptionBudget get(String name, Output<String> id, @Nullable ConsumptionBudgetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConsumptionBudget(name, id, state, options);
    }
}
