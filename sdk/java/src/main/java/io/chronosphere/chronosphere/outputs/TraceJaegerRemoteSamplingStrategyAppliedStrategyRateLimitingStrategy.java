// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;

@CustomType
public final class TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy {
    private Integer maxTracesPerSecond;

    private TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy() {}
    public Integer maxTracesPerSecond() {
        return this.maxTracesPerSecond;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer maxTracesPerSecond;
        public Builder() {}
        public Builder(TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxTracesPerSecond = defaults.maxTracesPerSecond;
        }

        @CustomType.Setter
        public Builder maxTracesPerSecond(Integer maxTracesPerSecond) {
            this.maxTracesPerSecond = Objects.requireNonNull(maxTracesPerSecond);
            return this;
        }
        public TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy build() {
            final var o = new TraceJaegerRemoteSamplingStrategyAppliedStrategyRateLimitingStrategy();
            o.maxTracesPerSecond = maxTracesPerSecond;
            return o;
        }
    }
}
