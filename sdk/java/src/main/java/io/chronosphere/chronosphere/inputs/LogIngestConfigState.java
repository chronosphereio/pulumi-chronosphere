// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.LogIngestConfigFieldNormalizationArgs;
import io.chronosphere.chronosphere.inputs.LogIngestConfigFieldParserArgs;
import io.chronosphere.chronosphere.inputs.LogIngestConfigPlaintextParserArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogIngestConfigState extends com.pulumi.resources.ResourceArgs {

    public static final LogIngestConfigState Empty = new LogIngestConfigState();

    @Import(name="fieldNormalization")
    private @Nullable Output<LogIngestConfigFieldNormalizationArgs> fieldNormalization;

    public Optional<Output<LogIngestConfigFieldNormalizationArgs>> fieldNormalization() {
        return Optional.ofNullable(this.fieldNormalization);
    }

    @Import(name="fieldParsers")
    private @Nullable Output<List<LogIngestConfigFieldParserArgs>> fieldParsers;

    public Optional<Output<List<LogIngestConfigFieldParserArgs>>> fieldParsers() {
        return Optional.ofNullable(this.fieldParsers);
    }

    @Import(name="plaintextParsers")
    private @Nullable Output<List<LogIngestConfigPlaintextParserArgs>> plaintextParsers;

    public Optional<Output<List<LogIngestConfigPlaintextParserArgs>>> plaintextParsers() {
        return Optional.ofNullable(this.plaintextParsers);
    }

    private LogIngestConfigState() {}

    private LogIngestConfigState(LogIngestConfigState $) {
        this.fieldNormalization = $.fieldNormalization;
        this.fieldParsers = $.fieldParsers;
        this.plaintextParsers = $.plaintextParsers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogIngestConfigState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogIngestConfigState $;

        public Builder() {
            $ = new LogIngestConfigState();
        }

        public Builder(LogIngestConfigState defaults) {
            $ = new LogIngestConfigState(Objects.requireNonNull(defaults));
        }

        public Builder fieldNormalization(@Nullable Output<LogIngestConfigFieldNormalizationArgs> fieldNormalization) {
            $.fieldNormalization = fieldNormalization;
            return this;
        }

        public Builder fieldNormalization(LogIngestConfigFieldNormalizationArgs fieldNormalization) {
            return fieldNormalization(Output.of(fieldNormalization));
        }

        public Builder fieldParsers(@Nullable Output<List<LogIngestConfigFieldParserArgs>> fieldParsers) {
            $.fieldParsers = fieldParsers;
            return this;
        }

        public Builder fieldParsers(List<LogIngestConfigFieldParserArgs> fieldParsers) {
            return fieldParsers(Output.of(fieldParsers));
        }

        public Builder fieldParsers(LogIngestConfigFieldParserArgs... fieldParsers) {
            return fieldParsers(List.of(fieldParsers));
        }

        public Builder plaintextParsers(@Nullable Output<List<LogIngestConfigPlaintextParserArgs>> plaintextParsers) {
            $.plaintextParsers = plaintextParsers;
            return this;
        }

        public Builder plaintextParsers(List<LogIngestConfigPlaintextParserArgs> plaintextParsers) {
            return plaintextParsers(Output.of(plaintextParsers));
        }

        public Builder plaintextParsers(LogIngestConfigPlaintextParserArgs... plaintextParsers) {
            return plaintextParsers(List.of(plaintextParsers));
        }

        public LogIngestConfigState build() {
            return $;
        }
    }

}
