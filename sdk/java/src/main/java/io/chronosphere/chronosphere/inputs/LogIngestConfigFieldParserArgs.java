// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.LogIngestConfigFieldParserDestinationArgs;
import io.chronosphere.chronosphere.inputs.LogIngestConfigFieldParserParserArgs;
import io.chronosphere.chronosphere.inputs.LogIngestConfigFieldParserSourceArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogIngestConfigFieldParserArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogIngestConfigFieldParserArgs Empty = new LogIngestConfigFieldParserArgs();

    @Import(name="destination")
    private @Nullable Output<LogIngestConfigFieldParserDestinationArgs> destination;

    public Optional<Output<LogIngestConfigFieldParserDestinationArgs>> destination() {
        return Optional.ofNullable(this.destination);
    }

    @Import(name="mode")
    private @Nullable Output<String> mode;

    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="parser", required=true)
    private Output<LogIngestConfigFieldParserParserArgs> parser;

    public Output<LogIngestConfigFieldParserParserArgs> parser() {
        return this.parser;
    }

    @Import(name="source", required=true)
    private Output<LogIngestConfigFieldParserSourceArgs> source;

    public Output<LogIngestConfigFieldParserSourceArgs> source() {
        return this.source;
    }

    private LogIngestConfigFieldParserArgs() {}

    private LogIngestConfigFieldParserArgs(LogIngestConfigFieldParserArgs $) {
        this.destination = $.destination;
        this.mode = $.mode;
        this.parser = $.parser;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogIngestConfigFieldParserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogIngestConfigFieldParserArgs $;

        public Builder() {
            $ = new LogIngestConfigFieldParserArgs();
        }

        public Builder(LogIngestConfigFieldParserArgs defaults) {
            $ = new LogIngestConfigFieldParserArgs(Objects.requireNonNull(defaults));
        }

        public Builder destination(@Nullable Output<LogIngestConfigFieldParserDestinationArgs> destination) {
            $.destination = destination;
            return this;
        }

        public Builder destination(LogIngestConfigFieldParserDestinationArgs destination) {
            return destination(Output.of(destination));
        }

        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public Builder parser(Output<LogIngestConfigFieldParserParserArgs> parser) {
            $.parser = parser;
            return this;
        }

        public Builder parser(LogIngestConfigFieldParserParserArgs parser) {
            return parser(Output.of(parser));
        }

        public Builder source(Output<LogIngestConfigFieldParserSourceArgs> source) {
            $.source = source;
            return this;
        }

        public Builder source(LogIngestConfigFieldParserSourceArgs source) {
            return source(Output.of(source));
        }

        public LogIngestConfigFieldParserArgs build() {
            $.parser = Objects.requireNonNull($.parser, "expected parameter 'parser' to be non-null");
            $.source = Objects.requireNonNull($.source, "expected parameter 'source' to be non-null");
            return $;
        }
    }

}
