// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs;
import java.lang.String;
import java.util.Objects;


public final class TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs extends com.pulumi.resources.ResourceArgs {

    public static final TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs Empty = new TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs();

    @Import(name="operation", required=true)
    private Output<String> operation;

    public Output<String> operation() {
        return this.operation;
    }

    @Import(name="probabilisticStrategy", required=true)
    private Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs> probabilisticStrategy;

    public Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs> probabilisticStrategy() {
        return this.probabilisticStrategy;
    }

    private TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs() {}

    private TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs $) {
        this.operation = $.operation;
        this.probabilisticStrategy = $.probabilisticStrategy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs $;

        public Builder() {
            $ = new TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs();
        }

        public Builder(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs defaults) {
            $ = new TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs(Objects.requireNonNull(defaults));
        }

        public Builder operation(Output<String> operation) {
            $.operation = operation;
            return this;
        }

        public Builder operation(String operation) {
            return operation(Output.of(operation));
        }

        public Builder probabilisticStrategy(Output<TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs> probabilisticStrategy) {
            $.probabilisticStrategy = probabilisticStrategy;
            return this;
        }

        public Builder probabilisticStrategy(TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyProbabilisticStrategyArgs probabilisticStrategy) {
            return probabilisticStrategy(Output.of(probabilisticStrategy));
        }

        public TraceJaegerRemoteSamplingStrategyAppliedStrategyPerOperationStrategiesPerOperationStrategyArgs build() {
            $.operation = Objects.requireNonNull($.operation, "expected parameter 'operation' to be non-null");
            $.probabilisticStrategy = Objects.requireNonNull($.probabilisticStrategy, "expected parameter 'probabilisticStrategy' to be non-null");
            return $;
        }
    }

}
