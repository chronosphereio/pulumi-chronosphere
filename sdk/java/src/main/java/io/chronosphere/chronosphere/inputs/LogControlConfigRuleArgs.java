// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.LogControlConfigRuleDropFieldArgs;
import io.chronosphere.chronosphere.inputs.LogControlConfigRuleEmitMetricsArgs;
import io.chronosphere.chronosphere.inputs.LogControlConfigRuleReplaceFieldArgs;
import io.chronosphere.chronosphere.inputs.LogControlConfigRuleSampleArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogControlConfigRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogControlConfigRuleArgs Empty = new LogControlConfigRuleArgs();

    @Import(name="dropField")
    private @Nullable Output<LogControlConfigRuleDropFieldArgs> dropField;

    public Optional<Output<LogControlConfigRuleDropFieldArgs>> dropField() {
        return Optional.ofNullable(this.dropField);
    }

    @Import(name="emitMetrics")
    private @Nullable Output<LogControlConfigRuleEmitMetricsArgs> emitMetrics;

    public Optional<Output<LogControlConfigRuleEmitMetricsArgs>> emitMetrics() {
        return Optional.ofNullable(this.emitMetrics);
    }

    @Import(name="filter")
    private @Nullable Output<String> filter;

    public Optional<Output<String>> filter() {
        return Optional.ofNullable(this.filter);
    }

    @Import(name="mode")
    private @Nullable Output<String> mode;

    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="replaceField")
    private @Nullable Output<LogControlConfigRuleReplaceFieldArgs> replaceField;

    public Optional<Output<LogControlConfigRuleReplaceFieldArgs>> replaceField() {
        return Optional.ofNullable(this.replaceField);
    }

    @Import(name="sample")
    private @Nullable Output<LogControlConfigRuleSampleArgs> sample;

    public Optional<Output<LogControlConfigRuleSampleArgs>> sample() {
        return Optional.ofNullable(this.sample);
    }

    @Import(name="type")
    private @Nullable Output<String> type;

    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private LogControlConfigRuleArgs() {}

    private LogControlConfigRuleArgs(LogControlConfigRuleArgs $) {
        this.dropField = $.dropField;
        this.emitMetrics = $.emitMetrics;
        this.filter = $.filter;
        this.mode = $.mode;
        this.name = $.name;
        this.replaceField = $.replaceField;
        this.sample = $.sample;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogControlConfigRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogControlConfigRuleArgs $;

        public Builder() {
            $ = new LogControlConfigRuleArgs();
        }

        public Builder(LogControlConfigRuleArgs defaults) {
            $ = new LogControlConfigRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder dropField(@Nullable Output<LogControlConfigRuleDropFieldArgs> dropField) {
            $.dropField = dropField;
            return this;
        }

        public Builder dropField(LogControlConfigRuleDropFieldArgs dropField) {
            return dropField(Output.of(dropField));
        }

        public Builder emitMetrics(@Nullable Output<LogControlConfigRuleEmitMetricsArgs> emitMetrics) {
            $.emitMetrics = emitMetrics;
            return this;
        }

        public Builder emitMetrics(LogControlConfigRuleEmitMetricsArgs emitMetrics) {
            return emitMetrics(Output.of(emitMetrics));
        }

        public Builder filter(@Nullable Output<String> filter) {
            $.filter = filter;
            return this;
        }

        public Builder filter(String filter) {
            return filter(Output.of(filter));
        }

        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder replaceField(@Nullable Output<LogControlConfigRuleReplaceFieldArgs> replaceField) {
            $.replaceField = replaceField;
            return this;
        }

        public Builder replaceField(LogControlConfigRuleReplaceFieldArgs replaceField) {
            return replaceField(Output.of(replaceField));
        }

        public Builder sample(@Nullable Output<LogControlConfigRuleSampleArgs> sample) {
            $.sample = sample;
            return this;
        }

        public Builder sample(LogControlConfigRuleSampleArgs sample) {
            return sample(Output.of(sample));
        }

        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public LogControlConfigRuleArgs build() {
            return $;
        }
    }

}
