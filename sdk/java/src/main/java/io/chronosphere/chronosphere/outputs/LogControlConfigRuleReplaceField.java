// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleReplaceFieldField;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleReplaceFieldMappedValue;
import io.chronosphere.chronosphere.outputs.LogControlConfigRuleReplaceFieldStaticValue;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class LogControlConfigRuleReplaceField {
    private @Nullable LogControlConfigRuleReplaceFieldField field;
    private @Nullable LogControlConfigRuleReplaceFieldMappedValue mappedValue;
    private @Nullable Boolean replaceAll;
    private @Nullable String replaceMode;
    private @Nullable String replaceRegex;
    private @Nullable LogControlConfigRuleReplaceFieldStaticValue staticValue;

    private LogControlConfigRuleReplaceField() {}
    public Optional<LogControlConfigRuleReplaceFieldField> field() {
        return Optional.ofNullable(this.field);
    }
    public Optional<LogControlConfigRuleReplaceFieldMappedValue> mappedValue() {
        return Optional.ofNullable(this.mappedValue);
    }
    public Optional<Boolean> replaceAll() {
        return Optional.ofNullable(this.replaceAll);
    }
    public Optional<String> replaceMode() {
        return Optional.ofNullable(this.replaceMode);
    }
    public Optional<String> replaceRegex() {
        return Optional.ofNullable(this.replaceRegex);
    }
    public Optional<LogControlConfigRuleReplaceFieldStaticValue> staticValue() {
        return Optional.ofNullable(this.staticValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogControlConfigRuleReplaceField defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable LogControlConfigRuleReplaceFieldField field;
        private @Nullable LogControlConfigRuleReplaceFieldMappedValue mappedValue;
        private @Nullable Boolean replaceAll;
        private @Nullable String replaceMode;
        private @Nullable String replaceRegex;
        private @Nullable LogControlConfigRuleReplaceFieldStaticValue staticValue;
        public Builder() {}
        public Builder(LogControlConfigRuleReplaceField defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.field = defaults.field;
    	      this.mappedValue = defaults.mappedValue;
    	      this.replaceAll = defaults.replaceAll;
    	      this.replaceMode = defaults.replaceMode;
    	      this.replaceRegex = defaults.replaceRegex;
    	      this.staticValue = defaults.staticValue;
        }

        @CustomType.Setter
        public Builder field(@Nullable LogControlConfigRuleReplaceFieldField field) {
            this.field = field;
            return this;
        }
        @CustomType.Setter
        public Builder mappedValue(@Nullable LogControlConfigRuleReplaceFieldMappedValue mappedValue) {
            this.mappedValue = mappedValue;
            return this;
        }
        @CustomType.Setter
        public Builder replaceAll(@Nullable Boolean replaceAll) {
            this.replaceAll = replaceAll;
            return this;
        }
        @CustomType.Setter
        public Builder replaceMode(@Nullable String replaceMode) {
            this.replaceMode = replaceMode;
            return this;
        }
        @CustomType.Setter
        public Builder replaceRegex(@Nullable String replaceRegex) {
            this.replaceRegex = replaceRegex;
            return this;
        }
        @CustomType.Setter
        public Builder staticValue(@Nullable LogControlConfigRuleReplaceFieldStaticValue staticValue) {
            this.staticValue = staticValue;
            return this;
        }
        public LogControlConfigRuleReplaceField build() {
            final var o = new LogControlConfigRuleReplaceField();
            o.field = field;
            o.mappedValue = mappedValue;
            o.replaceAll = replaceAll;
            o.replaceMode = replaceMode;
            o.replaceRegex = replaceRegex;
            o.staticValue = staticValue;
            return o;
        }
    }
}
