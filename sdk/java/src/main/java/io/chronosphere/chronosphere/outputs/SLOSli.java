// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.outputs;

import com.pulumi.core.annotations.CustomType;
import io.chronosphere.chronosphere.outputs.SLOSliAdditionalPromqlFilter;
import io.chronosphere.chronosphere.outputs.SLOSliCustomIndicator;
import io.chronosphere.chronosphere.outputs.SLOSliCustomTimesliceIndicator;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SLOSli {
    private @Nullable List<SLOSliAdditionalPromqlFilter> additionalPromqlFilters;
    private @Nullable List<String> customDimensionLabels;
    private @Nullable SLOSliCustomIndicator customIndicator;
    private @Nullable SLOSliCustomTimesliceIndicator customTimesliceIndicator;

    private SLOSli() {}
    public List<SLOSliAdditionalPromqlFilter> additionalPromqlFilters() {
        return this.additionalPromqlFilters == null ? List.of() : this.additionalPromqlFilters;
    }
    public List<String> customDimensionLabels() {
        return this.customDimensionLabels == null ? List.of() : this.customDimensionLabels;
    }
    public Optional<SLOSliCustomIndicator> customIndicator() {
        return Optional.ofNullable(this.customIndicator);
    }
    public Optional<SLOSliCustomTimesliceIndicator> customTimesliceIndicator() {
        return Optional.ofNullable(this.customTimesliceIndicator);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SLOSli defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<SLOSliAdditionalPromqlFilter> additionalPromqlFilters;
        private @Nullable List<String> customDimensionLabels;
        private @Nullable SLOSliCustomIndicator customIndicator;
        private @Nullable SLOSliCustomTimesliceIndicator customTimesliceIndicator;
        public Builder() {}
        public Builder(SLOSli defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalPromqlFilters = defaults.additionalPromqlFilters;
    	      this.customDimensionLabels = defaults.customDimensionLabels;
    	      this.customIndicator = defaults.customIndicator;
    	      this.customTimesliceIndicator = defaults.customTimesliceIndicator;
        }

        @CustomType.Setter
        public Builder additionalPromqlFilters(@Nullable List<SLOSliAdditionalPromqlFilter> additionalPromqlFilters) {
            this.additionalPromqlFilters = additionalPromqlFilters;
            return this;
        }
        public Builder additionalPromqlFilters(SLOSliAdditionalPromqlFilter... additionalPromqlFilters) {
            return additionalPromqlFilters(List.of(additionalPromqlFilters));
        }
        @CustomType.Setter
        public Builder customDimensionLabels(@Nullable List<String> customDimensionLabels) {
            this.customDimensionLabels = customDimensionLabels;
            return this;
        }
        public Builder customDimensionLabels(String... customDimensionLabels) {
            return customDimensionLabels(List.of(customDimensionLabels));
        }
        @CustomType.Setter
        public Builder customIndicator(@Nullable SLOSliCustomIndicator customIndicator) {
            this.customIndicator = customIndicator;
            return this;
        }
        @CustomType.Setter
        public Builder customTimesliceIndicator(@Nullable SLOSliCustomTimesliceIndicator customTimesliceIndicator) {
            this.customTimesliceIndicator = customTimesliceIndicator;
            return this;
        }
        public SLOSli build() {
            final var o = new SLOSli();
            o.additionalPromqlFilters = additionalPromqlFilters;
            o.customDimensionLabels = customDimensionLabels;
            o.customIndicator = customIndicator;
            o.customTimesliceIndicator = customTimesliceIndicator;
            return o;
        }
    }
}
