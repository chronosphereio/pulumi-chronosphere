// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.DerivedLabelMetricLabelArgs;
import io.chronosphere.chronosphere.inputs.DerivedLabelSpanTagArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DerivedLabelState extends com.pulumi.resources.ResourceArgs {

    public static final DerivedLabelState Empty = new DerivedLabelState();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="existingLabelPolicy")
    private @Nullable Output<String> existingLabelPolicy;

    public Optional<Output<String>> existingLabelPolicy() {
        return Optional.ofNullable(this.existingLabelPolicy);
    }

    @Import(name="labelName")
    private @Nullable Output<String> labelName;

    public Optional<Output<String>> labelName() {
        return Optional.ofNullable(this.labelName);
    }

    @Import(name="metricLabel")
    private @Nullable Output<DerivedLabelMetricLabelArgs> metricLabel;

    public Optional<Output<DerivedLabelMetricLabelArgs>> metricLabel() {
        return Optional.ofNullable(this.metricLabel);
    }

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="slug")
    private @Nullable Output<String> slug;

    public Optional<Output<String>> slug() {
        return Optional.ofNullable(this.slug);
    }

    @Import(name="spanTag")
    private @Nullable Output<DerivedLabelSpanTagArgs> spanTag;

    public Optional<Output<DerivedLabelSpanTagArgs>> spanTag() {
        return Optional.ofNullable(this.spanTag);
    }

    private DerivedLabelState() {}

    private DerivedLabelState(DerivedLabelState $) {
        this.description = $.description;
        this.existingLabelPolicy = $.existingLabelPolicy;
        this.labelName = $.labelName;
        this.metricLabel = $.metricLabel;
        this.name = $.name;
        this.slug = $.slug;
        this.spanTag = $.spanTag;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DerivedLabelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DerivedLabelState $;

        public Builder() {
            $ = new DerivedLabelState();
        }

        public Builder(DerivedLabelState defaults) {
            $ = new DerivedLabelState(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder existingLabelPolicy(@Nullable Output<String> existingLabelPolicy) {
            $.existingLabelPolicy = existingLabelPolicy;
            return this;
        }

        public Builder existingLabelPolicy(String existingLabelPolicy) {
            return existingLabelPolicy(Output.of(existingLabelPolicy));
        }

        public Builder labelName(@Nullable Output<String> labelName) {
            $.labelName = labelName;
            return this;
        }

        public Builder labelName(String labelName) {
            return labelName(Output.of(labelName));
        }

        public Builder metricLabel(@Nullable Output<DerivedLabelMetricLabelArgs> metricLabel) {
            $.metricLabel = metricLabel;
            return this;
        }

        public Builder metricLabel(DerivedLabelMetricLabelArgs metricLabel) {
            return metricLabel(Output.of(metricLabel));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder slug(@Nullable Output<String> slug) {
            $.slug = slug;
            return this;
        }

        public Builder slug(String slug) {
            return slug(Output.of(slug));
        }

        public Builder spanTag(@Nullable Output<DerivedLabelSpanTagArgs> spanTag) {
            $.spanTag = spanTag;
            return this;
        }

        public Builder spanTag(DerivedLabelSpanTagArgs spanTag) {
            return spanTag(Output.of(spanTag));
        }

        public DerivedLabelState build() {
            return $;
        }
    }

}
