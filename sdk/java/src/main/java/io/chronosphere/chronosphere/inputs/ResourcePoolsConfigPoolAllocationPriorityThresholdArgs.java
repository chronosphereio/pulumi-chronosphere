// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.ResourcePoolsConfigPoolAllocationPriorityThresholdAllPrioritiesArgs;
import io.chronosphere.chronosphere.inputs.ResourcePoolsConfigPoolAllocationPriorityThresholdDefaultAndLowPriorityArgs;
import io.chronosphere.chronosphere.inputs.ResourcePoolsConfigPoolAllocationPriorityThresholdLowPriorityArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourcePoolsConfigPoolAllocationPriorityThresholdArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePoolsConfigPoolAllocationPriorityThresholdArgs Empty = new ResourcePoolsConfigPoolAllocationPriorityThresholdArgs();

    @Import(name="allPriorities")
    private @Nullable Output<ResourcePoolsConfigPoolAllocationPriorityThresholdAllPrioritiesArgs> allPriorities;

    public Optional<Output<ResourcePoolsConfigPoolAllocationPriorityThresholdAllPrioritiesArgs>> allPriorities() {
        return Optional.ofNullable(this.allPriorities);
    }

    @Import(name="defaultAndLowPriority")
    private @Nullable Output<ResourcePoolsConfigPoolAllocationPriorityThresholdDefaultAndLowPriorityArgs> defaultAndLowPriority;

    public Optional<Output<ResourcePoolsConfigPoolAllocationPriorityThresholdDefaultAndLowPriorityArgs>> defaultAndLowPriority() {
        return Optional.ofNullable(this.defaultAndLowPriority);
    }

    @Import(name="license", required=true)
    private Output<String> license;

    public Output<String> license() {
        return this.license;
    }

    @Import(name="lowPriority")
    private @Nullable Output<ResourcePoolsConfigPoolAllocationPriorityThresholdLowPriorityArgs> lowPriority;

    public Optional<Output<ResourcePoolsConfigPoolAllocationPriorityThresholdLowPriorityArgs>> lowPriority() {
        return Optional.ofNullable(this.lowPriority);
    }

    private ResourcePoolsConfigPoolAllocationPriorityThresholdArgs() {}

    private ResourcePoolsConfigPoolAllocationPriorityThresholdArgs(ResourcePoolsConfigPoolAllocationPriorityThresholdArgs $) {
        this.allPriorities = $.allPriorities;
        this.defaultAndLowPriority = $.defaultAndLowPriority;
        this.license = $.license;
        this.lowPriority = $.lowPriority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePoolsConfigPoolAllocationPriorityThresholdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePoolsConfigPoolAllocationPriorityThresholdArgs $;

        public Builder() {
            $ = new ResourcePoolsConfigPoolAllocationPriorityThresholdArgs();
        }

        public Builder(ResourcePoolsConfigPoolAllocationPriorityThresholdArgs defaults) {
            $ = new ResourcePoolsConfigPoolAllocationPriorityThresholdArgs(Objects.requireNonNull(defaults));
        }

        public Builder allPriorities(@Nullable Output<ResourcePoolsConfigPoolAllocationPriorityThresholdAllPrioritiesArgs> allPriorities) {
            $.allPriorities = allPriorities;
            return this;
        }

        public Builder allPriorities(ResourcePoolsConfigPoolAllocationPriorityThresholdAllPrioritiesArgs allPriorities) {
            return allPriorities(Output.of(allPriorities));
        }

        public Builder defaultAndLowPriority(@Nullable Output<ResourcePoolsConfigPoolAllocationPriorityThresholdDefaultAndLowPriorityArgs> defaultAndLowPriority) {
            $.defaultAndLowPriority = defaultAndLowPriority;
            return this;
        }

        public Builder defaultAndLowPriority(ResourcePoolsConfigPoolAllocationPriorityThresholdDefaultAndLowPriorityArgs defaultAndLowPriority) {
            return defaultAndLowPriority(Output.of(defaultAndLowPriority));
        }

        public Builder license(Output<String> license) {
            $.license = license;
            return this;
        }

        public Builder license(String license) {
            return license(Output.of(license));
        }

        public Builder lowPriority(@Nullable Output<ResourcePoolsConfigPoolAllocationPriorityThresholdLowPriorityArgs> lowPriority) {
            $.lowPriority = lowPriority;
            return this;
        }

        public Builder lowPriority(ResourcePoolsConfigPoolAllocationPriorityThresholdLowPriorityArgs lowPriority) {
            return lowPriority(Output.of(lowPriority));
        }

        public ResourcePoolsConfigPoolAllocationPriorityThresholdArgs build() {
            $.license = Objects.requireNonNull($.license, "expected parameter 'license' to be non-null");
            return $;
        }
    }

}
