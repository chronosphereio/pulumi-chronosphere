// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.ResourcePoolsConfigPoolAllocationArgs;
import io.chronosphere.chronosphere.inputs.ResourcePoolsConfigPoolPrioritiesArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourcePoolsConfigPoolArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourcePoolsConfigPoolArgs Empty = new ResourcePoolsConfigPoolArgs();

    @Import(name="allocation", required=true)
    private Output<ResourcePoolsConfigPoolAllocationArgs> allocation;

    public Output<ResourcePoolsConfigPoolAllocationArgs> allocation() {
        return this.allocation;
    }

    /**
     * @deprecated
     * use match_rules
     * 
     */
    @Deprecated /* use match_rules */
    @Import(name="matchRule")
    private @Nullable Output<String> matchRule;

    /**
     * @deprecated
     * use match_rules
     * 
     */
    @Deprecated /* use match_rules */
    public Optional<Output<String>> matchRule() {
        return Optional.ofNullable(this.matchRule);
    }

    @Import(name="matchRules")
    private @Nullable Output<List<String>> matchRules;

    public Optional<Output<List<String>>> matchRules() {
        return Optional.ofNullable(this.matchRules);
    }

    @Import(name="name", required=true)
    private Output<String> name;

    public Output<String> name() {
        return this.name;
    }

    @Import(name="priorities")
    private @Nullable Output<ResourcePoolsConfigPoolPrioritiesArgs> priorities;

    public Optional<Output<ResourcePoolsConfigPoolPrioritiesArgs>> priorities() {
        return Optional.ofNullable(this.priorities);
    }

    private ResourcePoolsConfigPoolArgs() {}

    private ResourcePoolsConfigPoolArgs(ResourcePoolsConfigPoolArgs $) {
        this.allocation = $.allocation;
        this.matchRule = $.matchRule;
        this.matchRules = $.matchRules;
        this.name = $.name;
        this.priorities = $.priorities;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourcePoolsConfigPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourcePoolsConfigPoolArgs $;

        public Builder() {
            $ = new ResourcePoolsConfigPoolArgs();
        }

        public Builder(ResourcePoolsConfigPoolArgs defaults) {
            $ = new ResourcePoolsConfigPoolArgs(Objects.requireNonNull(defaults));
        }

        public Builder allocation(Output<ResourcePoolsConfigPoolAllocationArgs> allocation) {
            $.allocation = allocation;
            return this;
        }

        public Builder allocation(ResourcePoolsConfigPoolAllocationArgs allocation) {
            return allocation(Output.of(allocation));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * use match_rules
         * 
         */
        @Deprecated /* use match_rules */
        public Builder matchRule(@Nullable Output<String> matchRule) {
            $.matchRule = matchRule;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * use match_rules
         * 
         */
        @Deprecated /* use match_rules */
        public Builder matchRule(String matchRule) {
            return matchRule(Output.of(matchRule));
        }

        public Builder matchRules(@Nullable Output<List<String>> matchRules) {
            $.matchRules = matchRules;
            return this;
        }

        public Builder matchRules(List<String> matchRules) {
            return matchRules(Output.of(matchRules));
        }

        public Builder matchRules(String... matchRules) {
            return matchRules(List.of(matchRules));
        }

        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder priorities(@Nullable Output<ResourcePoolsConfigPoolPrioritiesArgs> priorities) {
            $.priorities = priorities;
            return this;
        }

        public Builder priorities(ResourcePoolsConfigPoolPrioritiesArgs priorities) {
            return priorities(Output.of(priorities));
        }

        public ResourcePoolsConfigPoolArgs build() {
            $.allocation = Objects.requireNonNull($.allocation, "expected parameter 'allocation' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
