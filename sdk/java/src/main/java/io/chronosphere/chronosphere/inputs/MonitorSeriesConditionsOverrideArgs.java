// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.chronosphere.chronosphere.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import io.chronosphere.chronosphere.inputs.MonitorSeriesConditionsOverrideConditionArgs;
import io.chronosphere.chronosphere.inputs.MonitorSeriesConditionsOverrideLabelMatcherArgs;
import java.util.List;
import java.util.Objects;


public final class MonitorSeriesConditionsOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorSeriesConditionsOverrideArgs Empty = new MonitorSeriesConditionsOverrideArgs();

    @Import(name="conditions", required=true)
    private Output<List<MonitorSeriesConditionsOverrideConditionArgs>> conditions;

    public Output<List<MonitorSeriesConditionsOverrideConditionArgs>> conditions() {
        return this.conditions;
    }

    @Import(name="labelMatchers", required=true)
    private Output<List<MonitorSeriesConditionsOverrideLabelMatcherArgs>> labelMatchers;

    public Output<List<MonitorSeriesConditionsOverrideLabelMatcherArgs>> labelMatchers() {
        return this.labelMatchers;
    }

    private MonitorSeriesConditionsOverrideArgs() {}

    private MonitorSeriesConditionsOverrideArgs(MonitorSeriesConditionsOverrideArgs $) {
        this.conditions = $.conditions;
        this.labelMatchers = $.labelMatchers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorSeriesConditionsOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorSeriesConditionsOverrideArgs $;

        public Builder() {
            $ = new MonitorSeriesConditionsOverrideArgs();
        }

        public Builder(MonitorSeriesConditionsOverrideArgs defaults) {
            $ = new MonitorSeriesConditionsOverrideArgs(Objects.requireNonNull(defaults));
        }

        public Builder conditions(Output<List<MonitorSeriesConditionsOverrideConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<MonitorSeriesConditionsOverrideConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(MonitorSeriesConditionsOverrideConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        public Builder labelMatchers(Output<List<MonitorSeriesConditionsOverrideLabelMatcherArgs>> labelMatchers) {
            $.labelMatchers = labelMatchers;
            return this;
        }

        public Builder labelMatchers(List<MonitorSeriesConditionsOverrideLabelMatcherArgs> labelMatchers) {
            return labelMatchers(Output.of(labelMatchers));
        }

        public Builder labelMatchers(MonitorSeriesConditionsOverrideLabelMatcherArgs... labelMatchers) {
            return labelMatchers(List.of(labelMatchers));
        }

        public MonitorSeriesConditionsOverrideArgs build() {
            $.conditions = Objects.requireNonNull($.conditions, "expected parameter 'conditions' to be non-null");
            $.labelMatchers = Objects.requireNonNull($.labelMatchers, "expected parameter 'labelMatchers' to be non-null");
            return $;
        }
    }

}
