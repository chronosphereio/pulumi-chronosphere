// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class OpsgenieAlertNotifier extends pulumi.CustomResource {
    /**
     * Get an existing OpsgenieAlertNotifier resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OpsgenieAlertNotifierState, opts?: pulumi.CustomResourceOptions): OpsgenieAlertNotifier {
        return new OpsgenieAlertNotifier(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'chronosphere:index/opsgenieAlertNotifier:OpsgenieAlertNotifier';

    /**
     * Returns true if the given object is an instance of OpsgenieAlertNotifier.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OpsgenieAlertNotifier {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OpsgenieAlertNotifier.__pulumiType;
    }

    public readonly apiKey!: pulumi.Output<string>;
    public readonly apiUrl!: pulumi.Output<string | undefined>;
    public readonly basicAuthPassword!: pulumi.Output<string | undefined>;
    public readonly basicAuthUsername!: pulumi.Output<string | undefined>;
    public readonly bearerToken!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    public readonly details!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly message!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly note!: pulumi.Output<string | undefined>;
    public readonly priority!: pulumi.Output<string | undefined>;
    public readonly proxyUrl!: pulumi.Output<string | undefined>;
    public readonly responders!: pulumi.Output<outputs.OpsgenieAlertNotifierResponder[] | undefined>;
    public readonly sendResolved!: pulumi.Output<boolean | undefined>;
    public readonly slug!: pulumi.Output<string>;
    public readonly source!: pulumi.Output<string | undefined>;
    public readonly tags!: pulumi.Output<string[] | undefined>;
    public readonly tlsInsecureSkipVerify!: pulumi.Output<boolean | undefined>;

    /**
     * Create a OpsgenieAlertNotifier resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OpsgenieAlertNotifierArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OpsgenieAlertNotifierArgs | OpsgenieAlertNotifierState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OpsgenieAlertNotifierState | undefined;
            resourceInputs["apiKey"] = state ? state.apiKey : undefined;
            resourceInputs["apiUrl"] = state ? state.apiUrl : undefined;
            resourceInputs["basicAuthPassword"] = state ? state.basicAuthPassword : undefined;
            resourceInputs["basicAuthUsername"] = state ? state.basicAuthUsername : undefined;
            resourceInputs["bearerToken"] = state ? state.bearerToken : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["details"] = state ? state.details : undefined;
            resourceInputs["message"] = state ? state.message : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["note"] = state ? state.note : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["proxyUrl"] = state ? state.proxyUrl : undefined;
            resourceInputs["responders"] = state ? state.responders : undefined;
            resourceInputs["sendResolved"] = state ? state.sendResolved : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
            resourceInputs["source"] = state ? state.source : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tlsInsecureSkipVerify"] = state ? state.tlsInsecureSkipVerify : undefined;
        } else {
            const args = argsOrState as OpsgenieAlertNotifierArgs | undefined;
            if ((!args || args.apiKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiKey'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["apiKey"] = args?.apiKey ? pulumi.secret(args.apiKey) : undefined;
            resourceInputs["apiUrl"] = args ? args.apiUrl : undefined;
            resourceInputs["basicAuthPassword"] = args?.basicAuthPassword ? pulumi.secret(args.basicAuthPassword) : undefined;
            resourceInputs["basicAuthUsername"] = args ? args.basicAuthUsername : undefined;
            resourceInputs["bearerToken"] = args ? args.bearerToken : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["details"] = args ? args.details : undefined;
            resourceInputs["message"] = args ? args.message : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["note"] = args ? args.note : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["proxyUrl"] = args ? args.proxyUrl : undefined;
            resourceInputs["responders"] = args ? args.responders : undefined;
            resourceInputs["sendResolved"] = args ? args.sendResolved : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
            resourceInputs["source"] = args ? args.source : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["tlsInsecureSkipVerify"] = args ? args.tlsInsecureSkipVerify : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apiKey", "basicAuthPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(OpsgenieAlertNotifier.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OpsgenieAlertNotifier resources.
 */
export interface OpsgenieAlertNotifierState {
    apiKey?: pulumi.Input<string>;
    apiUrl?: pulumi.Input<string>;
    basicAuthPassword?: pulumi.Input<string>;
    basicAuthUsername?: pulumi.Input<string>;
    bearerToken?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    details?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    message?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    note?: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    proxyUrl?: pulumi.Input<string>;
    responders?: pulumi.Input<pulumi.Input<inputs.OpsgenieAlertNotifierResponder>[]>;
    sendResolved?: pulumi.Input<boolean>;
    slug?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    tlsInsecureSkipVerify?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a OpsgenieAlertNotifier resource.
 */
export interface OpsgenieAlertNotifierArgs {
    apiKey: pulumi.Input<string>;
    apiUrl?: pulumi.Input<string>;
    basicAuthPassword?: pulumi.Input<string>;
    basicAuthUsername?: pulumi.Input<string>;
    bearerToken?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    details?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    message?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    note?: pulumi.Input<string>;
    priority?: pulumi.Input<string>;
    proxyUrl?: pulumi.Input<string>;
    responders?: pulumi.Input<pulumi.Input<inputs.OpsgenieAlertNotifierResponder>[]>;
    sendResolved?: pulumi.Input<boolean>;
    slug?: pulumi.Input<string>;
    source?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    tlsInsecureSkipVerify?: pulumi.Input<boolean>;
}
