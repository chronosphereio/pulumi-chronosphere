// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class LogscaleAction extends pulumi.CustomResource {
    /**
     * Get an existing LogscaleAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LogscaleActionState, opts?: pulumi.CustomResourceOptions): LogscaleAction {
        return new LogscaleAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'chronosphere:index/logscaleAction:LogscaleAction';

    /**
     * Returns true if the given object is an instance of LogscaleAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LogscaleAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LogscaleAction.__pulumiType;
    }

    public readonly emailAction!: pulumi.Output<outputs.LogscaleActionEmailAction | undefined>;
    public readonly humioAction!: pulumi.Output<outputs.LogscaleActionHumioAction | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly opsGenieAction!: pulumi.Output<outputs.LogscaleActionOpsGenieAction | undefined>;
    public readonly pagerDutyAction!: pulumi.Output<outputs.LogscaleActionPagerDutyAction | undefined>;
    public readonly repository!: pulumi.Output<string>;
    public readonly slackAction!: pulumi.Output<outputs.LogscaleActionSlackAction | undefined>;
    public readonly slackPostMessageAction!: pulumi.Output<outputs.LogscaleActionSlackPostMessageAction | undefined>;
    public readonly slug!: pulumi.Output<string>;
    public readonly uploadFileAction!: pulumi.Output<outputs.LogscaleActionUploadFileAction | undefined>;
    public readonly victorOpsAction!: pulumi.Output<outputs.LogscaleActionVictorOpsAction | undefined>;
    public readonly webhookAction!: pulumi.Output<outputs.LogscaleActionWebhookAction | undefined>;

    /**
     * Create a LogscaleAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LogscaleActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LogscaleActionArgs | LogscaleActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LogscaleActionState | undefined;
            resourceInputs["emailAction"] = state ? state.emailAction : undefined;
            resourceInputs["humioAction"] = state ? state.humioAction : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["opsGenieAction"] = state ? state.opsGenieAction : undefined;
            resourceInputs["pagerDutyAction"] = state ? state.pagerDutyAction : undefined;
            resourceInputs["repository"] = state ? state.repository : undefined;
            resourceInputs["slackAction"] = state ? state.slackAction : undefined;
            resourceInputs["slackPostMessageAction"] = state ? state.slackPostMessageAction : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
            resourceInputs["uploadFileAction"] = state ? state.uploadFileAction : undefined;
            resourceInputs["victorOpsAction"] = state ? state.victorOpsAction : undefined;
            resourceInputs["webhookAction"] = state ? state.webhookAction : undefined;
        } else {
            const args = argsOrState as LogscaleActionArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.repository === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repository'");
            }
            resourceInputs["emailAction"] = args ? args.emailAction : undefined;
            resourceInputs["humioAction"] = args ? args.humioAction : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["opsGenieAction"] = args ? args.opsGenieAction : undefined;
            resourceInputs["pagerDutyAction"] = args ? args.pagerDutyAction : undefined;
            resourceInputs["repository"] = args ? args.repository : undefined;
            resourceInputs["slackAction"] = args ? args.slackAction : undefined;
            resourceInputs["slackPostMessageAction"] = args ? args.slackPostMessageAction : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
            resourceInputs["uploadFileAction"] = args ? args.uploadFileAction : undefined;
            resourceInputs["victorOpsAction"] = args ? args.victorOpsAction : undefined;
            resourceInputs["webhookAction"] = args ? args.webhookAction : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LogscaleAction.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LogscaleAction resources.
 */
export interface LogscaleActionState {
    emailAction?: pulumi.Input<inputs.LogscaleActionEmailAction>;
    humioAction?: pulumi.Input<inputs.LogscaleActionHumioAction>;
    name?: pulumi.Input<string>;
    opsGenieAction?: pulumi.Input<inputs.LogscaleActionOpsGenieAction>;
    pagerDutyAction?: pulumi.Input<inputs.LogscaleActionPagerDutyAction>;
    repository?: pulumi.Input<string>;
    slackAction?: pulumi.Input<inputs.LogscaleActionSlackAction>;
    slackPostMessageAction?: pulumi.Input<inputs.LogscaleActionSlackPostMessageAction>;
    slug?: pulumi.Input<string>;
    uploadFileAction?: pulumi.Input<inputs.LogscaleActionUploadFileAction>;
    victorOpsAction?: pulumi.Input<inputs.LogscaleActionVictorOpsAction>;
    webhookAction?: pulumi.Input<inputs.LogscaleActionWebhookAction>;
}

/**
 * The set of arguments for constructing a LogscaleAction resource.
 */
export interface LogscaleActionArgs {
    emailAction?: pulumi.Input<inputs.LogscaleActionEmailAction>;
    humioAction?: pulumi.Input<inputs.LogscaleActionHumioAction>;
    name: pulumi.Input<string>;
    opsGenieAction?: pulumi.Input<inputs.LogscaleActionOpsGenieAction>;
    pagerDutyAction?: pulumi.Input<inputs.LogscaleActionPagerDutyAction>;
    repository: pulumi.Input<string>;
    slackAction?: pulumi.Input<inputs.LogscaleActionSlackAction>;
    slackPostMessageAction?: pulumi.Input<inputs.LogscaleActionSlackPostMessageAction>;
    slug?: pulumi.Input<string>;
    uploadFileAction?: pulumi.Input<inputs.LogscaleActionUploadFileAction>;
    victorOpsAction?: pulumi.Input<inputs.LogscaleActionVictorOpsAction>;
    webhookAction?: pulumi.Input<inputs.LogscaleActionWebhookAction>;
}
