// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class VictoropsAlertNotifier extends pulumi.CustomResource {
    /**
     * Get an existing VictoropsAlertNotifier resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VictoropsAlertNotifierState, opts?: pulumi.CustomResourceOptions): VictoropsAlertNotifier {
        return new VictoropsAlertNotifier(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'chronosphere:index/victoropsAlertNotifier:VictoropsAlertNotifier';

    /**
     * Returns true if the given object is an instance of VictoropsAlertNotifier.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VictoropsAlertNotifier {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VictoropsAlertNotifier.__pulumiType;
    }

    public readonly apiKey!: pulumi.Output<string>;
    public readonly apiUrl!: pulumi.Output<string | undefined>;
    public readonly basicAuthPassword!: pulumi.Output<string | undefined>;
    public readonly basicAuthUsername!: pulumi.Output<string | undefined>;
    public readonly bearerToken!: pulumi.Output<string | undefined>;
    public readonly customFields!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly entityDisplayName!: pulumi.Output<string | undefined>;
    public readonly messageType!: pulumi.Output<string | undefined>;
    public readonly monitoringTool!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * @deprecated custom proxy URLs are not supported
     */
    public readonly proxyUrl!: pulumi.Output<string | undefined>;
    public readonly routingKey!: pulumi.Output<string>;
    public readonly sendResolved!: pulumi.Output<boolean | undefined>;
    public readonly slug!: pulumi.Output<string>;
    public readonly stateMessage!: pulumi.Output<string | undefined>;
    public readonly tlsInsecureSkipVerify!: pulumi.Output<boolean | undefined>;

    /**
     * Create a VictoropsAlertNotifier resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VictoropsAlertNotifierArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VictoropsAlertNotifierArgs | VictoropsAlertNotifierState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VictoropsAlertNotifierState | undefined;
            resourceInputs["apiKey"] = state ? state.apiKey : undefined;
            resourceInputs["apiUrl"] = state ? state.apiUrl : undefined;
            resourceInputs["basicAuthPassword"] = state ? state.basicAuthPassword : undefined;
            resourceInputs["basicAuthUsername"] = state ? state.basicAuthUsername : undefined;
            resourceInputs["bearerToken"] = state ? state.bearerToken : undefined;
            resourceInputs["customFields"] = state ? state.customFields : undefined;
            resourceInputs["entityDisplayName"] = state ? state.entityDisplayName : undefined;
            resourceInputs["messageType"] = state ? state.messageType : undefined;
            resourceInputs["monitoringTool"] = state ? state.monitoringTool : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["proxyUrl"] = state ? state.proxyUrl : undefined;
            resourceInputs["routingKey"] = state ? state.routingKey : undefined;
            resourceInputs["sendResolved"] = state ? state.sendResolved : undefined;
            resourceInputs["slug"] = state ? state.slug : undefined;
            resourceInputs["stateMessage"] = state ? state.stateMessage : undefined;
            resourceInputs["tlsInsecureSkipVerify"] = state ? state.tlsInsecureSkipVerify : undefined;
        } else {
            const args = argsOrState as VictoropsAlertNotifierArgs | undefined;
            if ((!args || args.apiKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiKey'");
            }
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            if ((!args || args.routingKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'routingKey'");
            }
            resourceInputs["apiKey"] = args?.apiKey ? pulumi.secret(args.apiKey) : undefined;
            resourceInputs["apiUrl"] = args ? args.apiUrl : undefined;
            resourceInputs["basicAuthPassword"] = args?.basicAuthPassword ? pulumi.secret(args.basicAuthPassword) : undefined;
            resourceInputs["basicAuthUsername"] = args ? args.basicAuthUsername : undefined;
            resourceInputs["bearerToken"] = args ? args.bearerToken : undefined;
            resourceInputs["customFields"] = args ? args.customFields : undefined;
            resourceInputs["entityDisplayName"] = args ? args.entityDisplayName : undefined;
            resourceInputs["messageType"] = args ? args.messageType : undefined;
            resourceInputs["monitoringTool"] = args ? args.monitoringTool : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["proxyUrl"] = args ? args.proxyUrl : undefined;
            resourceInputs["routingKey"] = args ? args.routingKey : undefined;
            resourceInputs["sendResolved"] = args ? args.sendResolved : undefined;
            resourceInputs["slug"] = args ? args.slug : undefined;
            resourceInputs["stateMessage"] = args ? args.stateMessage : undefined;
            resourceInputs["tlsInsecureSkipVerify"] = args ? args.tlsInsecureSkipVerify : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["apiKey", "basicAuthPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(VictoropsAlertNotifier.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VictoropsAlertNotifier resources.
 */
export interface VictoropsAlertNotifierState {
    apiKey?: pulumi.Input<string>;
    apiUrl?: pulumi.Input<string>;
    basicAuthPassword?: pulumi.Input<string>;
    basicAuthUsername?: pulumi.Input<string>;
    bearerToken?: pulumi.Input<string>;
    customFields?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    entityDisplayName?: pulumi.Input<string>;
    messageType?: pulumi.Input<string>;
    monitoringTool?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * @deprecated custom proxy URLs are not supported
     */
    proxyUrl?: pulumi.Input<string>;
    routingKey?: pulumi.Input<string>;
    sendResolved?: pulumi.Input<boolean>;
    slug?: pulumi.Input<string>;
    stateMessage?: pulumi.Input<string>;
    tlsInsecureSkipVerify?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a VictoropsAlertNotifier resource.
 */
export interface VictoropsAlertNotifierArgs {
    apiKey: pulumi.Input<string>;
    apiUrl?: pulumi.Input<string>;
    basicAuthPassword?: pulumi.Input<string>;
    basicAuthUsername?: pulumi.Input<string>;
    bearerToken?: pulumi.Input<string>;
    customFields?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    entityDisplayName?: pulumi.Input<string>;
    messageType?: pulumi.Input<string>;
    monitoringTool?: pulumi.Input<string>;
    name: pulumi.Input<string>;
    /**
     * @deprecated custom proxy URLs are not supported
     */
    proxyUrl?: pulumi.Input<string>;
    routingKey: pulumi.Input<string>;
    sendResolved?: pulumi.Input<boolean>;
    slug?: pulumi.Input<string>;
    stateMessage?: pulumi.Input<string>;
    tlsInsecureSkipVerify?: pulumi.Input<boolean>;
}
