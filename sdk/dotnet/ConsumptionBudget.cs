// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Chronosphere.Pulumi
{
    [PulumiResourceType("chronosphere:index/consumptionBudget:ConsumptionBudget")]
    public partial class ConsumptionBudget : global::Pulumi.CustomResource
    {
        [Output("alertActionConfig")]
        public Output<Outputs.ConsumptionBudgetAlertActionConfig?> AlertActionConfig { get; private set; } = null!;

        [Output("consumptionConfigId")]
        public Output<string> ConsumptionConfigId { get; private set; } = null!;

        [Output("defaultPriority")]
        public Output<int?> DefaultPriority { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("notificationPolicyId")]
        public Output<string?> NotificationPolicyId { get; private set; } = null!;

        [Output("partitionSlugPath")]
        public Output<string?> PartitionSlugPath { get; private set; } = null!;

        [Output("priorities")]
        public Output<ImmutableArray<Outputs.ConsumptionBudgetPriority>> Priorities { get; private set; } = null!;

        [Output("resource")]
        public Output<string?> Resource { get; private set; } = null!;

        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        [Output("thresholds")]
        public Output<ImmutableArray<Outputs.ConsumptionBudgetThreshold>> Thresholds { get; private set; } = null!;


        /// <summary>
        /// Create a ConsumptionBudget resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConsumptionBudget(string name, ConsumptionBudgetArgs args, CustomResourceOptions? options = null)
            : base("chronosphere:index/consumptionBudget:ConsumptionBudget", name, args ?? new ConsumptionBudgetArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConsumptionBudget(string name, Input<string> id, ConsumptionBudgetState? state = null, CustomResourceOptions? options = null)
            : base("chronosphere:index/consumptionBudget:ConsumptionBudget", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/chronosphereio",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConsumptionBudget resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConsumptionBudget Get(string name, Input<string> id, ConsumptionBudgetState? state = null, CustomResourceOptions? options = null)
        {
            return new ConsumptionBudget(name, id, state, options);
        }
    }

    public sealed class ConsumptionBudgetArgs : global::Pulumi.ResourceArgs
    {
        [Input("alertActionConfig")]
        public Input<Inputs.ConsumptionBudgetAlertActionConfigArgs>? AlertActionConfig { get; set; }

        [Input("consumptionConfigId", required: true)]
        public Input<string> ConsumptionConfigId { get; set; } = null!;

        [Input("defaultPriority")]
        public Input<int>? DefaultPriority { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("notificationPolicyId")]
        public Input<string>? NotificationPolicyId { get; set; }

        [Input("partitionSlugPath")]
        public Input<string>? PartitionSlugPath { get; set; }

        [Input("priorities")]
        private InputList<Inputs.ConsumptionBudgetPriorityArgs>? _priorities;
        public InputList<Inputs.ConsumptionBudgetPriorityArgs> Priorities
        {
            get => _priorities ?? (_priorities = new InputList<Inputs.ConsumptionBudgetPriorityArgs>());
            set => _priorities = value;
        }

        [Input("resource")]
        public Input<string>? Resource { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("thresholds")]
        private InputList<Inputs.ConsumptionBudgetThresholdArgs>? _thresholds;
        public InputList<Inputs.ConsumptionBudgetThresholdArgs> Thresholds
        {
            get => _thresholds ?? (_thresholds = new InputList<Inputs.ConsumptionBudgetThresholdArgs>());
            set => _thresholds = value;
        }

        public ConsumptionBudgetArgs()
        {
        }
        public static new ConsumptionBudgetArgs Empty => new ConsumptionBudgetArgs();
    }

    public sealed class ConsumptionBudgetState : global::Pulumi.ResourceArgs
    {
        [Input("alertActionConfig")]
        public Input<Inputs.ConsumptionBudgetAlertActionConfigGetArgs>? AlertActionConfig { get; set; }

        [Input("consumptionConfigId")]
        public Input<string>? ConsumptionConfigId { get; set; }

        [Input("defaultPriority")]
        public Input<int>? DefaultPriority { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("notificationPolicyId")]
        public Input<string>? NotificationPolicyId { get; set; }

        [Input("partitionSlugPath")]
        public Input<string>? PartitionSlugPath { get; set; }

        [Input("priorities")]
        private InputList<Inputs.ConsumptionBudgetPriorityGetArgs>? _priorities;
        public InputList<Inputs.ConsumptionBudgetPriorityGetArgs> Priorities
        {
            get => _priorities ?? (_priorities = new InputList<Inputs.ConsumptionBudgetPriorityGetArgs>());
            set => _priorities = value;
        }

        [Input("resource")]
        public Input<string>? Resource { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("thresholds")]
        private InputList<Inputs.ConsumptionBudgetThresholdGetArgs>? _thresholds;
        public InputList<Inputs.ConsumptionBudgetThresholdGetArgs> Thresholds
        {
            get => _thresholds ?? (_thresholds = new InputList<Inputs.ConsumptionBudgetThresholdGetArgs>());
            set => _thresholds = value;
        }

        public ConsumptionBudgetState()
        {
        }
        public static new ConsumptionBudgetState Empty => new ConsumptionBudgetState();
    }
}
