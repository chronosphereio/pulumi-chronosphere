// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Chronosphere.Pulumi.Chronosphere
{
    public static class ServiceDataSource
    {
        public static Task<ServiceDataSourceResult> InvokeAsync(ServiceDataSourceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<ServiceDataSourceResult>("chronosphere:index/serviceDataSource:ServiceDataSource", args ?? new ServiceDataSourceArgs(), options.WithDefaults());

        public static Output<ServiceDataSourceResult> Invoke(ServiceDataSourceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<ServiceDataSourceResult>("chronosphere:index/serviceDataSource:ServiceDataSource", args ?? new ServiceDataSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class ServiceDataSourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("slug", required: true)]
        public string Slug { get; set; } = null!;

        public ServiceDataSourceArgs()
        {
        }
        public static new ServiceDataSourceArgs Empty => new ServiceDataSourceArgs();
    }

    public sealed class ServiceDataSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        public ServiceDataSourceInvokeArgs()
        {
        }
        public static new ServiceDataSourceInvokeArgs Empty => new ServiceDataSourceInvokeArgs();
    }


    [OutputType]
    public sealed class ServiceDataSourceResult
    {
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string Slug;

        [OutputConstructor]
        private ServiceDataSourceResult(
            string description,

            string id,

            string name,

            string slug)
        {
            Description = description;
            Id = id;
            Name = name;
            Slug = slug;
        }
    }
}
