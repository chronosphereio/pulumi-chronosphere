// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Chronosphere.Pulumi
{
    [PulumiResourceType("chronosphere:index/rollupRule:RollupRule")]
    public partial class RollupRule : global::Pulumi.CustomResource
    {
        [Output("aggregation")]
        public Output<string?> Aggregation { get; private set; } = null!;

        [Output("bucketId")]
        public Output<string?> BucketId { get; private set; } = null!;

        [Output("dropRaw")]
        public Output<bool?> DropRaw { get; private set; } = null!;

        [Output("excludeBies")]
        public Output<ImmutableArray<string>> ExcludeBies { get; private set; } = null!;

        [Output("filter")]
        public Output<string> Filter { get; private set; } = null!;

        [Output("graphiteLabelPolicy")]
        public Output<Outputs.RollupRuleGraphiteLabelPolicy?> GraphiteLabelPolicy { get; private set; } = null!;

        [Output("groupBies")]
        public Output<ImmutableArray<string>> GroupBies { get; private set; } = null!;

        [Output("interval")]
        public Output<string?> Interval { get; private set; } = null!;

        [Output("metricType")]
        public Output<string> MetricType { get; private set; } = null!;

        [Output("metricTypeTag")]
        public Output<bool?> MetricTypeTag { get; private set; } = null!;

        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("newMetric")]
        public Output<string?> NewMetric { get; private set; } = null!;

        [Output("permissive")]
        public Output<bool?> Permissive { get; private set; } = null!;

        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        [Output("storagePolicies")]
        public Output<Outputs.RollupRuleStoragePolicies> StoragePolicies { get; private set; } = null!;


        /// <summary>
        /// Create a RollupRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RollupRule(string name, RollupRuleArgs args, CustomResourceOptions? options = null)
            : base("chronosphere:index/rollupRule:RollupRule", name, args ?? new RollupRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RollupRule(string name, Input<string> id, RollupRuleState? state = null, CustomResourceOptions? options = null)
            : base("chronosphere:index/rollupRule:RollupRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RollupRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RollupRule Get(string name, Input<string> id, RollupRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new RollupRule(name, id, state, options);
        }
    }

    public sealed class RollupRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("aggregation")]
        public Input<string>? Aggregation { get; set; }

        [Input("bucketId")]
        public Input<string>? BucketId { get; set; }

        [Input("dropRaw")]
        public Input<bool>? DropRaw { get; set; }

        [Input("excludeBies")]
        private InputList<string>? _excludeBies;
        public InputList<string> ExcludeBies
        {
            get => _excludeBies ?? (_excludeBies = new InputList<string>());
            set => _excludeBies = value;
        }

        [Input("filter", required: true)]
        public Input<string> Filter { get; set; } = null!;

        [Input("graphiteLabelPolicy")]
        public Input<Inputs.RollupRuleGraphiteLabelPolicyArgs>? GraphiteLabelPolicy { get; set; }

        [Input("groupBies")]
        private InputList<string>? _groupBies;
        public InputList<string> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<string>());
            set => _groupBies = value;
        }

        [Input("interval")]
        public Input<string>? Interval { get; set; }

        [Input("metricType", required: true)]
        public Input<string> MetricType { get; set; } = null!;

        [Input("metricTypeTag")]
        public Input<bool>? MetricTypeTag { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("newMetric")]
        public Input<string>? NewMetric { get; set; }

        [Input("permissive")]
        public Input<bool>? Permissive { get; set; }

        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        [Input("storagePolicies")]
        public Input<Inputs.RollupRuleStoragePoliciesArgs>? StoragePolicies { get; set; }

        public RollupRuleArgs()
        {
        }
        public static new RollupRuleArgs Empty => new RollupRuleArgs();
    }

    public sealed class RollupRuleState : global::Pulumi.ResourceArgs
    {
        [Input("aggregation")]
        public Input<string>? Aggregation { get; set; }

        [Input("bucketId")]
        public Input<string>? BucketId { get; set; }

        [Input("dropRaw")]
        public Input<bool>? DropRaw { get; set; }

        [Input("excludeBies")]
        private InputList<string>? _excludeBies;
        public InputList<string> ExcludeBies
        {
            get => _excludeBies ?? (_excludeBies = new InputList<string>());
            set => _excludeBies = value;
        }

        [Input("filter")]
        public Input<string>? Filter { get; set; }

        [Input("graphiteLabelPolicy")]
        public Input<Inputs.RollupRuleGraphiteLabelPolicyGetArgs>? GraphiteLabelPolicy { get; set; }

        [Input("groupBies")]
        private InputList<string>? _groupBies;
        public InputList<string> GroupBies
        {
            get => _groupBies ?? (_groupBies = new InputList<string>());
            set => _groupBies = value;
        }

        [Input("interval")]
        public Input<string>? Interval { get; set; }

        [Input("metricType")]
        public Input<string>? MetricType { get; set; }

        [Input("metricTypeTag")]
        public Input<bool>? MetricTypeTag { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("newMetric")]
        public Input<string>? NewMetric { get; set; }

        [Input("permissive")]
        public Input<bool>? Permissive { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("storagePolicies")]
        public Input<Inputs.RollupRuleStoragePoliciesGetArgs>? StoragePolicies { get; set; }

        public RollupRuleState()
        {
        }
        public static new RollupRuleState Empty => new RollupRuleState();
    }
}
