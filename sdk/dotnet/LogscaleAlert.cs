// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Chronosphere.Pulumi
{
    [PulumiResourceType("chronosphere:index/logscaleAlert:LogscaleAlert")]
    public partial class LogscaleAlert : global::Pulumi.CustomResource
    {
        [Output("actionIds")]
        public Output<ImmutableArray<string>> ActionIds { get; private set; } = null!;

        [Output("alertType")]
        public Output<string> AlertType { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("disabled")]
        public Output<bool?> Disabled { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("query")]
        public Output<string?> Query { get; private set; } = null!;

        [Output("repository")]
        public Output<string> Repository { get; private set; } = null!;

        /// <summary>
        /// Email of the user that the alert runs on behalf of
        /// </summary>
        [Output("runAsUser")]
        public Output<string> RunAsUser { get; private set; } = null!;

        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// Required for STANDARD type alerts, optional for FILTER type alerts
        /// </summary>
        [Output("throttleDuration")]
        public Output<string?> ThrottleDuration { get; private set; } = null!;

        [Output("throttleField")]
        public Output<string?> ThrottleField { get; private set; } = null!;

        /// <summary>
        /// Required for STANDARD type alerts, ignored for FILTER type alerts
        /// </summary>
        [Output("timeWindow")]
        public Output<string?> TimeWindow { get; private set; } = null!;


        /// <summary>
        /// Create a LogscaleAlert resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogscaleAlert(string name, LogscaleAlertArgs args, CustomResourceOptions? options = null)
            : base("chronosphere:index/logscaleAlert:LogscaleAlert", name, args ?? new LogscaleAlertArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogscaleAlert(string name, Input<string> id, LogscaleAlertState? state = null, CustomResourceOptions? options = null)
            : base("chronosphere:index/logscaleAlert:LogscaleAlert", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogscaleAlert resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogscaleAlert Get(string name, Input<string> id, LogscaleAlertState? state = null, CustomResourceOptions? options = null)
        {
            return new LogscaleAlert(name, id, state, options);
        }
    }

    public sealed class LogscaleAlertArgs : global::Pulumi.ResourceArgs
    {
        [Input("actionIds")]
        private InputList<string>? _actionIds;
        public InputList<string> ActionIds
        {
            get => _actionIds ?? (_actionIds = new InputList<string>());
            set => _actionIds = value;
        }

        [Input("alertType", required: true)]
        public Input<string> AlertType { get; set; } = null!;

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("query")]
        public Input<string>? Query { get; set; }

        [Input("repository", required: true)]
        public Input<string> Repository { get; set; } = null!;

        /// <summary>
        /// Email of the user that the alert runs on behalf of
        /// </summary>
        [Input("runAsUser", required: true)]
        public Input<string> RunAsUser { get; set; } = null!;

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Required for STANDARD type alerts, optional for FILTER type alerts
        /// </summary>
        [Input("throttleDuration")]
        public Input<string>? ThrottleDuration { get; set; }

        [Input("throttleField")]
        public Input<string>? ThrottleField { get; set; }

        /// <summary>
        /// Required for STANDARD type alerts, ignored for FILTER type alerts
        /// </summary>
        [Input("timeWindow")]
        public Input<string>? TimeWindow { get; set; }

        public LogscaleAlertArgs()
        {
        }
        public static new LogscaleAlertArgs Empty => new LogscaleAlertArgs();
    }

    public sealed class LogscaleAlertState : global::Pulumi.ResourceArgs
    {
        [Input("actionIds")]
        private InputList<string>? _actionIds;
        public InputList<string> ActionIds
        {
            get => _actionIds ?? (_actionIds = new InputList<string>());
            set => _actionIds = value;
        }

        [Input("alertType")]
        public Input<string>? AlertType { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("disabled")]
        public Input<bool>? Disabled { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("query")]
        public Input<string>? Query { get; set; }

        [Input("repository")]
        public Input<string>? Repository { get; set; }

        /// <summary>
        /// Email of the user that the alert runs on behalf of
        /// </summary>
        [Input("runAsUser")]
        public Input<string>? RunAsUser { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// Required for STANDARD type alerts, optional for FILTER type alerts
        /// </summary>
        [Input("throttleDuration")]
        public Input<string>? ThrottleDuration { get; set; }

        [Input("throttleField")]
        public Input<string>? ThrottleField { get; set; }

        /// <summary>
        /// Required for STANDARD type alerts, ignored for FILTER type alerts
        /// </summary>
        [Input("timeWindow")]
        public Input<string>? TimeWindow { get; set; }

        public LogscaleAlertState()
        {
        }
        public static new LogscaleAlertState Empty => new LogscaleAlertState();
    }
}
