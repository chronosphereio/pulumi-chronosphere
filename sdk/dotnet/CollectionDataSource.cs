// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Chronosphere.Pulumi
{
    public static class CollectionDataSource
    {
        public static Task<CollectionDataSourceResult> InvokeAsync(CollectionDataSourceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<CollectionDataSourceResult>("chronosphere:index/collectionDataSource:CollectionDataSource", args ?? new CollectionDataSourceArgs(), options.WithDefaults());

        public static Output<CollectionDataSourceResult> Invoke(CollectionDataSourceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<CollectionDataSourceResult>("chronosphere:index/collectionDataSource:CollectionDataSource", args ?? new CollectionDataSourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class CollectionDataSourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("slug")]
        public string? Slug { get; set; }

        public CollectionDataSourceArgs()
        {
        }
        public static new CollectionDataSourceArgs Empty => new CollectionDataSourceArgs();
    }

    public sealed class CollectionDataSourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("slug")]
        public Input<string>? Slug { get; set; }

        public CollectionDataSourceInvokeArgs()
        {
        }
        public static new CollectionDataSourceInvokeArgs Empty => new CollectionDataSourceInvokeArgs();
    }


    [OutputType]
    public sealed class CollectionDataSourceResult
    {
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly string? Slug;

        [OutputConstructor]
        private CollectionDataSourceResult(
            string description,

            string id,

            string name,

            string? slug)
        {
            Description = description;
            Id = id;
            Name = name;
            Slug = slug;
        }
    }
}
