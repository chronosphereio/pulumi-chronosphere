// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Chronosphere.Pulumi
{
    [PulumiResourceType("chronosphere:index/mappingRule:MappingRule")]
    public partial class MappingRule : global::Pulumi.CustomResource
    {
        [Output("aggregations")]
        public Output<string?> Aggregations { get; private set; } = null!;

        [Output("bucketId")]
        public Output<string?> BucketId { get; private set; } = null!;

        [Output("drop")]
        public Output<bool?> Drop { get; private set; } = null!;

        [Output("dropTimestamp")]
        public Output<bool?> DropTimestamp { get; private set; } = null!;

        [Output("filter")]
        public Output<string> Filter { get; private set; } = null!;

        [Output("interval")]
        public Output<string> Interval { get; private set; } = null!;

        [Output("mode")]
        public Output<string?> Mode { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        [Output("storagePolicy")]
        public Output<Outputs.MappingRuleStoragePolicy?> StoragePolicy { get; private set; } = null!;


        /// <summary>
        /// Create a MappingRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MappingRule(string name, MappingRuleArgs args, CustomResourceOptions? options = null)
            : base("chronosphere:index/mappingRule:MappingRule", name, args ?? new MappingRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MappingRule(string name, Input<string> id, MappingRuleState? state = null, CustomResourceOptions? options = null)
            : base("chronosphere:index/mappingRule:MappingRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/chronosphereio",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MappingRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MappingRule Get(string name, Input<string> id, MappingRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new MappingRule(name, id, state, options);
        }
    }

    public sealed class MappingRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("aggregations")]
        public Input<string>? Aggregations { get; set; }

        [Input("bucketId")]
        public Input<string>? BucketId { get; set; }

        [Input("drop")]
        public Input<bool>? Drop { get; set; }

        [Input("dropTimestamp")]
        public Input<bool>? DropTimestamp { get; set; }

        [Input("filter", required: true)]
        public Input<string> Filter { get; set; } = null!;

        [Input("interval")]
        public Input<string>? Interval { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("storagePolicy")]
        public Input<Inputs.MappingRuleStoragePolicyArgs>? StoragePolicy { get; set; }

        public MappingRuleArgs()
        {
        }
        public static new MappingRuleArgs Empty => new MappingRuleArgs();
    }

    public sealed class MappingRuleState : global::Pulumi.ResourceArgs
    {
        [Input("aggregations")]
        public Input<string>? Aggregations { get; set; }

        [Input("bucketId")]
        public Input<string>? BucketId { get; set; }

        [Input("drop")]
        public Input<bool>? Drop { get; set; }

        [Input("dropTimestamp")]
        public Input<bool>? DropTimestamp { get; set; }

        [Input("filter")]
        public Input<string>? Filter { get; set; }

        [Input("interval")]
        public Input<string>? Interval { get; set; }

        [Input("mode")]
        public Input<string>? Mode { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("storagePolicy")]
        public Input<Inputs.MappingRuleStoragePolicyGetArgs>? StoragePolicy { get; set; }

        public MappingRuleState()
        {
        }
        public static new MappingRuleState Empty => new MappingRuleState();
    }
}
