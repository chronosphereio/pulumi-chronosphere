// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Chronosphere.Pulumi
{
    [PulumiResourceType("chronosphere:index/logscaleAction:LogscaleAction")]
    public partial class LogscaleAction : global::Pulumi.CustomResource
    {
        [Output("emailAction")]
        public Output<Outputs.LogscaleActionEmailAction?> EmailAction { get; private set; } = null!;

        [Output("humioAction")]
        public Output<Outputs.LogscaleActionHumioAction?> HumioAction { get; private set; } = null!;

        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("opsGenieAction")]
        public Output<Outputs.LogscaleActionOpsGenieAction?> OpsGenieAction { get; private set; } = null!;

        [Output("pagerDutyAction")]
        public Output<Outputs.LogscaleActionPagerDutyAction?> PagerDutyAction { get; private set; } = null!;

        [Output("repository")]
        public Output<string> Repository { get; private set; } = null!;

        [Output("slackAction")]
        public Output<Outputs.LogscaleActionSlackAction?> SlackAction { get; private set; } = null!;

        [Output("slackPostMessageAction")]
        public Output<Outputs.LogscaleActionSlackPostMessageAction?> SlackPostMessageAction { get; private set; } = null!;

        [Output("slug")]
        public Output<string> Slug { get; private set; } = null!;

        [Output("uploadFileAction")]
        public Output<Outputs.LogscaleActionUploadFileAction?> UploadFileAction { get; private set; } = null!;

        [Output("victorOpsAction")]
        public Output<Outputs.LogscaleActionVictorOpsAction?> VictorOpsAction { get; private set; } = null!;

        [Output("webhookAction")]
        public Output<Outputs.LogscaleActionWebhookAction?> WebhookAction { get; private set; } = null!;


        /// <summary>
        /// Create a LogscaleAction resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogscaleAction(string name, LogscaleActionArgs args, CustomResourceOptions? options = null)
            : base("chronosphere:index/logscaleAction:LogscaleAction", name, args ?? new LogscaleActionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogscaleAction(string name, Input<string> id, LogscaleActionState? state = null, CustomResourceOptions? options = null)
            : base("chronosphere:index/logscaleAction:LogscaleAction", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/chronosphereio",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogscaleAction resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogscaleAction Get(string name, Input<string> id, LogscaleActionState? state = null, CustomResourceOptions? options = null)
        {
            return new LogscaleAction(name, id, state, options);
        }
    }

    public sealed class LogscaleActionArgs : global::Pulumi.ResourceArgs
    {
        [Input("emailAction")]
        public Input<Inputs.LogscaleActionEmailActionArgs>? EmailAction { get; set; }

        [Input("humioAction")]
        public Input<Inputs.LogscaleActionHumioActionArgs>? HumioAction { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("opsGenieAction")]
        public Input<Inputs.LogscaleActionOpsGenieActionArgs>? OpsGenieAction { get; set; }

        [Input("pagerDutyAction")]
        public Input<Inputs.LogscaleActionPagerDutyActionArgs>? PagerDutyAction { get; set; }

        [Input("repository", required: true)]
        public Input<string> Repository { get; set; } = null!;

        [Input("slackAction")]
        public Input<Inputs.LogscaleActionSlackActionArgs>? SlackAction { get; set; }

        [Input("slackPostMessageAction")]
        public Input<Inputs.LogscaleActionSlackPostMessageActionArgs>? SlackPostMessageAction { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("uploadFileAction")]
        public Input<Inputs.LogscaleActionUploadFileActionArgs>? UploadFileAction { get; set; }

        [Input("victorOpsAction")]
        public Input<Inputs.LogscaleActionVictorOpsActionArgs>? VictorOpsAction { get; set; }

        [Input("webhookAction")]
        public Input<Inputs.LogscaleActionWebhookActionArgs>? WebhookAction { get; set; }

        public LogscaleActionArgs()
        {
        }
        public static new LogscaleActionArgs Empty => new LogscaleActionArgs();
    }

    public sealed class LogscaleActionState : global::Pulumi.ResourceArgs
    {
        [Input("emailAction")]
        public Input<Inputs.LogscaleActionEmailActionGetArgs>? EmailAction { get; set; }

        [Input("humioAction")]
        public Input<Inputs.LogscaleActionHumioActionGetArgs>? HumioAction { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("opsGenieAction")]
        public Input<Inputs.LogscaleActionOpsGenieActionGetArgs>? OpsGenieAction { get; set; }

        [Input("pagerDutyAction")]
        public Input<Inputs.LogscaleActionPagerDutyActionGetArgs>? PagerDutyAction { get; set; }

        [Input("repository")]
        public Input<string>? Repository { get; set; }

        [Input("slackAction")]
        public Input<Inputs.LogscaleActionSlackActionGetArgs>? SlackAction { get; set; }

        [Input("slackPostMessageAction")]
        public Input<Inputs.LogscaleActionSlackPostMessageActionGetArgs>? SlackPostMessageAction { get; set; }

        [Input("slug")]
        public Input<string>? Slug { get; set; }

        [Input("uploadFileAction")]
        public Input<Inputs.LogscaleActionUploadFileActionGetArgs>? UploadFileAction { get; set; }

        [Input("victorOpsAction")]
        public Input<Inputs.LogscaleActionVictorOpsActionGetArgs>? VictorOpsAction { get; set; }

        [Input("webhookAction")]
        public Input<Inputs.LogscaleActionWebhookActionGetArgs>? WebhookAction { get; set; }

        public LogscaleActionState()
        {
        }
        public static new LogscaleActionState Empty => new LogscaleActionState();
    }
}
