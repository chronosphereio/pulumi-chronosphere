// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Chronosphere.Pulumi
{
    [PulumiResourceType("chronosphere:index/logIngestConfig:LogIngestConfig")]
    public partial class LogIngestConfig : global::Pulumi.CustomResource
    {
        [Output("fieldNormalization")]
        public Output<Outputs.LogIngestConfigFieldNormalization?> FieldNormalization { get; private set; } = null!;

        [Output("fieldParsers")]
        public Output<ImmutableArray<Outputs.LogIngestConfigFieldParser>> FieldParsers { get; private set; } = null!;

        [Output("plaintextParsers")]
        public Output<ImmutableArray<Outputs.LogIngestConfigPlaintextParser>> PlaintextParsers { get; private set; } = null!;


        /// <summary>
        /// Create a LogIngestConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LogIngestConfig(string name, LogIngestConfigArgs? args = null, CustomResourceOptions? options = null)
            : base("chronosphere:index/logIngestConfig:LogIngestConfig", name, args ?? new LogIngestConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LogIngestConfig(string name, Input<string> id, LogIngestConfigState? state = null, CustomResourceOptions? options = null)
            : base("chronosphere:index/logIngestConfig:LogIngestConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/chronosphereio",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LogIngestConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LogIngestConfig Get(string name, Input<string> id, LogIngestConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new LogIngestConfig(name, id, state, options);
        }
    }

    public sealed class LogIngestConfigArgs : global::Pulumi.ResourceArgs
    {
        [Input("fieldNormalization")]
        public Input<Inputs.LogIngestConfigFieldNormalizationArgs>? FieldNormalization { get; set; }

        [Input("fieldParsers")]
        private InputList<Inputs.LogIngestConfigFieldParserArgs>? _fieldParsers;
        public InputList<Inputs.LogIngestConfigFieldParserArgs> FieldParsers
        {
            get => _fieldParsers ?? (_fieldParsers = new InputList<Inputs.LogIngestConfigFieldParserArgs>());
            set => _fieldParsers = value;
        }

        [Input("plaintextParsers")]
        private InputList<Inputs.LogIngestConfigPlaintextParserArgs>? _plaintextParsers;
        public InputList<Inputs.LogIngestConfigPlaintextParserArgs> PlaintextParsers
        {
            get => _plaintextParsers ?? (_plaintextParsers = new InputList<Inputs.LogIngestConfigPlaintextParserArgs>());
            set => _plaintextParsers = value;
        }

        public LogIngestConfigArgs()
        {
        }
        public static new LogIngestConfigArgs Empty => new LogIngestConfigArgs();
    }

    public sealed class LogIngestConfigState : global::Pulumi.ResourceArgs
    {
        [Input("fieldNormalization")]
        public Input<Inputs.LogIngestConfigFieldNormalizationGetArgs>? FieldNormalization { get; set; }

        [Input("fieldParsers")]
        private InputList<Inputs.LogIngestConfigFieldParserGetArgs>? _fieldParsers;
        public InputList<Inputs.LogIngestConfigFieldParserGetArgs> FieldParsers
        {
            get => _fieldParsers ?? (_fieldParsers = new InputList<Inputs.LogIngestConfigFieldParserGetArgs>());
            set => _fieldParsers = value;
        }

        [Input("plaintextParsers")]
        private InputList<Inputs.LogIngestConfigPlaintextParserGetArgs>? _plaintextParsers;
        public InputList<Inputs.LogIngestConfigPlaintextParserGetArgs> PlaintextParsers
        {
            get => _plaintextParsers ?? (_plaintextParsers = new InputList<Inputs.LogIngestConfigPlaintextParserGetArgs>());
            set => _plaintextParsers = value;
        }

        public LogIngestConfigState()
        {
        }
        public static new LogIngestConfigState Empty => new LogIngestConfigState();
    }
}
